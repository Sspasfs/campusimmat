<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_brick_1_1_math_1_1_big_decimal" xml:lang="fr">
<title>Référence de la classe BigDecimal</title>
<indexterm><primary>BigDecimal</primary></indexterm>
Graphe d&apos;héritage de BigDecimal:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de BigDecimal:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1ac468fb693b5590834cd4b51f2d3e2451">plus</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a6dce32ad93c74e03ef90b3323e4973b0">minus</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a1c315435ff00063776b1329c502bd047">multipliedBy</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1abbd5e2e2766cb0ecb6819631e55fe251">dividedBy</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>, ?int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>=null, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">roundingMode</link>=<link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a6ac2f091863cd4216e3a783e027240ec">exactlyDividedBy</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a48ba2199706f00142e6843db53b6301f">power</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">exponent</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a39c36e67443d8f11820995d101290ab5">quotient</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a75dfe9e6e90208994357a944dc914bc8">remainder</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a91a55c7de19230602b30de0d0665380d">quotientAndRemainder</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a8fed4a02934f43bbc02eb928626768f7">sqrt</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a4cd90f592e0e508d3a556ae2ca45d4e9">withPointMovedLeft</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">n</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1aae7684651195d1ccee0beecffd664bd4">withPointMovedRight</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">n</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1ad1f3c66012269694712d60cf88f53250">stripTrailingZeros</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1af3271c1a26c6f5de343ba9197e8f7a2e">abs</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a921d7d43bb1c26467cec43b599585d61">negated</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a49cef82ace4691910cc4465c47d1d9ec">compareTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a282c839169dc16e5d8bc47e8ac0f202b">getSign</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1ad15110078cae74312255a9a71d3e443f">getUnscaledValue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a3606ee52c9f2ab806a31980335da5373">getScale</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a9738da7efe80ce60831183f99f299e1a">getIntegralPart</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1ab1749e54c51fcc1fee862887e57b147b">getFractionalPart</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a28bab671b7cab201bf6a4cca0c6ec712">hasNonZeroFractionalPart</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a7b4bac2966b6e735a4aaa27d8b6fe37d">toBigInteger</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1af8b74778aff7e428d45509bb86408596">toBigDecimal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a14c7fa5ae37a286d34765aa00329dd7c">toBigRational</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1aee98ca780c25d3d40c4c2f02f238e25c">toScale</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">roundingMode</link>=<link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1af925bcc620434a34f7ee4029b0700765">toInt</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a3774efe5a19fbbc82f1206fbd6f6dd4b">toFloat</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a7516ca30af0db3cdbf9a7739b48ce91d">__toString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1ab1d6abfbdcd8c9dd63dfef565bd2cfcf">__serialize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a2fe5966ad9b8e1d91a37d3e055ac4938">__unserialize</link> (array $data)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a4d9813fea8525b19a1d370eeb8fe41d6">serialize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1aa95be162020f9db2ba2506f0edc7f7df">unserialize</link> ($value)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a16cd8b81780f0455648c2fe7dea88024">isEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1af51f1f4e067d1c220e829e82e8c07940">isLessThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ab2562129575f203e762e8355852b9e9f">isLessThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a499873810a5651051cf1b832076ce138">isGreaterThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a3c3170cb63239c1d9035106dcbf0b15b">isGreaterThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1adbd8bd9ed173174eb4509a853096e34d">isZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aaeeed6085a91098a429c53b3bc097587">isNegative</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aba628edfe03498fd1bd0828d17b2613d">isNegativeOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a017a082785367e089977172289090652">isPositive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a4f73a0b69e275b9db063d36214896c5b">isPositiveOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ad402d8679325bc514874370f02b5c2ac">jsonSerialize</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_decimal_1ad9bf5a7e7e57cde931b481360774a408">of</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a209d1d10fd680ee336b9dda5e84efa04">ofUnscaledValue</link> ($value, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>=0)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques statiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0ad355042f3be12fe2be77d05ddfc2bc">min</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a36cf4067863ecb459761a76ff631c854">max</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_decimal_1a871934de9251249d41379f6c4a400861">__construct</link> (string $value, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>=0)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Membres hérités additionnels    </title>
Fonctions membres protégées statiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0c70a63466a111d452e52e049429220e">create</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">args</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Immutable, arbitrary-precision signed decimal numbers.</para>

<para>@psalm-immutable </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a871934de9251249d41379f6c4a400861"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (string $value, int $scale = <computeroutput>0</computeroutput>
)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Protected constructor. Use a factory method to obtain an instance.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para>The unscaled value, validated. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$scale</entry><entry>
<para>The scale, validated. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ab1d6abfbdcd8c9dd63dfef565bd2cfcf"/><section>
    <title>__serialize()</title>
<indexterm><primary>__serialize</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>__serialize</secondary></indexterm>
<para><computeroutput>__serialize ( )</computeroutput></para>
<para>This method is required for serializing the object and SHOULD NOT be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a7516ca30af0db3cdbf9a7739b48ce91d"/><section>
    <title>__toString()</title>
<indexterm><primary>__toString</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>__toString</secondary></indexterm>
<para><computeroutput>__toString ( )</computeroutput></para>
<para>{
<para>Returns a string representation of this number.</para>

<para>The output of this method can be parsed by the <computeroutput><link linkend="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408">of()</link></computeroutput> factory method; this will yield an object equal to this one, without any information loss.</para>

<para><formalpara><title>Renvoie</title>

<para>string</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a7516ca30af0db3cdbf9a7739b48ce91d">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a2fe5966ad9b8e1d91a37d3e055ac4938"/><section>
    <title>__unserialize()</title>
<indexterm><primary>__unserialize</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>__unserialize</secondary></indexterm>
<para><computeroutput>__unserialize (array $data)</computeroutput></para>
<para>This method is only here to allow unserializing the object and cannot be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1af3271c1a26c6f5de343ba9197e8f7a2e"/><section>
    <title>abs()</title>
<indexterm><primary>abs</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>abs</secondary></indexterm>
<para><computeroutput>abs ( )</computeroutput></para>
<para>Returns the absolute value of this number.</para>

<para><formalpara><title>Renvoie</title>

<para>BigDecimal </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_af3271c1a26c6f5de343ba9197e8f7a2e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a49cef82ace4691910cc4465c47d1d9ec"/><section>
    <title>compareTo()</title>
<indexterm><primary>compareTo</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>compareTo</secondary></indexterm>
<para><computeroutput>compareTo ( $that)</computeroutput></para>
<para>{
<para>Compares this number to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link> | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int [-1,0,1] If <computeroutput>$this</computeroutput> is lower than, equal to, or greater than <computeroutput>$that</computeroutput>.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a49cef82ace4691910cc4465c47d1d9ec">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a49cef82ace4691910cc4465c47d1d9ec_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1abbd5e2e2766cb0ecb6819631e55fe251"/><section>
    <title>dividedBy()</title>
<indexterm><primary>dividedBy</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>dividedBy</secondary></indexterm>
<para><computeroutput>dividedBy ( $that, ?int $scale = <computeroutput>null</computeroutput>
, int $roundingMode = <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link></computeroutput>
)</computeroutput></para>
<para>Returns the result of the division of this number by the given one, at the given scale.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor. </para>
</entry>
                            </row>
                            <row>
<entry>int | null</entry><entry>$scale</entry><entry>
<para>The desired scale, or null to use the scale of this number. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$roundingMode</entry><entry>
<para>An optional rounding mode.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the scale or rounding mode is invalid. 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is invalid, is zero, or rounding was necessary. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_abbd5e2e2766cb0ecb6819631e55fe251_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_abbd5e2e2766cb0ecb6819631e55fe251_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a6ac2f091863cd4216e3a783e027240ec"/><section>
    <title>exactlyDividedBy()</title>
<indexterm><primary>exactlyDividedBy</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>exactlyDividedBy</secondary></indexterm>
<para><computeroutput>exactlyDividedBy ( $that)</computeroutput></para>
<para>Returns the exact result of the division of this number by the given one.</para>

<para>The scale of the result is automatically calculated to fit all the fraction digits.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the divisor is not a valid number, is not convertible to a BigDecimal, is zero, or the result yields an infinite number of digits. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a6ac2f091863cd4216e3a783e027240ec_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ab1749e54c51fcc1fee862887e57b147b"/><section>
    <title>getFractionalPart()</title>
<indexterm><primary>getFractionalPart</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>getFractionalPart</secondary></indexterm>
<para><computeroutput>getFractionalPart ( )</computeroutput></para>
<para>Returns a string representing the fractional part of this decimal number.</para>

<para>If the scale is zero, an empty string is returned.</para>

<para>Examples: <computeroutput>-123.456</computeroutput> =&gt; &apos;456&apos;, <computeroutput>123</computeroutput> =&gt; &apos;&apos;.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_ab1749e54c51fcc1fee862887e57b147b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a9738da7efe80ce60831183f99f299e1a"/><section>
    <title>getIntegralPart()</title>
<indexterm><primary>getIntegralPart</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>getIntegralPart</secondary></indexterm>
<para><computeroutput>getIntegralPart ( )</computeroutput></para>
<para>Returns a string representing the integral part of this decimal number.</para>

<para>Example: <computeroutput>-123.456</computeroutput> =&gt; <computeroutput>-123</computeroutput>.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a3606ee52c9f2ab806a31980335da5373"/><section>
    <title>getScale()</title>
<indexterm><primary>getScale</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>getScale</secondary></indexterm>
<para><computeroutput>getScale ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>int </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a282c839169dc16e5d8bc47e8ac0f202b"/><section>
    <title>getSign()</title>
<indexterm><primary>getSign</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>getSign</secondary></indexterm>
<para><computeroutput>getSign ( )</computeroutput></para>
<para>{
<para>Returns the sign of this number.</para>

<para><formalpara><title>Renvoie</title>

<para>int -1 if the number is negative, 0 if zero, 1 if positive.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a282c839169dc16e5d8bc47e8ac0f202b">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ad15110078cae74312255a9a71d3e443f"/><section>
    <title>getUnscaledValue()</title>
<indexterm><primary>getUnscaledValue</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>getUnscaledValue</secondary></indexterm>
<para><computeroutput>getUnscaledValue ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>BigInteger </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_ad15110078cae74312255a9a71d3e443f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a28bab671b7cab201bf6a4cca0c6ec712"/><section>
    <title>hasNonZeroFractionalPart()</title>
<indexterm><primary>hasNonZeroFractionalPart</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>hasNonZeroFractionalPart</secondary></indexterm>
<para><computeroutput>hasNonZeroFractionalPart ( )</computeroutput></para>
<para>Returns whether this decimal number has a non-zero fractional part.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a28bab671b7cab201bf6a4cca0c6ec712_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a6dce32ad93c74e03ef90b3323e4973b0"/><section>
    <title>minus()</title>
<indexterm><primary>minus</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>minus</secondary></indexterm>
<para><computeroutput>minus ( $that)</computeroutput></para>
<para>Returns the difference of this number and the given one.</para>

<para>The result has a scale of <computeroutput>max($this-&gt;scale, $that-&gt;scale)</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The number to subtract. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid, or is not convertible to a BigDecimal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a6dce32ad93c74e03ef90b3323e4973b0_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a1c315435ff00063776b1329c502bd047"/><section>
    <title>multipliedBy()</title>
<indexterm><primary>multipliedBy</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>multipliedBy</secondary></indexterm>
<para><computeroutput>multipliedBy ( $that)</computeroutput></para>
<para>Returns the product of this number and the given one.</para>

<para>The result has a scale of <computeroutput>$this-&gt;scale + $that-&gt;scale</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The multiplier. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the multiplier is not a valid number, or is not convertible to a BigDecimal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a1c315435ff00063776b1329c502bd047_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a921d7d43bb1c26467cec43b599585d61"/><section>
    <title>negated()</title>
<indexterm><primary>negated</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>negated</secondary></indexterm>
<para><computeroutput>negated ( )</computeroutput></para>
<para>Returns the negated value of this number.</para>

<para><formalpara><title>Renvoie</title>

<para>BigDecimal </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a921d7d43bb1c26467cec43b599585d61_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a921d7d43bb1c26467cec43b599585d61_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ad9bf5a7e7e57cde931b481360774a408"/><section>
    <title>of()</title>
<indexterm><primary>of</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>of</secondary></indexterm>
<para><computeroutput>static of ( $value)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates a BigDecimal of the given value.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the value cannot be converted to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-pure </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_ad9bf5a7e7e57cde931b481360774a408_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_ad9bf5a7e7e57cde931b481360774a408_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a209d1d10fd680ee336b9dda5e84efa04"/><section>
    <title>ofUnscaledValue()</title>
<indexterm><primary>ofUnscaledValue</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>ofUnscaledValue</secondary></indexterm>
<para><computeroutput>static ofUnscaledValue ( $value, int $scale = <computeroutput>0</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates a BigDecimal from an unscaled value and a scale.</para>

<para>Example: <computeroutput>(12345, 3)</computeroutput> will result in the BigDecimal <computeroutput>12.345</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$value</entry><entry>
<para>The unscaled value. Must be convertible to a BigInteger. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$scale</entry><entry>
<para>The scale of the number, positive or zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the scale is negative.</para>

<para>@psalm-pure </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a209d1d10fd680ee336b9dda5e84efa04_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ac468fb693b5590834cd4b51f2d3e2451"/><section>
    <title>plus()</title>
<indexterm><primary>plus</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>plus</secondary></indexterm>
<para><computeroutput>plus ( $that)</computeroutput></para>
<para>Returns the sum of this number and the given one.</para>

<para>The result has a scale of <computeroutput>max($this-&gt;scale, $that-&gt;scale)</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The number to add. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid, or is not convertible to a BigDecimal. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_ac468fb693b5590834cd4b51f2d3e2451_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a48ba2199706f00142e6843db53b6301f"/><section>
    <title>power()</title>
<indexterm><primary>power</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>power</secondary></indexterm>
<para><computeroutput>power (int $exponent)</computeroutput></para>
<para>Returns this number exponentiated to the given value.</para>

<para>The result has a scale of <computeroutput>$this-&gt;scale * $exponent</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$exponent</entry><entry>
<para>The exponent.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the exponent is not in the range 0 to 1,000,000. </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a48ba2199706f00142e6843db53b6301f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a39c36e67443d8f11820995d101290ab5"/><section>
    <title>quotient()</title>
<indexterm><primary>quotient</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>quotient</secondary></indexterm>
<para><computeroutput>quotient ( $that)</computeroutput></para>
<para>Returns the quotient of the division of this number by this given one.</para>

<para>The quotient has a scale of <computeroutput>0</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The quotient.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the divisor is not a valid decimal number, or is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a39c36e67443d8f11820995d101290ab5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a91a55c7de19230602b30de0d0665380d"/><section>
    <title>quotientAndRemainder()</title>
<indexterm><primary>quotientAndRemainder</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>quotientAndRemainder</secondary></indexterm>
<para><computeroutput>quotientAndRemainder ( $that)</computeroutput></para>
<para>Returns the quotient and remainder of the division of this number by the given one.</para>

<para>The quotient has a scale of <computeroutput>0</computeroutput>, and the remainder has a scale of <computeroutput>max($this-&gt;scale, $that-&gt;scale)</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal[] An array containing the quotient and the remainder.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the divisor is not a valid decimal number, or is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a91a55c7de19230602b30de0d0665380d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a75dfe9e6e90208994357a944dc914bc8"/><section>
    <title>remainder()</title>
<indexterm><primary>remainder</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>remainder</secondary></indexterm>
<para><computeroutput>remainder ( $that)</computeroutput></para>
<para>Returns the remainder of the division of this number by this given one.</para>

<para>The remainder has a scale of <computeroutput>max($this-&gt;scale, $that-&gt;scale)</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor. Must be convertible to a BigDecimal.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal The remainder.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the divisor is not a valid decimal number, or is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a75dfe9e6e90208994357a944dc914bc8_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a4d9813fea8525b19a1d370eeb8fe41d6"/><section>
    <title>serialize()</title>
<indexterm><primary>serialize</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>serialize</secondary></indexterm>
<para><computeroutput>serialize ( )</computeroutput></para>
<para>This method is required by interface Serializable and SHOULD NOT be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a8fed4a02934f43bbc02eb928626768f7"/><section>
    <title>sqrt()</title>
<indexterm><primary>sqrt</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>sqrt</secondary></indexterm>
<para><computeroutput>sqrt (int $scale)</computeroutput></para>
<para>Returns the square root of this number, rounded down to the given number of decimals.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$scale</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the scale is negative. 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>NegativeNumberException</entry><entry>
<para>If this number is negative. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a8fed4a02934f43bbc02eb928626768f7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1ad1f3c66012269694712d60cf88f53250"/><section>
    <title>stripTrailingZeros()</title>
<indexterm><primary>stripTrailingZeros</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>stripTrailingZeros</secondary></indexterm>
<para><computeroutput>stripTrailingZeros ( )</computeroutput></para>
<para>Returns a copy of this BigDecimal with any trailing zeros removed from the fractional part.</para>

<para><formalpara><title>Renvoie</title>

<para>BigDecimal </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1af8b74778aff7e428d45509bb86408596"/><section>
    <title>toBigDecimal()</title>
<indexterm><primary>toBigDecimal</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toBigDecimal</secondary></indexterm>
<para><computeroutput>toBigDecimal ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> without rounding.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1af8b74778aff7e428d45509bb86408596">BigNumber</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_af8b74778aff7e428d45509bb86408596_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a7b4bac2966b6e735a4aaa27d8b6fe37d"/><section>
    <title>toBigInteger()</title>
<indexterm><primary>toBigInteger</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toBigInteger</secondary></indexterm>
<para><computeroutput>toBigInteger ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> without rounding.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a7b4bac2966b6e735a4aaa27d8b6fe37d">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a7b4bac2966b6e735a4aaa27d8b6fe37d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a7b4bac2966b6e735a4aaa27d8b6fe37d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a14c7fa5ae37a286d34765aa00329dd7c"/><section>
    <title>toBigRational()</title>
<indexterm><primary>toBigRational</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toBigRational</secondary></indexterm>
<para><computeroutput>toBigRational ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_rational">BigRational</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_rational">BigRational</link> The converted number.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a14c7fa5ae37a286d34765aa00329dd7c">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a14c7fa5ae37a286d34765aa00329dd7c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a3774efe5a19fbbc82f1206fbd6f6dd4b"/><section>
    <title>toFloat()</title>
<indexterm><primary>toFloat</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toFloat</secondary></indexterm>
<para><computeroutput>toFloat ( )</computeroutput></para>
<para>{
<para>Returns an approximation of this number as a floating-point value.</para>

<para>Note that this method can discard information as the precision of a floating-point value is inherently limited.</para>

<para>If the number is greater than the largest representable floating point number, positive infinity is returned. If the number is less than the smallest representable floating point number, negative infinity is returned.</para>

<para><formalpara><title>Renvoie</title>

<para>float The converted value.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a3774efe5a19fbbc82f1206fbd6f6dd4b">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1af925bcc620434a34f7ee4029b0700765"/><section>
    <title>toInt()</title>
<indexterm><primary>toInt</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toInt</secondary></indexterm>
<para><computeroutput>toInt ( )</computeroutput></para>
<para>{
<para>Returns the exact value of this number as a native integer.</para>

<para>If this number cannot be converted to a native integer without losing precision, an exception is thrown. Note that the acceptable range for an integer depends on the platform and differs for 32-bit and 64-bit.</para>

<para><formalpara><title>Renvoie</title>

<para>int The converted value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If this number cannot be exactly converted to a native integer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1af925bcc620434a34f7ee4029b0700765">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_af925bcc620434a34f7ee4029b0700765_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1aee98ca780c25d3d40c4c2f02f238e25c"/><section>
    <title>toScale()</title>
<indexterm><primary>toScale</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>toScale</secondary></indexterm>
<para><computeroutput>toScale (int $scale, int $roundingMode = <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link></computeroutput>
)</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> with the given scale, using rounding if necessary.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$scale</entry><entry>
<para>The scale of the resulting <computeroutput><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link></computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$roundingMode</entry><entry>
<para>A <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode">RoundingMode</link></computeroutput> constant.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link></para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to the given scale without rounding. This only applies when <link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link> is used.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1aee98ca780c25d3d40c4c2f02f238e25c">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_aee98ca780c25d3d40c4c2f02f238e25c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_aee98ca780c25d3d40c4c2f02f238e25c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1aa95be162020f9db2ba2506f0edc7f7df"/><section>
    <title>unserialize()</title>
<indexterm><primary>unserialize</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>unserialize</secondary></indexterm>
<para><computeroutput>unserialize ( $value)</computeroutput></para>
<para>This method is only here to implement interface Serializable and cannot be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1a4cd90f592e0e508d3a556ae2ca45d4e9"/><section>
    <title>withPointMovedLeft()</title>
<indexterm><primary>withPointMovedLeft</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>withPointMovedLeft</secondary></indexterm>
<para><computeroutput>withPointMovedLeft (int $n)</computeroutput></para>
<para>Returns a copy of this BigDecimal with the decimal point moved $n places to the left.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$n</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a4cd90f592e0e508d3a556ae2ca45d4e9_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_a4cd90f592e0e508d3a556ae2ca45d4e9_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_decimal_1aae7684651195d1ccee0beecffd664bd4"/><section>
    <title>withPointMovedRight()</title>
<indexterm><primary>withPointMovedRight</primary><secondary>BigDecimal</secondary></indexterm>
<indexterm><primary>BigDecimal</primary><secondary>withPointMovedRight</secondary></indexterm>
<para><computeroutput>withPointMovedRight (int $n)</computeroutput></para>
<para>Returns a copy of this BigDecimal with the decimal point moved $n places to the right.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$n</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_aae7684651195d1ccee0beecffd664bd4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_decimal_aae7684651195d1ccee0beecffd664bd4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/brick/math/src/<link linkend="__big_decimal_8php">BigDecimal.php</link></section>
</section>
