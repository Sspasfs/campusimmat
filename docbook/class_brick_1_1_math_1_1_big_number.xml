<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_brick_1_1_math_1_1_big_number" xml:lang="fr">
<title>Référence de la classe BigNumber</title>
<indexterm><primary>BigNumber</primary></indexterm>
Graphe d&apos;héritage de BigNumber:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de BigNumber:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a16cd8b81780f0455648c2fe7dea88024">isEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1af51f1f4e067d1c220e829e82e8c07940">isLessThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ab2562129575f203e762e8355852b9e9f">isLessThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a499873810a5651051cf1b832076ce138">isGreaterThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a3c3170cb63239c1d9035106dcbf0b15b">isGreaterThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1adbd8bd9ed173174eb4509a853096e34d">isZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aaeeed6085a91098a429c53b3bc097587">isNegative</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aba628edfe03498fd1bd0828d17b2613d">isNegativeOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a017a082785367e089977172289090652">isPositive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a4f73a0b69e275b9db063d36214896c5b">isPositiveOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a282c839169dc16e5d8bc47e8ac0f202b">getSign</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a49cef82ace4691910cc4465c47d1d9ec">compareTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a7b4bac2966b6e735a4aaa27d8b6fe37d">toBigInteger</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1af8b74778aff7e428d45509bb86408596">toBigDecimal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a14c7fa5ae37a286d34765aa00329dd7c">toBigRational</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aee98ca780c25d3d40c4c2f02f238e25c">toScale</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">roundingMode</link>=<link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1af925bcc620434a34f7ee4029b0700765">toInt</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a3774efe5a19fbbc82f1206fbd6f6dd4b">toFloat</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a7516ca30af0db3cdbf9a7739b48ce91d">__toString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ad402d8679325bc514874370f02b5c2ac">jsonSerialize</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408">of</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0ad355042f3be12fe2be77d05ddfc2bc">min</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a36cf4067863ecb459761a76ff631c854">max</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres protégées statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0c70a63466a111d452e52e049429220e">create</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">args</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Common interface for arbitrary-precision rational numbers.</para>

<para>@psalm-immutable </para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a7516ca30af0db3cdbf9a7739b48ce91d"/><section>
    <title>__toString()</title>
<indexterm><primary>__toString</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>__toString</secondary></indexterm>
<para><computeroutput>__toString ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns a string representation of this number.</para>

<para>The output of this method can be parsed by the <computeroutput>of()</computeroutput> factory method; this will yield an object equal to this one, without any information loss.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a7516ca30af0db3cdbf9a7739b48ce91d">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a7516ca30af0db3cdbf9a7739b48ce91d">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a7516ca30af0db3cdbf9a7739b48ce91d">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a7516ca30af0db3cdbf9a7739b48ce91d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a49cef82ace4691910cc4465c47d1d9ec"/><section>
    <title>compareTo()</title>
<indexterm><primary>compareTo</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>compareTo</secondary></indexterm>
<para><computeroutput>compareTo ( $that)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Compares this number to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int [-1,0,1] If <computeroutput>$this</computeroutput> is lower than, equal to, or greater than <computeroutput>$that</computeroutput>.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a49cef82ace4691910cc4465c47d1d9ec">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a49cef82ace4691910cc4465c47d1d9ec">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a49cef82ace4691910cc4465c47d1d9ec">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a49cef82ace4691910cc4465c47d1d9ec_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a0c70a63466a111d452e52e049429220e"/><section>
    <title>create()</title>
<indexterm><primary>create</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>create</secondary></indexterm>
<para><computeroutput>static create ( $args)<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Proxy method to access protected constructors from sibling classes. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a0c70a63466a111d452e52e049429220e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a282c839169dc16e5d8bc47e8ac0f202b"/><section>
    <title>getSign()</title>
<indexterm><primary>getSign</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>getSign</secondary></indexterm>
<para><computeroutput>getSign ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the sign of this number.</para>

<para><formalpara><title>Renvoie</title>

<para>int -1 if the number is negative, 0 if zero, 1 if positive. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a282c839169dc16e5d8bc47e8ac0f202b">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a282c839169dc16e5d8bc47e8ac0f202b">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a282c839169dc16e5d8bc47e8ac0f202b">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a282c839169dc16e5d8bc47e8ac0f202b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a16cd8b81780f0455648c2fe7dea88024"/><section>
    <title>isEqualTo()</title>
<indexterm><primary>isEqualTo</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isEqualTo</secondary></indexterm>
<para><computeroutput>isEqualTo ( $that)</computeroutput></para>
<para>Checks if this number is equal to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a16cd8b81780f0455648c2fe7dea88024_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a499873810a5651051cf1b832076ce138"/><section>
    <title>isGreaterThan()</title>
<indexterm><primary>isGreaterThan</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isGreaterThan</secondary></indexterm>
<para><computeroutput>isGreaterThan ( $that)</computeroutput></para>
<para>Checks if this number is strictly greater than the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a499873810a5651051cf1b832076ce138_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a3c3170cb63239c1d9035106dcbf0b15b"/><section>
    <title>isGreaterThanOrEqualTo()</title>
<indexterm><primary>isGreaterThanOrEqualTo</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isGreaterThanOrEqualTo</secondary></indexterm>
<para><computeroutput>isGreaterThanOrEqualTo ( $that)</computeroutput></para>
<para>Checks if this number is greater than or equal to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a3c3170cb63239c1d9035106dcbf0b15b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1af51f1f4e067d1c220e829e82e8c07940"/><section>
    <title>isLessThan()</title>
<indexterm><primary>isLessThan</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isLessThan</secondary></indexterm>
<para><computeroutput>isLessThan ( $that)</computeroutput></para>
<para>Checks if this number is strictly lower than the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_af51f1f4e067d1c220e829e82e8c07940_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1ab2562129575f203e762e8355852b9e9f"/><section>
    <title>isLessThanOrEqualTo()</title>
<indexterm><primary>isLessThanOrEqualTo</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isLessThanOrEqualTo</secondary></indexterm>
<para><computeroutput>isLessThanOrEqualTo ( $that)</computeroutput></para>
<para>Checks if this number is lower than or equal to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_ab2562129575f203e762e8355852b9e9f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1aaeeed6085a91098a429c53b3bc097587"/><section>
    <title>isNegative()</title>
<indexterm><primary>isNegative</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isNegative</secondary></indexterm>
<para><computeroutput>isNegative ( )</computeroutput></para>
<para>Checks if this number is strictly negative.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_aaeeed6085a91098a429c53b3bc097587_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_aaeeed6085a91098a429c53b3bc097587_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1aba628edfe03498fd1bd0828d17b2613d"/><section>
    <title>isNegativeOrZero()</title>
<indexterm><primary>isNegativeOrZero</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isNegativeOrZero</secondary></indexterm>
<para><computeroutput>isNegativeOrZero ( )</computeroutput></para>
<para>Checks if this number is negative or zero.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_aba628edfe03498fd1bd0828d17b2613d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a017a082785367e089977172289090652"/><section>
    <title>isPositive()</title>
<indexterm><primary>isPositive</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isPositive</secondary></indexterm>
<para><computeroutput>isPositive ( )</computeroutput></para>
<para>Checks if this number is strictly positive.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a017a082785367e089977172289090652_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a4f73a0b69e275b9db063d36214896c5b"/><section>
    <title>isPositiveOrZero()</title>
<indexterm><primary>isPositiveOrZero</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isPositiveOrZero</secondary></indexterm>
<para><computeroutput>isPositiveOrZero ( )</computeroutput></para>
<para>Checks if this number is positive or zero.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a4f73a0b69e275b9db063d36214896c5b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a4f73a0b69e275b9db063d36214896c5b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1adbd8bd9ed173174eb4509a853096e34d"/><section>
    <title>isZero()</title>
<indexterm><primary>isZero</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>isZero</secondary></indexterm>
<para><computeroutput>isZero ( )</computeroutput></para>
<para>Checks if this number equals zero.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_adbd8bd9ed173174eb4509a853096e34d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_adbd8bd9ed173174eb4509a853096e34d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1ad402d8679325bc514874370f02b5c2ac"/><section>
    <title>jsonSerialize()</title>
<indexterm><primary>jsonSerialize</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>jsonSerialize</secondary></indexterm>
<para><computeroutput>jsonSerialize ( )</computeroutput></para>
<para>{} </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_ad402d8679325bc514874370f02b5c2ac_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a36cf4067863ecb459761a76ff631c854"/><section>
    <title>max()</title>
<indexterm><primary>max</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>max</secondary></indexterm>
<para><computeroutput>static max ( $values)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns the maximum of the given values.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber|int|float|string</entry><entry>
<para>...$values The numbers to compare. All the numbers need to be convertible to an instance of the class this method is called on.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>static The maximum value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If no values are given. 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If an argument is not valid.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-suppress LessSpecificReturnStatement @psalm-suppress MoreSpecificReturnType @psalm-pure </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a0ad355042f3be12fe2be77d05ddfc2bc"/><section>
    <title>min()</title>
<indexterm><primary>min</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>min</secondary></indexterm>
<para><computeroutput>static min ( $values)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns the minimum of the given values.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber|int|float|string</entry><entry>
<para>...$values The numbers to compare. All the numbers need to be convertible to an instance of the class this method is called on.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>static The minimum value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If no values are given. 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If an argument is not valid.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-suppress LessSpecificReturnStatement @psalm-suppress MoreSpecificReturnType @psalm-pure </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408"/><section>
    <title>of()</title>
<indexterm><primary>of</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>of</secondary></indexterm>
<para><computeroutput>static of ( $value)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates a BigNumber of the given value.</para>

<para>The concrete return type is dependent on the given value, with the following rules:</para>

<para><itemizedlist>
<listitem>
<para>BigNumber instances are returned as is</para>
</listitem><listitem>
<para>integer numbers are returned as BigInteger</para>
</listitem><listitem>
<para>floating point numbers are converted to a string then parsed as such</para>
</listitem><listitem>
<para>strings containing a <computeroutput>/</computeroutput> character are returned as BigRational</para>
</listitem><listitem>
<para>strings containing a <computeroutput>.</computeroutput> character or using an exponential notation are returned as BigDecimal</para>
</listitem><listitem>
<para>strings containing only digits with an optional leading <computeroutput>+</computeroutput> or <computeroutput>-</computeroutput> sign are returned as BigInteger</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigNumber</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>NumberFormatException</entry><entry>
<para>If the format of the number is not valid. </para>
</entry>
                            </row>
                            <row>
<entry>DivisionByZeroException</entry><entry>
<para>If the value represents a rational number with a denominator of zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-pure </para>

<para>@psalm-suppress RedundantCastGivenDocblockType We cannot trust the untyped $value here!</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1ad9bf5a7e7e57cde931b481360774a408">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1ad9bf5a7e7e57cde931b481360774a408">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1ad9bf5a7e7e57cde931b481360774a408">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_ad9bf5a7e7e57cde931b481360774a408_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1af8b74778aff7e428d45509bb86408596"/><section>
    <title>toBigDecimal()</title>
<indexterm><primary>toBigDecimal</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toBigDecimal</secondary></indexterm>
<para><computeroutput>toBigDecimal ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Converts this number to a BigDecimal.</para>

<para><formalpara><title>Renvoie</title>

<para>BigDecimal The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a BigDecimal without rounding. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1af8b74778aff7e428d45509bb86408596">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1af8b74778aff7e428d45509bb86408596">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1af8b74778aff7e428d45509bb86408596">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_af8b74778aff7e428d45509bb86408596_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a7b4bac2966b6e735a4aaa27d8b6fe37d"/><section>
    <title>toBigInteger()</title>
<indexterm><primary>toBigInteger</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toBigInteger</secondary></indexterm>
<para><computeroutput>toBigInteger ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Converts this number to a BigInteger.</para>

<para><formalpara><title>Renvoie</title>

<para>BigInteger The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a BigInteger without rounding. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a7b4bac2966b6e735a4aaa27d8b6fe37d">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a7b4bac2966b6e735a4aaa27d8b6fe37d">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a7b4bac2966b6e735a4aaa27d8b6fe37d">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a7b4bac2966b6e735a4aaa27d8b6fe37d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a14c7fa5ae37a286d34765aa00329dd7c"/><section>
    <title>toBigRational()</title>
<indexterm><primary>toBigRational</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toBigRational</secondary></indexterm>
<para><computeroutput>toBigRational ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Converts this number to a BigRational.</para>

<para><formalpara><title>Renvoie</title>

<para>BigRational The converted number. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a14c7fa5ae37a286d34765aa00329dd7c">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a14c7fa5ae37a286d34765aa00329dd7c">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a14c7fa5ae37a286d34765aa00329dd7c">BigRational</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_number_a14c7fa5ae37a286d34765aa00329dd7c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1a3774efe5a19fbbc82f1206fbd6f6dd4b"/><section>
    <title>toFloat()</title>
<indexterm><primary>toFloat</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toFloat</secondary></indexterm>
<para><computeroutput>toFloat ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns an approximation of this number as a floating-point value.</para>

<para>Note that this method can discard information as the precision of a floating-point value is inherently limited.</para>

<para>If the number is greater than the largest representable floating point number, positive infinity is returned. If the number is less than the smallest representable floating point number, negative infinity is returned.</para>

<para><formalpara><title>Renvoie</title>

<para>float The converted value. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1a3774efe5a19fbbc82f1206fbd6f6dd4b">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1a3774efe5a19fbbc82f1206fbd6f6dd4b">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1a3774efe5a19fbbc82f1206fbd6f6dd4b">BigRational</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1af925bcc620434a34f7ee4029b0700765"/><section>
    <title>toInt()</title>
<indexterm><primary>toInt</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toInt</secondary></indexterm>
<para><computeroutput>toInt ( )<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the exact value of this number as a native integer.</para>

<para>If this number cannot be converted to a native integer without losing precision, an exception is thrown. Note that the acceptable range for an integer depends on the platform and differs for 32-bit and 64-bit.</para>

<para><formalpara><title>Renvoie</title>

<para>int The converted value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If this number cannot be exactly converted to a native integer. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1af925bcc620434a34f7ee4029b0700765">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1af925bcc620434a34f7ee4029b0700765">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1af925bcc620434a34f7ee4029b0700765">BigRational</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_number_1aee98ca780c25d3d40c4c2f02f238e25c"/><section>
    <title>toScale()</title>
<indexterm><primary>toScale</primary><secondary>BigNumber</secondary></indexterm>
<indexterm><primary>BigNumber</primary><secondary>toScale</secondary></indexterm>
<para><computeroutput>toScale (int $scale, int $roundingMode = <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link></computeroutput>
)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Converts this number to a BigDecimal with the given scale, using rounding if necessary.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$scale</entry><entry>
<para>The scale of the resulting <computeroutput>BigDecimal</computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$roundingMode</entry><entry>
<para>A <computeroutput>RoundingMode</computeroutput> constant.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigDecimal</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to the given scale without rounding. This only applies when RoundingMode::UNNECESSARY is used. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_big_decimal_1aee98ca780c25d3d40c4c2f02f238e25c">BigDecimal</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer_1aee98ca780c25d3d40c4c2f02f238e25c">BigInteger</link>, et <link linkend="_class_brick_1_1_math_1_1_big_rational_1aee98ca780c25d3d40c4c2f02f238e25c">BigRational</link>.</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/brick/math/src/<link linkend="__big_number_8php">BigNumber.php</link></section>
</section>
