<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_brick_1_1_math_1_1_big_rational" xml:lang="fr">
<title>Référence de la classe BigRational</title>
<indexterm><primary>BigRational</primary></indexterm>
Graphe d&apos;héritage de BigRational:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de BigRational:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a95ff651750d806c3e6784e9f82954608">getNumerator</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1afdc2411478035d200118c50f4ba151c8">getDenominator</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a30ead070265525449e754269b4b1fb39">quotient</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a511d816b6ed66b329e127927081cda93">remainder</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a69cdd7b542a52c7ae66f670d3d05f71a">quotientAndRemainder</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1ac468fb693b5590834cd4b51f2d3e2451">plus</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a6dce32ad93c74e03ef90b3323e4973b0">minus</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a1c315435ff00063776b1329c502bd047">multipliedBy</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1ab2e538aa82f914964b74340d4805f563">dividedBy</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a48ba2199706f00142e6843db53b6301f">power</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">exponent</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1ab3826d476b6c8c28394da0c8e8677bee">reciprocal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1af3271c1a26c6f5de343ba9197e8f7a2e">abs</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a921d7d43bb1c26467cec43b599585d61">negated</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1aa87a4056ebb21e2458707684367e6c6c">simplified</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a49cef82ace4691910cc4465c47d1d9ec">compareTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a282c839169dc16e5d8bc47e8ac0f202b">getSign</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a7b4bac2966b6e735a4aaa27d8b6fe37d">toBigInteger</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1af8b74778aff7e428d45509bb86408596">toBigDecimal</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a14c7fa5ae37a286d34765aa00329dd7c">toBigRational</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1aee98ca780c25d3d40c4c2f02f238e25c">toScale</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">scale</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">roundingMode</link>=<link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1af925bcc620434a34f7ee4029b0700765">toInt</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a3774efe5a19fbbc82f1206fbd6f6dd4b">toFloat</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a7516ca30af0db3cdbf9a7739b48ce91d">__toString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1ab1d6abfbdcd8c9dd63dfef565bd2cfcf">__serialize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a2fe5966ad9b8e1d91a37d3e055ac4938">__unserialize</link> (array $data)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a4d9813fea8525b19a1d370eeb8fe41d6">serialize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1aa95be162020f9db2ba2506f0edc7f7df">unserialize</link> ($value)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a16cd8b81780f0455648c2fe7dea88024">isEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1af51f1f4e067d1c220e829e82e8c07940">isLessThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ab2562129575f203e762e8355852b9e9f">isLessThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a499873810a5651051cf1b832076ce138">isGreaterThan</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a3c3170cb63239c1d9035106dcbf0b15b">isGreaterThanOrEqualTo</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">that</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1adbd8bd9ed173174eb4509a853096e34d">isZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aaeeed6085a91098a429c53b3bc097587">isNegative</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1aba628edfe03498fd1bd0828d17b2613d">isNegativeOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a017a082785367e089977172289090652">isPositive</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1a4f73a0b69e275b9db063d36214896c5b">isPositiveOrZero</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_number_1ad402d8679325bc514874370f02b5c2ac">jsonSerialize</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_rational_1ad9bf5a7e7e57cde931b481360774a408">of</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_rational_1a98945d2cf6d202abc97c39eaf8ddb399">nd</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">numerator</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">denominator</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques statiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0ad355042f3be12fe2be77d05ddfc2bc">min</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a36cf4067863ecb459761a76ff631c854">max</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_big_rational_1a941cfc1cafc0baafb8ce17c3c96df0d1">__construct</link> (<link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">numerator</link>, <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">denominator</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">checkDenominator</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Membres hérités additionnels    </title>
Fonctions membres protégées statiques hérités de <link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link>        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_big_number_1a0c70a63466a111d452e52e049429220e">create</link> (... $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">args</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>An arbitrarily large rational number.</para>

<para>This class is immutable.</para>

<para>@psalm-immutable </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a941cfc1cafc0baafb8ce17c3c96df0d1"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (<link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> $numerator, <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> $denominator, bool $checkDenominator)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Protected constructor. Use a factory method to obtain an instance.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigInteger</entry><entry>$numerator</entry><entry>
<para>The numerator. </para>
</entry>
                            </row>
                            <row>
<entry>BigInteger</entry><entry>$denominator</entry><entry>
<para>The denominator. </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$checkDenominator</entry><entry>
<para>Whether to check the denominator for negative and zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DivisionByZeroException</entry><entry>
<para>If the denominator is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a941cfc1cafc0baafb8ce17c3c96df0d1_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1ab1d6abfbdcd8c9dd63dfef565bd2cfcf"/><section>
    <title>__serialize()</title>
<indexterm><primary>__serialize</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>__serialize</secondary></indexterm>
<para><computeroutput>__serialize ( )</computeroutput></para>
<para>This method is required for serializing the object and SHOULD NOT be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a7516ca30af0db3cdbf9a7739b48ce91d"/><section>
    <title>__toString()</title>
<indexterm><primary>__toString</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>__toString</secondary></indexterm>
<para><computeroutput>__toString ( )</computeroutput></para>
<para>{
<para>Returns a string representation of this number.</para>

<para>The output of this method can be parsed by the <computeroutput><link linkend="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408">of()</link></computeroutput> factory method; this will yield an object equal to this one, without any information loss.</para>

<para><formalpara><title>Renvoie</title>

<para>string</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a7516ca30af0db3cdbf9a7739b48ce91d">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a2fe5966ad9b8e1d91a37d3e055ac4938"/><section>
    <title>__unserialize()</title>
<indexterm><primary>__unserialize</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>__unserialize</secondary></indexterm>
<para><computeroutput>__unserialize (array $data)</computeroutput></para>
<para>This method is only here to allow unserializing the object and cannot be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1af3271c1a26c6f5de343ba9197e8f7a2e"/><section>
    <title>abs()</title>
<indexterm><primary>abs</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>abs</secondary></indexterm>
<para><computeroutput>abs ( )</computeroutput></para>
<para>Returns the absolute value of this BigRational.</para>

<para><formalpara><title>Renvoie</title>

<para>BigRational </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a49cef82ace4691910cc4465c47d1d9ec"/><section>
    <title>compareTo()</title>
<indexterm><primary>compareTo</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>compareTo</secondary></indexterm>
<para><computeroutput>compareTo ( $that)</computeroutput></para>
<para>{
<para>Compares this number to the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_class_brick_1_1_math_1_1_big_number">BigNumber</link> | int | float | string</entry><entry>$that</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int [-1,0,1] If <computeroutput>$this</computeroutput> is lower than, equal to, or greater than <computeroutput>$that</computeroutput>.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a49cef82ace4691910cc4465c47d1d9ec">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a49cef82ace4691910cc4465c47d1d9ec_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1ab2e538aa82f914964b74340d4805f563"/><section>
    <title>dividedBy()</title>
<indexterm><primary>dividedBy</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>dividedBy</secondary></indexterm>
<para><computeroutput>dividedBy ( $that)</computeroutput></para>
<para>Returns the result of the division of this number by the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The divisor.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the divisor is not a valid number, or is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_ab2e538aa82f914964b74340d4805f563_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1afdc2411478035d200118c50f4ba151c8"/><section>
    <title>getDenominator()</title>
<indexterm><primary>getDenominator</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>getDenominator</secondary></indexterm>
<para><computeroutput>getDenominator ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>BigInteger </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a95ff651750d806c3e6784e9f82954608"/><section>
    <title>getNumerator()</title>
<indexterm><primary>getNumerator</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>getNumerator</secondary></indexterm>
<para><computeroutput>getNumerator ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>BigInteger </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a282c839169dc16e5d8bc47e8ac0f202b"/><section>
    <title>getSign()</title>
<indexterm><primary>getSign</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>getSign</secondary></indexterm>
<para><computeroutput>getSign ( )</computeroutput></para>
<para>{
<para>Returns the sign of this number.</para>

<para><formalpara><title>Renvoie</title>

<para>int -1 if the number is negative, 0 if zero, 1 if positive.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a282c839169dc16e5d8bc47e8ac0f202b">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a6dce32ad93c74e03ef90b3323e4973b0"/><section>
    <title>minus()</title>
<indexterm><primary>minus</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>minus</secondary></indexterm>
<para><computeroutput>minus ( $that)</computeroutput></para>
<para>Returns the difference of this number and the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The number to subtract.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a6dce32ad93c74e03ef90b3323e4973b0_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a6dce32ad93c74e03ef90b3323e4973b0_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a1c315435ff00063776b1329c502bd047"/><section>
    <title>multipliedBy()</title>
<indexterm><primary>multipliedBy</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>multipliedBy</secondary></indexterm>
<para><computeroutput>multipliedBy ( $that)</computeroutput></para>
<para>Returns the product of this number and the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The multiplier.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the multiplier is not a valid number. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a1c315435ff00063776b1329c502bd047_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a98945d2cf6d202abc97c39eaf8ddb399"/><section>
    <title>nd()</title>
<indexterm><primary>nd</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>nd</secondary></indexterm>
<para><computeroutput>static nd ( $numerator,  $denominator)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates a BigRational out of a numerator and a denominator.</para>

<para>If the denominator is negative, the signs of both the numerator and the denominator will be inverted to ensure that the denominator is always positive.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$numerator</entry><entry>
<para>The numerator. Must be convertible to a BigInteger. </para>
</entry>
                            </row>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$denominator</entry><entry>
<para>The denominator. Must be convertible to a BigInteger.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>NumberFormatException</entry><entry>
<para>If an argument does not represent a valid number. </para>
</entry>
                            </row>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If an argument represents a non-integer number. </para>
</entry>
                            </row>
                            <row>
<entry>DivisionByZeroException</entry><entry>
<para>If the denominator is zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-pure </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a98945d2cf6d202abc97c39eaf8ddb399_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a921d7d43bb1c26467cec43b599585d61"/><section>
    <title>negated()</title>
<indexterm><primary>negated</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>negated</secondary></indexterm>
<para><computeroutput>negated ( )</computeroutput></para>
<para>Returns the negated value of this BigRational.</para>

<para><formalpara><title>Renvoie</title>

<para>BigRational </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1ad9bf5a7e7e57cde931b481360774a408"/><section>
    <title>of()</title>
<indexterm><primary>of</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>of</secondary></indexterm>
<para><computeroutput>static of ( $value)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates a BigRational of the given value.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the value cannot be converted to a BigRational.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-pure </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1ad9bf5a7e7e57cde931b481360774a408">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_ad9bf5a7e7e57cde931b481360774a408_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_ad9bf5a7e7e57cde931b481360774a408_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1ac468fb693b5590834cd4b51f2d3e2451"/><section>
    <title>plus()</title>
<indexterm><primary>plus</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>plus</secondary></indexterm>
<para><computeroutput>plus ( $that)</computeroutput></para>
<para>Returns the sum of this number and the given one.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BigNumber | int | float | string</entry><entry>$that</entry><entry>
<para>The number to add.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If the number is not valid. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_ac468fb693b5590834cd4b51f2d3e2451_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a48ba2199706f00142e6843db53b6301f"/><section>
    <title>power()</title>
<indexterm><primary>power</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>power</secondary></indexterm>
<para><computeroutput>power (int $exponent)</computeroutput></para>
<para>Returns this number exponentiated to the given value.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$exponent</entry><entry>
<para>The exponent.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>BigRational The result.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the exponent is not in the range 0 to 1,000,000. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a30ead070265525449e754269b4b1fb39"/><section>
    <title>quotient()</title>
<indexterm><primary>quotient</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>quotient</secondary></indexterm>
<para><computeroutput>quotient ( )</computeroutput></para>
<para>Returns the quotient of the division of the numerator by the denominator.</para>

<para><formalpara><title>Renvoie</title>

<para>BigInteger </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a30ead070265525449e754269b4b1fb39_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a69cdd7b542a52c7ae66f670d3d05f71a"/><section>
    <title>quotientAndRemainder()</title>
<indexterm><primary>quotientAndRemainder</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>quotientAndRemainder</secondary></indexterm>
<para><computeroutput>quotientAndRemainder ( )</computeroutput></para>
<para>Returns the quotient and remainder of the division of the numerator by the denominator.</para>

<para><formalpara><title>Renvoie</title>

<para>BigInteger[] </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1ab3826d476b6c8c28394da0c8e8677bee"/><section>
    <title>reciprocal()</title>
<indexterm><primary>reciprocal</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>reciprocal</secondary></indexterm>
<para><computeroutput>reciprocal ( )</computeroutput></para>
<para>Returns the reciprocal of this BigRational.</para>

<para>The reciprocal has the numerator and denominator swapped.</para>

<para><formalpara><title>Renvoie</title>

<para>BigRational</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DivisionByZeroException</entry><entry>
<para>If the numerator is zero. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a511d816b6ed66b329e127927081cda93"/><section>
    <title>remainder()</title>
<indexterm><primary>remainder</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>remainder</secondary></indexterm>
<para><computeroutput>remainder ( )</computeroutput></para>
<para>Returns the remainder of the division of the numerator by the denominator.</para>

<para><formalpara><title>Renvoie</title>

<para>BigInteger </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a511d816b6ed66b329e127927081cda93_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a4d9813fea8525b19a1d370eeb8fe41d6"/><section>
    <title>serialize()</title>
<indexterm><primary>serialize</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>serialize</secondary></indexterm>
<para><computeroutput>serialize ( )</computeroutput></para>
<para>This method is required by interface Serializable and SHOULD NOT be accessed directly. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1aa87a4056ebb21e2458707684367e6c6c"/><section>
    <title>simplified()</title>
<indexterm><primary>simplified</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>simplified</secondary></indexterm>
<para><computeroutput>simplified ( )</computeroutput></para>
<para>Returns the simplified value of this BigRational.</para>

<para><formalpara><title>Renvoie</title>

<para>BigRational </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_aa87a4056ebb21e2458707684367e6c6c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1af8b74778aff7e428d45509bb86408596"/><section>
    <title>toBigDecimal()</title>
<indexterm><primary>toBigDecimal</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toBigDecimal</secondary></indexterm>
<para><computeroutput>toBigDecimal ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> without rounding.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1af8b74778aff7e428d45509bb86408596">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_af8b74778aff7e428d45509bb86408596_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a7b4bac2966b6e735a4aaa27d8b6fe37d"/><section>
    <title>toBigInteger()</title>
<indexterm><primary>toBigInteger</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toBigInteger</secondary></indexterm>
<para><computeroutput>toBigInteger ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> The converted number.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to a <link linkend="_class_brick_1_1_math_1_1_big_integer">BigInteger</link> without rounding.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a7b4bac2966b6e735a4aaa27d8b6fe37d">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a7b4bac2966b6e735a4aaa27d8b6fe37d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_a7b4bac2966b6e735a4aaa27d8b6fe37d_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a14c7fa5ae37a286d34765aa00329dd7c"/><section>
    <title>toBigRational()</title>
<indexterm><primary>toBigRational</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toBigRational</secondary></indexterm>
<para><computeroutput>toBigRational ( )</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_rational">BigRational</link>.</para>

<para><formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_rational">BigRational</link> The converted number.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a14c7fa5ae37a286d34765aa00329dd7c">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1a3774efe5a19fbbc82f1206fbd6f6dd4b"/><section>
    <title>toFloat()</title>
<indexterm><primary>toFloat</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toFloat</secondary></indexterm>
<para><computeroutput>toFloat ( )</computeroutput></para>
<para>{
<para>Returns an approximation of this number as a floating-point value.</para>

<para>Note that this method can discard information as the precision of a floating-point value is inherently limited.</para>

<para>If the number is greater than the largest representable floating point number, positive infinity is returned. If the number is less than the smallest representable floating point number, negative infinity is returned.</para>

<para><formalpara><title>Renvoie</title>

<para>float The converted value.</para>
</formalpara>
</para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1a3774efe5a19fbbc82f1206fbd6f6dd4b">BigNumber</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1af925bcc620434a34f7ee4029b0700765"/><section>
    <title>toInt()</title>
<indexterm><primary>toInt</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toInt</secondary></indexterm>
<para><computeroutput>toInt ( )</computeroutput></para>
<para>{
<para>Returns the exact value of this number as a native integer.</para>

<para>If this number cannot be converted to a native integer without losing precision, an exception is thrown. Note that the acceptable range for an integer depends on the platform and differs for 32-bit and 64-bit.</para>

<para><formalpara><title>Renvoie</title>

<para>int The converted value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>MathException</entry><entry>
<para>If this number cannot be exactly converted to a native integer.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1af925bcc620434a34f7ee4029b0700765">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_af925bcc620434a34f7ee4029b0700765_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1aee98ca780c25d3d40c4c2f02f238e25c"/><section>
    <title>toScale()</title>
<indexterm><primary>toScale</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>toScale</secondary></indexterm>
<para><computeroutput>toScale (int $scale, int $roundingMode = <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link></computeroutput>
)</computeroutput></para>
<para>{
<para>Converts this number to a <link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link> with the given scale, using rounding if necessary.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$scale</entry><entry>
<para>The scale of the resulting <computeroutput><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link></computeroutput>. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$roundingMode</entry><entry>
<para>A <computeroutput><link linkend="_class_brick_1_1_math_1_1_rounding_mode">RoundingMode</link></computeroutput> constant.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para><link linkend="_class_brick_1_1_math_1_1_big_decimal">BigDecimal</link></para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If this number cannot be converted to the given scale without rounding. This only applies when <link linkend="_class_brick_1_1_math_1_1_rounding_mode_1a91be30d2d5343f30d7d280e5729c240b">RoundingMode::UNNECESSARY</link> is used.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
} </para>
<para>
Réimplémentée à partir de <link linkend="_class_brick_1_1_math_1_1_big_number_1aee98ca780c25d3d40c4c2f02f238e25c">BigNumber</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_aee98ca780c25d3d40c4c2f02f238e25c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_big_rational_1aa95be162020f9db2ba2506f0edc7f7df"/><section>
    <title>unserialize()</title>
<indexterm><primary>unserialize</primary><secondary>BigRational</secondary></indexterm>
<indexterm><primary>BigRational</primary><secondary>unserialize</secondary></indexterm>
<para><computeroutput>unserialize ( $value)</computeroutput></para>
<para>This method is only here to implement interface Serializable and cannot be accessed directly. </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_big_rational_aa95be162020f9db2ba2506f0edc7f7df_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/brick/math/src/<link linkend="__big_rational_8php">BigRational.php</link></section>
</section>
