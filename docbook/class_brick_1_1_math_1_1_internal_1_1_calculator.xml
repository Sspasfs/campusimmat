<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator" xml:lang="fr">
<title>Référence de la classe Calculator</title>
<indexterm><primary>Calculator</primary></indexterm>
Graphe d&apos;héritage de Calculator:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de Calculator:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a01275fffc2170fb6a37fc6e655b845a4">abs</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">n</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae0c145ca689bdd63a04249e795c99443">neg</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">n</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a40f65c44e8ee73b91047fe666efcd243">cmp</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a99e462cd00ba3948d0986761c9268827">add</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1acaea20874a6b556332be92754ee04b98">sub</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a94ef3c6d20b995459646789d1b5e8209">mul</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5a4dc28f1292f09f95aa6d918c658db1">divQ</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a8f49aac65ac0a661c0a024250ffb1db9">divR</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a945e0069286a8e549d03977e9d14c0fd">divQR</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aa7b222accfb1c8c09c36a236364ab467">pow</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">e</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5fba8eac75b954d71bce3d68da0adc45">mod</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a73aa6f7f0f07004b6be2008c1db292c8">modInverse</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">x</link>, string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">m</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aa6e71119bc054459ba3a049cad9c5629">modPow</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">base</link>, string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">exp</link>, string $mod)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a909e688fcff8f79db424a5f2240e6a4e">gcd</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a22a4763f0443bb0fd5e470106bac0afe">sqrt</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">n</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae96fff7aca6d9250bdccaff43794b862">fromBase</link> (string $number, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">base</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a80825cbce2eab7a6546ab3d519f60349">toBase</link> (string $number, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">base</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ad8ea3f0adaa22539ac79afa4701f7ffd">fromArbitraryBase</link> (string $number, string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">alphabet</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">base</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae103c2c8972a5661520f6f2077c06361">toArbitraryBase</link> (string $number, string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">alphabet</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">base</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a8d4fb232238ee2a2e5bc7e0a081783a6">divRound</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">roundingMode</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a40b91c55e22ea56a1fa09064c4fc3331">and</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aeb0ee06af71a537757192eabb0e244c9">or</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae125a3c93af1ca696a3d6e0fb4c07d00">xor</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a67007e7c238e1ca533915ff86a217aa0">set</link> (?<link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator">Calculator</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">calculator</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5ba61361bf0695a285bbaefefc427191">get</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a3027cec38dfd3dc033a01f45566f97b2">MAX_POWER</link> = 1000000</para>
</listitem>
            <listitem><para>const <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a002da67ece3b8923d50e91866232e8dd">ALPHABET</link> = &apos;0123456789<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">abcdefghijklmnopqrstuvwxyz</link>&apos;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a2dc9f127c8a299300d94c29915f30e45">init</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, string $b)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Performs basic operations on arbitrary size integers.</para>

<para>Unless otherwise specified, all parameters must be validated as non-empty strings of digits, without leading zero, and with an optional leading minus sign if the number is not zero.</para>

<para>Any other parameter format will lead to undefined behaviour. All methods must return strings respecting this format, unless specified otherwise. </para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a01275fffc2170fb6a37fc6e655b845a4"/><section>
    <title>abs()</title>
<indexterm><primary>abs</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>abs</secondary></indexterm>
<para><computeroutput>abs (string $n)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Returns the absolute value of a number.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$n</entry><entry>
<para>The number.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The absolute value. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a99e462cd00ba3948d0986761c9268827"/><section>
    <title>add()</title>
<indexterm><primary>add</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>add</secondary></indexterm>
<para><computeroutput>add (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Adds two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The augend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The addend.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The sum. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a99e462cd00ba3948d0986761c9268827">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a99e462cd00ba3948d0986761c9268827">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a99e462cd00ba3948d0986761c9268827">NativeCalculator</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a99e462cd00ba3948d0986761c9268827_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a40b91c55e22ea56a1fa09064c4fc3331"/><section>
    <title>and()</title>
<indexterm><primary>and</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>and</secondary></indexterm>
<para><computeroutput>and (string $a, string $b)</computeroutput></para>
<para>Calculates bitwise AND of two numbers.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for bitwise operations.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a40b91c55e22ea56a1fa09064c4fc3331">GmpCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a40f65c44e8ee73b91047fe666efcd243"/><section>
    <title>cmp()</title>
<indexterm><primary>cmp</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>cmp</secondary></indexterm>
<para><computeroutput>cmp (string $a, string $b)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Compares two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The first number. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The second number.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int [-1, 0, 1] If the first number is less than, equal to, or greater than the second number. </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a40f65c44e8ee73b91047fe666efcd243_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a40f65c44e8ee73b91047fe666efcd243_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5a4dc28f1292f09f95aa6d918c658db1"/><section>
    <title>divQ()</title>
<indexterm><primary>divQ</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>divQ</secondary></indexterm>
<para><computeroutput>divQ (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the quotient of the division of two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The dividend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The divisor, must not be zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The quotient. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a5a4dc28f1292f09f95aa6d918c658db1">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a5a4dc28f1292f09f95aa6d918c658db1">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a5a4dc28f1292f09f95aa6d918c658db1">NativeCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a945e0069286a8e549d03977e9d14c0fd"/><section>
    <title>divQR()</title>
<indexterm><primary>divQR</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>divQR</secondary></indexterm>
<para><computeroutput>divQR (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the quotient and remainder of the division of two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The dividend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The divisor, must not be zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string[] An array containing the quotient and remainder. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a945e0069286a8e549d03977e9d14c0fd">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a945e0069286a8e549d03977e9d14c0fd">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a945e0069286a8e549d03977e9d14c0fd">NativeCalculator</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a945e0069286a8e549d03977e9d14c0fd_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a8f49aac65ac0a661c0a024250ffb1db9"/><section>
    <title>divR()</title>
<indexterm><primary>divR</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>divR</secondary></indexterm>
<para><computeroutput>divR (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the remainder of the division of two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The dividend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The divisor, must not be zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The remainder. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a8f49aac65ac0a661c0a024250ffb1db9">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a8f49aac65ac0a661c0a024250ffb1db9">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a8f49aac65ac0a661c0a024250ffb1db9">NativeCalculator</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a8f49aac65ac0a661c0a024250ffb1db9_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a8d4fb232238ee2a2e5bc7e0a081783a6"/><section>
    <title>divRound()</title>
<indexterm><primary>divRound</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>divRound</secondary></indexterm>
<para><computeroutput>divRound (string $a, string $b, int $roundingMode)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Performs a rounded division.</para>

<para>Rounding is performed when the remainder of the division is not zero.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The dividend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The divisor, must not be zero. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$roundingMode</entry><entry>
<para>The rounding mode.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If the rounding mode is invalid. 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>RoundingNecessaryException</entry><entry>
<para>If RoundingMode::UNNECESSARY is provided but rounding is necessary. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a8d4fb232238ee2a2e5bc7e0a081783a6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ad8ea3f0adaa22539ac79afa4701f7ffd"/><section>
    <title>fromArbitraryBase()</title>
<indexterm><primary>fromArbitraryBase</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>fromArbitraryBase</secondary></indexterm>
<para><computeroutput>fromArbitraryBase (string $number, string $alphabet, int $base)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Converts a non-negative number in an arbitrary base using a custom alphabet, to base 10.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$number</entry><entry>
<para>The number to convert, validated as a non-empty string, containing only chars in the given alphabet/base. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$alphabet</entry><entry>
<para>The alphabet that contains every digit, validated as 2 chars minimum. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$base</entry><entry>
<para>The base of the number, validated from 2 to alphabet length.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The number in base 10, following the Calculator conventions. </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ad8ea3f0adaa22539ac79afa4701f7ffd_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ad8ea3f0adaa22539ac79afa4701f7ffd_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae96fff7aca6d9250bdccaff43794b862"/><section>
    <title>fromBase()</title>
<indexterm><primary>fromBase</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>fromBase</secondary></indexterm>
<para><computeroutput>fromBase (string $number, int $base)</computeroutput></para>
<para>Converts a number from an arbitrary base.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for base conversion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$number</entry><entry>
<para>The number, positive or zero, non-empty, case-insensitively validated for the given base. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$base</entry><entry>
<para>The base of the number, validated from 2 to 36.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The converted number, following the Calculator conventions. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1ae96fff7aca6d9250bdccaff43794b862">GmpCalculator</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ae96fff7aca6d9250bdccaff43794b862_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a909e688fcff8f79db424a5f2240e6a4e"/><section>
    <title>gcd()</title>
<indexterm><primary>gcd</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>gcd</secondary></indexterm>
<para><computeroutput>gcd (string $a, string $b)</computeroutput></para>
<para>Returns the greatest common divisor of the two numbers.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for GCD calculations.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The first number. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The second number.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The GCD, always positive, or zero if both arguments are zero. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a909e688fcff8f79db424a5f2240e6a4e">GmpCalculator</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a909e688fcff8f79db424a5f2240e6a4e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a909e688fcff8f79db424a5f2240e6a4e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5ba61361bf0695a285bbaefefc427191"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>get</secondary></indexterm>
<para><computeroutput>static get ( )<computeroutput>[static]</computeroutput>, <computeroutput>[final]</computeroutput></computeroutput></para>
<para>Returns the Calculator instance to use.</para>

<para>If none has been explicitly set, the fastest available implementation will be returned.</para>

<para><formalpara><title>Renvoie</title>

<para>Calculator</para>
</formalpara>
@psalm-pure @psalm-suppress ImpureStaticProperty </para>

<para>@psalm-suppress ImpureMethodCall</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a5ba61361bf0695a285bbaefefc427191_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a2dc9f127c8a299300d94c29915f30e45"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>init</secondary></indexterm>
<para><computeroutput>init (string $a, string $b)<computeroutput>[final]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Extracts the sign &amp; digits of the operands.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The first operand. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The second operand.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array{bool, bool, string, string} Whether $a and $b are negative, followed by their digits. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a2dc9f127c8a299300d94c29915f30e45_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a5fba8eac75b954d71bce3d68da0adc45"/><section>
    <title>mod()</title>
<indexterm><primary>mod</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>mod</secondary></indexterm>
<para><computeroutput>mod (string $a, string $b)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The modulus; must not be zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a5fba8eac75b954d71bce3d68da0adc45_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a5fba8eac75b954d71bce3d68da0adc45_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a73aa6f7f0f07004b6be2008c1db292c8"/><section>
    <title>modInverse()</title>
<indexterm><primary>modInverse</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>modInverse</secondary></indexterm>
<para><computeroutput>modInverse (string $x, string $m)</computeroutput></para>
<para>Returns the modular multiplicative inverse of $x modulo $m.</para>

<para>If $x has no multiplicative inverse mod m, this method must return null.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$x</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$m</entry><entry>
<para>The modulus; must not be negative or zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string|null </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a73aa6f7f0f07004b6be2008c1db292c8">GmpCalculator</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a73aa6f7f0f07004b6be2008c1db292c8_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aa6e71119bc054459ba3a049cad9c5629"/><section>
    <title>modPow()</title>
<indexterm><primary>modPow</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>modPow</secondary></indexterm>
<para><computeroutput>modPow (string $base, string $exp, string $mod)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Raises a number into power with modulo.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$base</entry><entry>
<para>The base number; must be positive or zero. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$exp</entry><entry>
<para>The exponent; must be positive or zero. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$mod</entry><entry>
<para>The modulus; must be strictly positive.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The power. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1aa6e71119bc054459ba3a049cad9c5629">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1aa6e71119bc054459ba3a049cad9c5629">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1aa6e71119bc054459ba3a049cad9c5629">NativeCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a94ef3c6d20b995459646789d1b5e8209"/><section>
    <title>mul()</title>
<indexterm><primary>mul</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>mul</secondary></indexterm>
<para><computeroutput>mul (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Multiplies two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The multiplicand. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The multiplier.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The product. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a94ef3c6d20b995459646789d1b5e8209">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a94ef3c6d20b995459646789d1b5e8209">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a94ef3c6d20b995459646789d1b5e8209">NativeCalculator</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a94ef3c6d20b995459646789d1b5e8209_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae0c145ca689bdd63a04249e795c99443"/><section>
    <title>neg()</title>
<indexterm><primary>neg</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>neg</secondary></indexterm>
<para><computeroutput>neg (string $n)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Negates a number.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$n</entry><entry>
<para>The number.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The negated value. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ae0c145ca689bdd63a04249e795c99443_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aeb0ee06af71a537757192eabb0e244c9"/><section>
    <title>or()</title>
<indexterm><primary>or</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>or</secondary></indexterm>
<para><computeroutput>or (string $a, string $b)</computeroutput></para>
<para>Calculates bitwise OR of two numbers.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for bitwise operations.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1aeb0ee06af71a537757192eabb0e244c9">GmpCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1aa7b222accfb1c8c09c36a236364ab467"/><section>
    <title>pow()</title>
<indexterm><primary>pow</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>pow</secondary></indexterm>
<para><computeroutput>pow (string $a, int $e)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Exponentiates a number.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The base number. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$e</entry><entry>
<para>The exponent, validated as an integer between 0 and MAX_POWER.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The power. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1aa7b222accfb1c8c09c36a236364ab467">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1aa7b222accfb1c8c09c36a236364ab467">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1aa7b222accfb1c8c09c36a236364ab467">NativeCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a67007e7c238e1ca533915ff86a217aa0"/><section>
    <title>set()</title>
<indexterm><primary>set</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>set</secondary></indexterm>
<para><computeroutput>static set (?<link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator">Calculator</link> $calculator)<computeroutput>[static]</computeroutput>, <computeroutput>[final]</computeroutput></computeroutput></para>
<para>Sets the Calculator instance to use.</para>

<para>An instance is typically set only in unit tests: the autodetect is usually the best option.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Calculator | null</entry><entry>$calculator</entry><entry>
<para>The calculator instance, or NULL to revert to autodetect.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>void </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a22a4763f0443bb0fd5e470106bac0afe"/><section>
    <title>sqrt()</title>
<indexterm><primary>sqrt</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>sqrt</secondary></indexterm>
<para><computeroutput>sqrt (string $n)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Returns the square root of the given number, rounded down.</para>

<para>The result is the largest x such that x² ≤ n. The input MUST NOT be negative.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$n</entry><entry>
<para>The number.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The square root. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1a22a4763f0443bb0fd5e470106bac0afe">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a22a4763f0443bb0fd5e470106bac0afe">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1a22a4763f0443bb0fd5e470106bac0afe">NativeCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1acaea20874a6b556332be92754ee04b98"/><section>
    <title>sub()</title>
<indexterm><primary>sub</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>sub</secondary></indexterm>
<para><computeroutput>sub (string $a, string $b)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Subtracts two numbers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para>The minuend. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry>
<para>The subtrahend.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The difference. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_bc_math_calculator_1acaea20874a6b556332be92754ee04b98">BcMathCalculator</link>, <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1acaea20874a6b556332be92754ee04b98">GmpCalculator</link>, et <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_native_calculator_1acaea20874a6b556332be92754ee04b98">NativeCalculator</link>.</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae103c2c8972a5661520f6f2077c06361"/><section>
    <title>toArbitraryBase()</title>
<indexterm><primary>toArbitraryBase</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>toArbitraryBase</secondary></indexterm>
<para><computeroutput>toArbitraryBase (string $number, string $alphabet, int $base)<computeroutput>[final]</computeroutput></computeroutput></para>
<para>Converts a non-negative number to an arbitrary base using a custom alphabet.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$number</entry><entry>
<para>The number to convert, positive or zero, following the Calculator conventions. </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$alphabet</entry><entry>
<para>The alphabet that contains every digit, validated as 2 chars minimum. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$base</entry><entry>
<para>The base to convert to, validated from 2 to alphabet length.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The converted number in the given alphabet. </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ae103c2c8972a5661520f6f2077c06361_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_ae103c2c8972a5661520f6f2077c06361_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a80825cbce2eab7a6546ab3d519f60349"/><section>
    <title>toBase()</title>
<indexterm><primary>toBase</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>toBase</secondary></indexterm>
<para><computeroutput>toBase (string $number, int $base)</computeroutput></para>
<para>Converts a number to an arbitrary base.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for base conversion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$number</entry><entry>
<para>The number to convert, following the Calculator conventions. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$base</entry><entry>
<para>The base to convert to, validated from 2 to 36.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string The converted number, lowercase. </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1a80825cbce2eab7a6546ab3d519f60349">GmpCalculator</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_brick_1_1_math_1_1_internal_1_1_calculator_a80825cbce2eab7a6546ab3d519f60349_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1ae125a3c93af1ca696a3d6e0fb4c07d00"/><section>
    <title>xor()</title>
<indexterm><primary>xor</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>xor</secondary></indexterm>
<para><computeroutput>xor (string $a, string $b)</computeroutput></para>
<para>Calculates bitwise XOR of two numbers.</para>

<para>This method can be overridden by the concrete implementation if the underlying library has built-in support for bitwise operations.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$a</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$b</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Réimplémentée dans <link linkend="_class_brick_1_1_math_1_1_internal_1_1_calculator_1_1_gmp_calculator_1ae125a3c93af1ca696a3d6e0fb4c07d00">GmpCalculator</link>.</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a002da67ece3b8923d50e91866232e8dd"/><section>
    <title>ALPHABET</title>
<indexterm><primary>ALPHABET</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>ALPHABET</secondary></indexterm>
<para><computeroutput>const ALPHABET = &apos;0123456789<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">abcdefghijklmnopqrstuvwxyz</link>&apos;</computeroutput></para>
<para>The alphabet for converting from and to base 2 to 36, lowercase. </para>
</section>
<anchor xml:id="_class_brick_1_1_math_1_1_internal_1_1_calculator_1a3027cec38dfd3dc033a01f45566f97b2"/><section>
    <title>MAX_POWER</title>
<indexterm><primary>MAX_POWER</primary><secondary>Calculator</secondary></indexterm>
<indexterm><primary>Calculator</primary><secondary>MAX_POWER</secondary></indexterm>
<para><computeroutput>const MAX_POWER = 1000000</computeroutput></para>
<para>The maximum exponent value allowed for the pow() method. </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/brick/math/src/Internal/<link linkend="__calculator_8php">Calculator.php</link></section>
</section>
