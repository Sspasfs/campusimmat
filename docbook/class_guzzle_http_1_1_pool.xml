<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_pool" xml:lang="fr">
<title>Référence de la classe Pool</title>
<indexterm><primary>Pool</primary></indexterm>
Graphe d&apos;héritage de Pool:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_pool__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de Pool:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_pool__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_guzzle_http_1_1_pool_1a35cae389228dd88152a2f6a12a70b408">__construct</link> (<link linkend="_interface_guzzle_http_1_1_client_interface">ClientInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">client</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">requests</link>, array $config=[])</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_pool_1a544e3978ada76faea2f7c4f5ef4d438b">promise</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_pool_1a1eab0fd25240b933b4531ce9500a61f5">batch</link> (<link linkend="_interface_guzzle_http_1_1_client_interface">ClientInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">client</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">requests</link>, array $options=[])</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Sends an iterator of requests concurrently using a capped pool size.</para>

<para>The pool will read from an iterator until it is cancelled or until the iterator is consumed. When a request is yielded, the request is sent after applying the &quot;request_options&quot; request options (if provided in the ctor).</para>

<para>When a function is yielded by the iterator, the function is provided the &quot;request_options&quot; array that should be merged on top of any existing options, and the function MUST then return a wait-able promise.</para>

<para>@final </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_guzzle_http_1_1_pool_1a35cae389228dd88152a2f6a12a70b408"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>Pool</secondary></indexterm>
<indexterm><primary>Pool</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (<link linkend="_interface_guzzle_http_1_1_client_interface">ClientInterface</link> $client,  $requests, array $config = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ClientInterface</entry><entry>$client</entry><entry>
<para>Client used to send the requests. </para>
</entry>
                            </row>
                            <row>
<entry>array | \Iterator</entry><entry>$requests</entry><entry>
<para>Requests or functions that return requests to send concurrently. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$config</entry><entry>
<para>Associative array of options<itemizedlist>
<listitem>
<para>concurrency: (int) Maximum number of requests to send concurrently</para>
</listitem><listitem>
<para>options: Array of request options to apply to each request.</para>
</listitem><listitem>
<para>fulfilled: (callable) Function to invoke when a request completes.</para>
</listitem><listitem>
<para>rejected: (callable) Function to invoke when a request is rejected. </para>
</listitem></itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_guzzle_http_1_1_pool_1a1eab0fd25240b933b4531ce9500a61f5"/><section>
    <title>batch()</title>
<indexterm><primary>batch</primary><secondary>Pool</secondary></indexterm>
<indexterm><primary>Pool</primary><secondary>batch</secondary></indexterm>
<para><computeroutput>static batch (<link linkend="_interface_guzzle_http_1_1_client_interface">ClientInterface</link> $client,  $requests, array $options = <computeroutput>[]</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Sends multiple requests concurrently and returns an array of responses and exceptions that uses the same ordering as the provided requests.</para>

<para>IMPORTANT: This method keeps every request and response in memory, and as such, is NOT recommended when sending a large number or an indeterminate number of requests concurrently.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ClientInterface</entry><entry>$client</entry><entry>
<para>Client used to send the requests </para>
</entry>
                            </row>
                            <row>
<entry>array | \Iterator</entry><entry>$requests</entry><entry>
<para>Requests to send concurrently. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Passes through the options available in {</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Voir également</title>

<para>\GuzzleHttp\Pool::__construct}</para>
</formalpara>
<formalpara><title>Renvoie</title>

<para>array Returns an array containing the response or an exception in the same order that the requests were sent.</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException if the event format is incorrect. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_pool_1a544e3978ada76faea2f7c4f5ef4d438b"/><section>
    <title>promise()</title>
<indexterm><primary>promise</primary><secondary>Pool</secondary></indexterm>
<indexterm><primary>Pool</primary><secondary>promise</secondary></indexterm>
<para><computeroutput>promise ( )</computeroutput></para>
<para>Get promise </para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promisor_interface_1a544e3978ada76faea2f7c4f5ef4d438b">PromisorInterface</link>.</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/guzzle/src/<link linkend="__pool_8php">Pool.php</link></section>
</section>
