<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise" xml:lang="fr">
<title>Référence de la classe RejectedPromise</title>
<indexterm><primary>RejectedPromise</primary></indexterm>
Graphe d&apos;héritage de RejectedPromise:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de RejectedPromise:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a9fdec8fbf3185ae9e9190f696593488c">__construct</link> ($reason)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a4feb652e6c84c7767347fb21cf496c73">then</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onFulfilled=null, <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onRejected=null)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a688fdb804610bab573256b55a8b55e7f">otherwise</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onRejected)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a9e0e3fdd0d989ce38062c5c34d6a7cb3">wait</link> ($<link linkend="_namespace_guzzle_http_1_1_promise_1a872182194a884a4ed11f905680270140">unwrap</link>=true, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">defaultDelivery</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1afbf787ced76807989fb3093e1772c5a1">getState</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1ad87255b62f0e4e81f9462328a026b510">resolve</link> ($value)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a95d7628ce8610636b9ee98642835cb1f">reject</link> ($reason)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a649b2b3005c687ae78c9d1d65e973493">cancel</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface">PromiseInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a1fd1ae96b81c32591a84e790981eb93a">wait</link> ($<link linkend="_namespace_guzzle_http_1_1_promise_1a872182194a884a4ed11f905680270140">unwrap</link>=true)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Membres hérités additionnels    </title>
Champs de données hérités de <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface">PromiseInterface</link>        <itemizedlist>
            <listitem><para>const <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1abaf4facc752f618f7d88aa7e2886c812">PENDING</link> = &apos;pending&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a73fff0d9d3144518678b1df2ff181934">FULFILLED</link> = &apos;fulfilled&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a25be17e5b990d3b083f7ec154287da3d">REJECTED</link> = &apos;rejected&apos;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>A promise that has been rejected.</para>

<para>Thenning off of this promise will invoke the onRejected callback immediately and ignore other callbacks. </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a9fdec8fbf3185ae9e9190f696593488c"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct ( $reason)</computeroutput></para></section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a649b2b3005c687ae78c9d1d65e973493"/><section>
    <title>cancel()</title>
<indexterm><primary>cancel</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>cancel</secondary></indexterm>
<para><computeroutput>cancel ( )</computeroutput></para>
<para>Cancels the promise if possible.</para>

<para><link linkend="_">https://github.com/promises-aplus/cancellation-spec/issues/7</link></para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a649b2b3005c687ae78c9d1d65e973493">PromiseInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1afbf787ced76807989fb3093e1772c5a1"/><section>
    <title>getState()</title>
<indexterm><primary>getState</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>getState</secondary></indexterm>
<para><computeroutput>getState ( )</computeroutput></para>
<para>Get the state of the promise (&quot;pending&quot;, &quot;rejected&quot;, or &quot;fulfilled&quot;).</para>

<para>The three states can be checked against the constants defined on PromiseInterface: PENDING, FULFILLED, and REJECTED.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1afbf787ced76807989fb3093e1772c5a1">PromiseInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a688fdb804610bab573256b55a8b55e7f"/><section>
    <title>otherwise()</title>
<indexterm><primary>otherwise</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>otherwise</secondary></indexterm>
<para><computeroutput>otherwise (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onRejected)</computeroutput></para>
<para>Appends a rejection handler callback to the promise, and returns a new promise resolving to the return value of the callback if it is called, or to its original fulfillment value if the promise is instead fulfilled.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>callable</entry><entry>$onRejected</entry><entry>
<para>Invoked when the promise is rejected.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>PromiseInterface </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a688fdb804610bab573256b55a8b55e7f">PromiseInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise_a688fdb804610bab573256b55a8b55e7f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a95d7628ce8610636b9ee98642835cb1f"/><section>
    <title>reject()</title>
<indexterm><primary>reject</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>reject</secondary></indexterm>
<para><computeroutput>reject ( $reason)</computeroutput></para>
<para>Reject the promise with the given reason.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$reason</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if the promise is already resolved. </para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a95d7628ce8610636b9ee98642835cb1f">PromiseInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1ad87255b62f0e4e81f9462328a026b510"/><section>
    <title>resolve()</title>
<indexterm><primary>resolve</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>resolve</secondary></indexterm>
<para><computeroutput>resolve ( $value)</computeroutput></para>
<para>Resolve the promise with the given value.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if the promise is already resolved. </para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1ad87255b62f0e4e81f9462328a026b510">PromiseInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a4feb652e6c84c7767347fb21cf496c73"/><section>
    <title>then()</title>
<indexterm><primary>then</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>then</secondary></indexterm>
<para><computeroutput>then (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onFulfilled = <computeroutput>null</computeroutput>
, <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $onRejected = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>Appends fulfillment and rejection handlers to the promise, and returns a new promise resolving to the return value of the called handler.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>callable</entry><entry>$onFulfilled</entry><entry>
<para>Invoked when the promise fulfills. </para>
</entry>
                            </row>
                            <row>
<entry>callable</entry><entry>$onRejected</entry><entry>
<para>Invoked when the promise is rejected.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>PromiseInterface </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_guzzle_http_1_1_promise_1_1_promise_interface_1a4feb652e6c84c7767347fb21cf496c73">PromiseInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise_a4feb652e6c84c7767347fb21cf496c73_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise_a4feb652e6c84c7767347fb21cf496c73_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_promise_1_1_rejected_promise_1a9e0e3fdd0d989ce38062c5c34d6a7cb3"/><section>
    <title>wait()</title>
<indexterm><primary>wait</primary><secondary>RejectedPromise</secondary></indexterm>
<indexterm><primary>RejectedPromise</primary><secondary>wait</secondary></indexterm>
<para><computeroutput>wait ( $unwrap = <computeroutput>true</computeroutput>
,  $defaultDelivery = <computeroutput>null</computeroutput>
)</computeroutput></para>Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_promise_1_1_rejected_promise_a9e0e3fdd0d989ce38062c5c34d6a7cb3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/promises/src/<link linkend="__rejected_promise_8php">RejectedPromise.php</link></section>
</section>
