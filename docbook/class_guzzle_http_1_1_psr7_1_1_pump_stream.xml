<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream" xml:lang="fr">
<title>Référence de la classe PumpStream</title>
<indexterm><primary>PumpStream</primary></indexterm>
Graphe d&apos;héritage de PumpStream:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de PumpStream:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a44d0ba6e87856a0ed1d6ff457cad2653">__construct</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">source</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a7516ca30af0db3cdbf9a7739b48ce91d">__toString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa4c7e8ce5147b0a22d6f2543c017a937">detach</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a75cce10cdf81be6dc84881c28b3379b7">getSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a8153e55ed7b27a62988843a2dd66c845">tell</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1ada3799f740f09e3689d0054629e87feb">eof</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a1fba032525b1840361a44bc001252693">isSeekable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1ae619dcf2218c21549cb65d875bbc6c9c">rewind</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa2ee0a47a0c37ae7ca7a04df34fc6d7a">seek</link> ($offset, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">whence</link>=SEEK_SET)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a63ce3bd392eed625d7e91db404b6fa3c">isWritable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1abf9a4eaa4b5194cc450e80c1a0c23a5a">write</link> ($string)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a40c3664bb217c4922a289cc97e9cdceb">isReadable</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a2acacba716a933935d63b2bacf52cff6">read</link> ($length)</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a14814e04b348120748912692645f3a75">getContents</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a710dbc5f59acad99675d3d608f46fe7f">getMetadata</link> ($key=null)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface">StreamInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1aec81000bbf4711592c0a6c38a863a946">seek</link> (int $offset, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">whence</link>=SEEK_SET)</para>
</listitem>
            <listitem><para><link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1af6abac2c663eb36b0ef28c5b5ba3f5ab">write</link> (string $string)</para>
</listitem>
            <listitem><para><link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a47037d4dc0348b96ea3cb58b87ee9363">read</link> (int $length)</para>
</listitem>
            <listitem><para><link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1ab0988c961a2e56b5b171b5e2421b34a0">getMetadata</link> (?string $key=null)</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Provides a read only stream that pumps data from a PHP callable.</para>

<para>When invoking the provided callable, the PumpStream will pass the amount of data requested to read to the callable. The callable can choose to ignore this value and return fewer or more bytes than requested. Any extra data returned by the provided callable is buffered internally until drained using the read() function of the PumpStream. The provided callable MUST return false when there is no more data to read. </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a44d0ba6e87856a0ed1d6ff457cad2653"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $source, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable(int)</link></entry><entry>
<para>(string|null|false) $source Source of the stream data. The callable MAY accept an integer argument used to control the amount of data to return. The callable MUST return a string when called, or false|null on error or EOF. </para>
</entry>
                            </row>
                            <row>
<entry>array{size?</entry><entry>
<para>int, metadata?: array} $options Stream options:<itemizedlist>
<listitem>
<para>metadata: Hash of metadata to use with stream.</para>
</listitem><listitem>
<para>size: Size of the stream, if known. </para>
</listitem></itemizedlist>
</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a7516ca30af0db3cdbf9a7739b48ce91d"/><section>
    <title>__toString()</title>
<indexterm><primary>__toString</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>__toString</secondary></indexterm>
<para><computeroutput>__toString ( )</computeroutput></para>
<para>Reads all data from the stream into a string, from the beginning to end.</para>

<para>This method MUST attempt to seek to the beginning of the stream before reading data and read the stream until the end is reached.</para>

<para>Warning: This could attempt to load a large amount of data into memory.</para>

<para>This method MUST NOT raise an exception in order to conform with PHP&apos;s string casting operations.</para>

<para><formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/language.oop5.magic.php#object.tostring">http://php.net/manual/en/language.oop5.magic.php#object.tostring</link> </para>
</formalpara>
<formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a7516ca30af0db3cdbf9a7739b48ce91d">StreamInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_a7516ca30af0db3cdbf9a7739b48ce91d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>Closes the stream and any underlying resources.</para>

<para><formalpara><title>Renvoie</title>

<para>void </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1aa69c8bf1f1dcf4e72552efff1fe3e87e">StreamInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_aa69c8bf1f1dcf4e72552efff1fe3e87e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa4c7e8ce5147b0a22d6f2543c017a937"/><section>
    <title>detach()</title>
<indexterm><primary>detach</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>detach</secondary></indexterm>
<para><computeroutput>detach ( )</computeroutput></para>
<para>Separates any underlying resources from the stream.</para>

<para>After the stream has been detached, the stream is in an unusable state.</para>

<para><formalpara><title>Renvoie</title>

<para>resource|null Underlying PHP stream, if any </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1aa4c7e8ce5147b0a22d6f2543c017a937">StreamInterface</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_aa4c7e8ce5147b0a22d6f2543c017a937_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1ada3799f740f09e3689d0054629e87feb"/><section>
    <title>eof()</title>
<indexterm><primary>eof</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>eof</secondary></indexterm>
<para><computeroutput>eof ( )</computeroutput></para>
<para>Returns true if the stream is at the end of the stream.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1ada3799f740f09e3689d0054629e87feb">StreamInterface</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_ada3799f740f09e3689d0054629e87feb_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a14814e04b348120748912692645f3a75"/><section>
    <title>getContents()</title>
<indexterm><primary>getContents</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>getContents</secondary></indexterm>
<para><computeroutput>getContents ( )</computeroutput></para>
<para>Returns the remaining contents in a string</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if unable to read or an error occurs while reading. </para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a14814e04b348120748912692645f3a75">StreamInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_a14814e04b348120748912692645f3a75_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a710dbc5f59acad99675d3d608f46fe7f"/><section>
    <title>getMetadata()</title>
<indexterm><primary>getMetadata</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>getMetadata</secondary></indexterm>
<para><computeroutput>getMetadata ( $key = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>{}</para>

<para><formalpara><title>Renvoie</title>

<para>mixed </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a75cce10cdf81be6dc84881c28b3379b7"/><section>
    <title>getSize()</title>
<indexterm><primary>getSize</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>getSize</secondary></indexterm>
<para><computeroutput>getSize ( )</computeroutput></para>
<para>Get the size of the stream if known.</para>

<para><formalpara><title>Renvoie</title>

<para>int|null Returns the size in bytes if known, or null if unknown. </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a75cce10cdf81be6dc84881c28b3379b7">StreamInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a40c3664bb217c4922a289cc97e9cdceb"/><section>
    <title>isReadable()</title>
<indexterm><primary>isReadable</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>isReadable</secondary></indexterm>
<para><computeroutput>isReadable ( )</computeroutput></para>
<para>Returns whether or not the stream is readable.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a40c3664bb217c4922a289cc97e9cdceb">StreamInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a1fba032525b1840361a44bc001252693"/><section>
    <title>isSeekable()</title>
<indexterm><primary>isSeekable</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>isSeekable</secondary></indexterm>
<para><computeroutput>isSeekable ( )</computeroutput></para>
<para>Returns whether or not the stream is seekable.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a1fba032525b1840361a44bc001252693">StreamInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a63ce3bd392eed625d7e91db404b6fa3c"/><section>
    <title>isWritable()</title>
<indexterm><primary>isWritable</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>isWritable</secondary></indexterm>
<para><computeroutput>isWritable ( )</computeroutput></para>
<para>Returns whether or not the stream is writable.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a63ce3bd392eed625d7e91db404b6fa3c">StreamInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a2acacba716a933935d63b2bacf52cff6"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>read</secondary></indexterm>
<para><computeroutput>read ( $length)</computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_a2acacba716a933935d63b2bacf52cff6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1ae619dcf2218c21549cb65d875bbc6c9c"/><section>
    <title>rewind()</title>
<indexterm><primary>rewind</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>rewind</secondary></indexterm>
<para><computeroutput>rewind ( )</computeroutput></para>
<para>Seek to the beginning of the stream.</para>

<para>If the stream is not seekable, this method will raise an exception; otherwise, it will perform a seek(0).</para>

<para><formalpara><title>Voir également</title>

<para>seek() <link linkend="_">on failure. </link></para>
</formalpara>
</para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1ae619dcf2218c21549cb65d875bbc6c9c">StreamInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_ae619dcf2218c21549cb65d875bbc6c9c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1aa2ee0a47a0c37ae7ca7a04df34fc6d7a"/><section>
    <title>seek()</title>
<indexterm><primary>seek</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>seek</secondary></indexterm>
<para><computeroutput>seek ( $offset,  $whence = <computeroutput>SEEK_SET</computeroutput>
)</computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_pump_stream_aa2ee0a47a0c37ae7ca7a04df34fc6d7a_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1a8153e55ed7b27a62988843a2dd66c845"/><section>
    <title>tell()</title>
<indexterm><primary>tell</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>tell</secondary></indexterm>
<para><computeroutput>tell ( )</computeroutput></para>
<para>Returns the current position of the file read/write pointer</para>

<para><formalpara><title>Renvoie</title>

<para>int Position of the file pointer </para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException on error. </para>
<para>
Implémente <link linkend="_interface_psr_1_1_http_1_1_message_1_1_stream_interface_1a8153e55ed7b27a62988843a2dd66c845">StreamInterface</link>.</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_pump_stream_1abf9a4eaa4b5194cc450e80c1a0c23a5a"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>PumpStream</secondary></indexterm>
<indexterm><primary>PumpStream</primary><secondary>write</secondary></indexterm>
<para><computeroutput>write ( $string)</computeroutput></para></section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/psr7/src/<link linkend="__pump_stream_8php">PumpStream.php</link></section>
</section>
