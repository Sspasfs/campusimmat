<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer" xml:lang="fr">
<title>Référence de la classe UriNormalizer</title>
<indexterm><primary>UriNormalizer</primary></indexterm>
Graphe de collaboration de UriNormalizer:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_uri_normalizer__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a9edb393f96b24b754c57dacb7a79d02b">normalize</link> (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">flags</link>=self::PRESERVING_NORMALIZATIONS)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a578c594cd5f480c7f941de50b991acc8">isEquivalent</link> (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri1</link>, <link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri2</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">normalizations</link>=self::PRESERVING_NORMALIZATIONS)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a977e5f1d3c24c7d9b0f2e8f3089feff8">PRESERVING_NORMALIZATIONS</link></para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a129d6809a2d01ebcfc5f15ceba4013cc">CAPITALIZE_PERCENT_ENCODING</link> = 1</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a3c20c62e5878a6bd5c57a6c67d1b8dcd">DECODE_UNRESERVED_CHARACTERS</link> = 2</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1ae86de175b0a239570e00367ecf82981a">CONVERT_EMPTY_PATH</link> = 4</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1ab8ee3ec46ca23ae621b08e7e22a55f9c">REMOVE_DEFAULT_HOST</link> = 8</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1af2502e38781ec34e4e1232e056217610">REMOVE_DEFAULT_PORT</link> = 16</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a0b1665fde671fe409499040033b00b1c">REMOVE_DOT_SEGMENTS</link> = 32</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a254467fc84329f0ce84c7df7e69120b8">REMOVE_DUPLICATE_SLASHES</link> = 64</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a5d63f102b38fe53a7ef337141146b159">SORT_QUERY_PARAMETERS</link> = 128</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Provides methods to normalize and compare URIs.</para>

<para><formalpara><title>Auteur</title>

<para>Tobias Schultze</para>
</formalpara>
<link linkend="_">https://tools.ietf.org/html/rfc3986#section-6</link></para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a578c594cd5f480c7f941de50b991acc8"/><section>
    <title>isEquivalent()</title>
<indexterm><primary>isEquivalent</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>isEquivalent</secondary></indexterm>
<para><computeroutput>static isEquivalent (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $uri1, <link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $uri2, int $normalizations = <computeroutput>self::PRESERVING_NORMALIZATIONS</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Whether two URIs can be considered equivalent.</para>

<para>Both URIs are normalized automatically before comparison with the given $normalizations bitmask. The method also accepts relative URI references and returns true when they are equivalent. This of course assumes they will be resolved against the same base URI. If this is not the case, determination of equivalence or difference of relative references does not mean anything.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>UriInterface</entry><entry>$uri1</entry><entry>
<para>An URI to compare </para>
</entry>
                            </row>
                            <row>
<entry>UriInterface</entry><entry>$uri2</entry><entry>
<para>An URI to compare </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$normalizations</entry><entry>
<para>A bitmask of normalizations to apply, see constants</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <link linkend="_">https://tools.ietf.org/html/rfc3986#section-6.1</link></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_uri_normalizer_a578c594cd5f480c7f941de50b991acc8_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a9edb393f96b24b754c57dacb7a79d02b"/><section>
    <title>normalize()</title>
<indexterm><primary>normalize</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>normalize</secondary></indexterm>
<para><computeroutput>static normalize (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $uri, int $flags = <computeroutput>self::PRESERVING_NORMALIZATIONS</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a normalized URI.</para>

<para>The scheme and host component are already normalized to lowercase per PSR-7 UriInterface. This methods adds additional normalizations that can be configured with the $flags parameter.</para>

<para>PSR-7 UriInterface cannot distinguish between an empty component and a missing component as getQuery(), getFragment() etc. always return a string. This means the URIs &quot;/?#&quot; and &quot;/&quot; are treated equivalent which is not necessarily true according to RFC 3986. But that difference is highly uncommon in reality. So this potential normalization is implied in PSR-7 as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>UriInterface</entry><entry>$uri</entry><entry>
<para>The URI to normalize </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$flags</entry><entry>
<para>A bitmask of normalizations to apply, see constants</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <link linkend="_">https://tools.ietf.org/html/rfc3986#section-6.2</link></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_uri_normalizer_a9edb393f96b24b754c57dacb7a79d02b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_psr7_1_1_uri_normalizer_a9edb393f96b24b754c57dacb7a79d02b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a129d6809a2d01ebcfc5f15ceba4013cc"/><section>
    <title>CAPITALIZE_PERCENT_ENCODING</title>
<indexterm><primary>CAPITALIZE_PERCENT_ENCODING</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>CAPITALIZE_PERCENT_ENCODING</secondary></indexterm>
<para><computeroutput>const CAPITALIZE_PERCENT_ENCODING = 1</computeroutput></para>
<para>All letters within a percent-encoding triplet (e.g., &quot;%3A&quot;) are case-insensitive, and should be capitalized.</para>

<para>Example: <link xlink:href="http://example.org/a%c2%b1b">http://example.org/a%c2%b1b</link> → <link xlink:href="http://example.org/a%C2%B1b">http://example.org/a%C2%B1b</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1ae86de175b0a239570e00367ecf82981a"/><section>
    <title>CONVERT_EMPTY_PATH</title>
<indexterm><primary>CONVERT_EMPTY_PATH</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>CONVERT_EMPTY_PATH</secondary></indexterm>
<para><computeroutput>const CONVERT_EMPTY_PATH = 4</computeroutput></para>
<para>Converts the empty path to &quot;/&quot; for http and https URIs.</para>

<para>Example: <link xlink:href="http://example.org">http://example.org</link> → <link xlink:href="http://example.org/">http://example.org/</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a3c20c62e5878a6bd5c57a6c67d1b8dcd"/><section>
    <title>DECODE_UNRESERVED_CHARACTERS</title>
<indexterm><primary>DECODE_UNRESERVED_CHARACTERS</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>DECODE_UNRESERVED_CHARACTERS</secondary></indexterm>
<para><computeroutput>const DECODE_UNRESERVED_CHARACTERS = 2</computeroutput></para>
<para>Decodes percent-encoded octets of unreserved characters.</para>

<para>For consistency, percent-encoded octets in the ranges of ALPHA (%41–%5A and %61–%7A), DIGIT (%30–%39), hyphen (%2D), period (%2E), underscore (%5F), or tilde (%7E) should not be created by URI producers and, when found in a URI, should be decoded to their corresponding unreserved characters by URI normalizers.</para>

<para>Example: <link xlink:href="http://example.org/%7Eusern%61me/">http://example.org/%7Eusern%61me/</link> → <link xlink:href="http://example.org/~username/">http://example.org/~username/</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a977e5f1d3c24c7d9b0f2e8f3089feff8"/><section>
    <title>PRESERVING_NORMALIZATIONS</title>
<indexterm><primary>PRESERVING_NORMALIZATIONS</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>PRESERVING_NORMALIZATIONS</secondary></indexterm>
<para><computeroutput>const PRESERVING_NORMALIZATIONS</computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">=
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::CAPITALIZE_PERCENT_ENCODING&#32;|
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::DECODE_UNRESERVED_CHARACTERS&#32;|
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::CONVERT_EMPTY_PATH&#32;|
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::REMOVE_DEFAULT_HOST&#32;|
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::REMOVE_DEFAULT_PORT&#32;|
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::REMOVE_DOT_SEGMENTS
</programlisting>
<para>Default normalizations which only include the ones that preserve semantics. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1ab8ee3ec46ca23ae621b08e7e22a55f9c"/><section>
    <title>REMOVE_DEFAULT_HOST</title>
<indexterm><primary>REMOVE_DEFAULT_HOST</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>REMOVE_DEFAULT_HOST</secondary></indexterm>
<para><computeroutput>const REMOVE_DEFAULT_HOST = 8</computeroutput></para>
<para>Removes the default host of the given URI scheme from the URI.</para>

<para>Only the &quot;file&quot; scheme defines the default host &quot;localhost&quot;. All of <computeroutput><link xlink:href="file:/myfile">file:/myfile</link></computeroutput>, <computeroutput><link xlink:href="file:///myfile">file:///myfile</link></computeroutput>, and <computeroutput><link xlink:href="file://localhost/myfile">file://localhost/myfile</link></computeroutput> are equivalent according to RFC 3986. The first format is not accepted by PHPs stream functions and thus already normalized implicitly to the second format in the Uri class. See <computeroutput><link linkend="_namespace_guzzle_http">GuzzleHttp</link>\Psr7\Uri::composeComponents</computeroutput>.</para>

<para>Example: <link xlink:href="file://localhost/myfile">file://localhost/myfile</link> → <link xlink:href="file:///myfile">file:///myfile</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1af2502e38781ec34e4e1232e056217610"/><section>
    <title>REMOVE_DEFAULT_PORT</title>
<indexterm><primary>REMOVE_DEFAULT_PORT</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>REMOVE_DEFAULT_PORT</secondary></indexterm>
<para><computeroutput>const REMOVE_DEFAULT_PORT = 16</computeroutput></para>
<para>Removes the default port of the given URI scheme from the URI.</para>

<para>Example: <link xlink:href="http://example.org:80/">http://example.org:80/</link> → <link xlink:href="http://example.org/">http://example.org/</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a0b1665fde671fe409499040033b00b1c"/><section>
    <title>REMOVE_DOT_SEGMENTS</title>
<indexterm><primary>REMOVE_DOT_SEGMENTS</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>REMOVE_DOT_SEGMENTS</secondary></indexterm>
<para><computeroutput>const REMOVE_DOT_SEGMENTS = 32</computeroutput></para>
<para>Removes unnecessary dot-segments.</para>

<para>Dot-segments in relative-path references are not removed as it would change the semantics of the URI reference.</para>

<para>Example: <link xlink:href="http://example.org/../a/b/../c/./d.html">http://example.org/../a/b/../c/./d.html</link> → <link xlink:href="http://example.org/a/c/d.html">http://example.org/a/c/d.html</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a254467fc84329f0ce84c7df7e69120b8"/><section>
    <title>REMOVE_DUPLICATE_SLASHES</title>
<indexterm><primary>REMOVE_DUPLICATE_SLASHES</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>REMOVE_DUPLICATE_SLASHES</secondary></indexterm>
<para><computeroutput>const REMOVE_DUPLICATE_SLASHES = 64</computeroutput></para>
<para>Paths which include two or more adjacent slashes are converted to one.</para>

<para>Webservers usually ignore duplicate slashes and treat those URIs equivalent. But in theory those URIs do not need to be equivalent. So this normalization may change the semantics. Encoded slashes (%2F) are not removed.</para>

<para>Example: <link xlink:href="http://example.org//foo///bar.html">http://example.org//foo///bar.html</link> → <link xlink:href="http://example.org/foo/bar.html">http://example.org/foo/bar.html</link> </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_psr7_1_1_uri_normalizer_1a5d63f102b38fe53a7ef337141146b159"/><section>
    <title>SORT_QUERY_PARAMETERS</title>
<indexterm><primary>SORT_QUERY_PARAMETERS</primary><secondary>UriNormalizer</secondary></indexterm>
<indexterm><primary>UriNormalizer</primary><secondary>SORT_QUERY_PARAMETERS</secondary></indexterm>
<para><computeroutput>const SORT_QUERY_PARAMETERS = 128</computeroutput></para>
<para>Sort query parameters with their values in alphabetical order.</para>

<para>However, the order of parameters in a URI may be significant (this is not defined by the standard). So this normalization is not safe and may change the semantics of the URI.</para>

<para>Example: ?lang=en&amp;article=fred → ?article=fred&amp;lang=en</para>

<para>Note: The sorting is neither locale nor Unicode aware (the URI query does not get decoded at all) as the purpose is to be able to compare URIs in a reproducible way, not to have the params sorted perfectly. </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/psr7/src/<link linkend="__uri_normalizer_8php">UriNormalizer.php</link></section>
</section>
