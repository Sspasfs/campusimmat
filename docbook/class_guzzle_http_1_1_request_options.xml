<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_request_options" xml:lang="fr">
<title>Référence de la classe RequestOptions</title>
<indexterm><primary>RequestOptions</primary></indexterm>
Graphe de collaboration de RequestOptions:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_request_options__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ae69e9c022902daee3a8a59c1450d3916">ALLOW_REDIRECTS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allow_redirects</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a9469f677d38fc7185f2967569096b0ad">AUTH</link> = &apos;auth&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a43b6c76b6ef9c6ac67c48cd72783e105">BODY</link> = &apos;body&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a84fc632d23772bd037eba31e3a361bef">CERT</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">cert</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a3d0688acf5c3b582dcddf1256db04cd0">COOKIES</link> = &apos;cookies&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1acef0531355a3a0a248b0e6dfb6d95e7f">CONNECT_TIMEOUT</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">connect_timeout</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a758c150b67e476ecf77478f16b387c61">DEBUG</link> = &apos;debug&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a0010871540a821fac372e9070a6382c6">DECODE_CONTENT</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">decode_content</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ab9a7918d47e1be65a98611200ee36f2d">DELAY</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">delay</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1af74352f041efe7834acc837339a092ac">EXPECT</link> = &apos;expect&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a9f1115a40cdb0db1d08f077ce7ce84fd">FORM_PARAMS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">form_params</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a8b17c0b2a3e13c7af90a77bf1369e7e1">HEADERS</link> = &apos;headers&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a69385a8ec0a7c074ba10b804bdb8a533">HTTP_ERRORS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">http_errors</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a9df3b25ddb171f6c1c9ab9ceddd1b8d7">IDN_CONVERSION</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">idn_conversion</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1addb3dc7c4a57b9cee800f894e6dc2b4d">JSON</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">json</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a4aa96b08f7e67421dfae422d4874ddfb">MULTIPART</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">multipart</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a6a7a1361072ce2f1555d8cd92890ecaa">ON_HEADERS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">on_headers</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1addd96da52390f7025faa33d484263d44">ON_STATS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">on_stats</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a543d52cf14847f61a8d9c2ee74b25b0e">PROGRESS</link> = &apos;progress&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a06a1316818325c4be8ab7408827ca7db">PROXY</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">proxy</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1aba65a79a404076d2346e65d018f47760">QUERY</link> = &apos;query&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a26f9db8e9504e06d48423a13055179a1">SINK</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">sink</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ae4aea91fa0837add42773477d66ad472">SYNCHRONOUS</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">synchronous</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ab643d0258b88cdd4623b6067d0608ae3">SSL_KEY</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">ssl_key</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ae106697635459c76db45fddd3904043b">STREAM</link> = &apos;stream&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a51aa095d9782f65230ddc7e74b730aa6">VERIFY</link> = &apos;verify&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1ae001ea02b5d8fb1d82b0f9a0e891774e">TIMEOUT</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">timeout</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a1dca5d6cf19964defabfbf92ccce750c">READ_TIMEOUT</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">read_timeout</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1af71005841ce53adac00581ab0ba24c1f">VERSION</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">version</link>&apos;</para>
</listitem>
            <listitem><para>const <link linkend="_class_guzzle_http_1_1_request_options_1a2cc6762a68fb6da4bdfef4fe528a82fc">FORCE_IP_RESOLVE</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">force_ip_resolve</link>&apos;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>This class contains a list of built-in Guzzle request options.</para>

<para>More documentation for each option can be found at <link xlink:href="http://guzzlephp.org/">http://guzzlephp.org/</link>.</para>

<para><link linkend="_">http://docs.guzzlephp.org/en/v6/request-options.html</link></para>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ae69e9c022902daee3a8a59c1450d3916"/><section>
    <title>ALLOW_REDIRECTS</title>
<indexterm><primary>ALLOW_REDIRECTS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>ALLOW_REDIRECTS</secondary></indexterm>
<para><computeroutput>const ALLOW_REDIRECTS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allow_redirects</link>&apos;</computeroutput></para>
<para>allow_redirects: (bool|array) Controls redirect behavior. Pass false to disable redirects, pass true to enable redirects, pass an associative to provide custom redirect settings. Defaults to &quot;false&quot;. This option only works if your handler has the RedirectMiddleware. When passing an associative array, you can provide the following key value pairs:</para>

<para><itemizedlist>
<listitem>
<para>max: (int, default=5) maximum number of allowed redirects.</para>
</listitem><listitem>
<para>strict: (bool, default=false) Set to true to use strict redirects meaning redirect POST requests with POST requests vs. doing what most browsers do which is redirect POST requests with GET requests</para>
</listitem><listitem>
<para>referer: (bool, default=false) Set to true to enable the Referer header.</para>
</listitem><listitem>
<para>protocols: (array, default=[&apos;http&apos;, &apos;https&apos;]) Allowed redirect protocols.</para>
</listitem><listitem>
<para>on_redirect: (callable) PHP callable that is invoked when a redirect is encountered. The callable is invoked with the request, the redirect response that was received, and the effective URI. Any return value from the on_redirect function is ignored. </para>
</listitem></itemizedlist>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a9469f677d38fc7185f2967569096b0ad"/><section>
    <title>AUTH</title>
<indexterm><primary>AUTH</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>AUTH</secondary></indexterm>
<para><computeroutput>const AUTH = &apos;auth&apos;</computeroutput></para>
<para>auth: (array) Pass an array of HTTP authentication parameters to use with the request. The array must contain the username in index [0], the password in index [1], and you can optionally provide a built-in authentication type in index [2]. Pass null to disable authentication for a request. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a43b6c76b6ef9c6ac67c48cd72783e105"/><section>
    <title>BODY</title>
<indexterm><primary>BODY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>BODY</secondary></indexterm>
<para><computeroutput>const BODY = &apos;body&apos;</computeroutput></para>
<para>body: (resource|string|null|int|float|StreamInterface|callable|\Iterator) Body to send in the request. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a84fc632d23772bd037eba31e3a361bef"/><section>
    <title>CERT</title>
<indexterm><primary>CERT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>CERT</secondary></indexterm>
<para><computeroutput>const CERT = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">cert</link>&apos;</computeroutput></para>
<para>cert: (string|array) Set to a string to specify the path to a file containing a PEM formatted SSL client side certificate. If a password is required, then set cert to an array containing the path to the PEM file in the first array element followed by the certificate password in the second array element. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1acef0531355a3a0a248b0e6dfb6d95e7f"/><section>
    <title>CONNECT_TIMEOUT</title>
<indexterm><primary>CONNECT_TIMEOUT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>CONNECT_TIMEOUT</secondary></indexterm>
<para><computeroutput>const CONNECT_TIMEOUT = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">connect_timeout</link>&apos;</computeroutput></para>
<para>connect_timeout: (float, default=0) Float describing the number of seconds to wait while trying to connect to a server. Use 0 to wait indefinitely (the default behavior). </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a3d0688acf5c3b582dcddf1256db04cd0"/><section>
    <title>COOKIES</title>
<indexterm><primary>COOKIES</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>COOKIES</secondary></indexterm>
<para><computeroutput>const COOKIES = &apos;cookies&apos;</computeroutput></para>
<para>cookies: (bool|GuzzleHttp\Cookie\CookieJarInterface, default=false) Specifies whether or not cookies are used in a request or what cookie jar to use or what cookies to send. This option only works if your handler has the <computeroutput>cookie</computeroutput> middleware. Valid values are <computeroutput>false</computeroutput> and an instance of {<formalpara><title>Voir également</title>

<para>\GuzzleHttp\Cookie\CookieJarInterface}. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a758c150b67e476ecf77478f16b387c61"/><section>
    <title>DEBUG</title>
<indexterm><primary>DEBUG</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>DEBUG</secondary></indexterm>
<para><computeroutput>const DEBUG = &apos;debug&apos;</computeroutput></para>
<para>debug: (bool|resource) Set to true or set to a PHP stream returned by fopen() enable debug output with the HTTP handler used to send a request. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a0010871540a821fac372e9070a6382c6"/><section>
    <title>DECODE_CONTENT</title>
<indexterm><primary>DECODE_CONTENT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>DECODE_CONTENT</secondary></indexterm>
<para><computeroutput>const DECODE_CONTENT = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">decode_content</link>&apos;</computeroutput></para>
<para>decode_content: (bool, default=true) Specify whether or not Content-Encoding responses (gzip, deflate, etc.) are automatically decoded. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ab9a7918d47e1be65a98611200ee36f2d"/><section>
    <title>DELAY</title>
<indexterm><primary>DELAY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>DELAY</secondary></indexterm>
<para><computeroutput>const DELAY = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">delay</link>&apos;</computeroutput></para>
<para>delay: (int) The amount of time to delay before sending in milliseconds. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1af74352f041efe7834acc837339a092ac"/><section>
    <title>EXPECT</title>
<indexterm><primary>EXPECT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>EXPECT</secondary></indexterm>
<para><computeroutput>const EXPECT = &apos;expect&apos;</computeroutput></para>
<para>expect: (bool|integer) Controls the behavior of the &quot;Expect: 100-Continue&quot; header.</para>

<para>Set to <computeroutput>true</computeroutput> to enable the &quot;Expect: 100-Continue&quot; header for all requests that sends a body. Set to <computeroutput>false</computeroutput> to disable the &quot;Expect: 100-Continue&quot; header for all requests. Set to a number so that the size of the payload must be greater than the number in order to send the Expect header. Setting to a number will send the Expect header for all requests in which the size of the payload cannot be determined or where the body is not rewindable.</para>

<para>By default, Guzzle will add the &quot;Expect: 100-Continue&quot; header when the size of the body of a request is greater than 1 MB and a request is using HTTP/1.1. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a2cc6762a68fb6da4bdfef4fe528a82fc"/><section>
    <title>FORCE_IP_RESOLVE</title>
<indexterm><primary>FORCE_IP_RESOLVE</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>FORCE_IP_RESOLVE</secondary></indexterm>
<para><computeroutput>const FORCE_IP_RESOLVE = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">force_ip_resolve</link>&apos;</computeroutput></para>
<para>force_ip_resolve: (bool) Force client to use only ipv4 or ipv6 protocol </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a9f1115a40cdb0db1d08f077ce7ce84fd"/><section>
    <title>FORM_PARAMS</title>
<indexterm><primary>FORM_PARAMS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>FORM_PARAMS</secondary></indexterm>
<para><computeroutput>const FORM_PARAMS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">form_params</link>&apos;</computeroutput></para>
<para>form_params: (array) Associative array of form field names to values where each value is a string or array of strings. Sets the Content-Type header to application/x-www-form-urlencoded when no Content-Type header is already present. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a8b17c0b2a3e13c7af90a77bf1369e7e1"/><section>
    <title>HEADERS</title>
<indexterm><primary>HEADERS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>HEADERS</secondary></indexterm>
<para><computeroutput>const HEADERS = &apos;headers&apos;</computeroutput></para>
<para>headers: (array) Associative array of HTTP headers. Each value MUST be a string or array of strings. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a69385a8ec0a7c074ba10b804bdb8a533"/><section>
    <title>HTTP_ERRORS</title>
<indexterm><primary>HTTP_ERRORS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>HTTP_ERRORS</secondary></indexterm>
<para><computeroutput>const HTTP_ERRORS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">http_errors</link>&apos;</computeroutput></para>
<para>http_errors: (bool, default=true) Set to false to disable exceptions when a non- successful HTTP response is received. By default, exceptions will be thrown for 4xx and 5xx responses. This option only works if your handler has the <computeroutput>httpErrors</computeroutput> middleware. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a9df3b25ddb171f6c1c9ab9ceddd1b8d7"/><section>
    <title>IDN_CONVERSION</title>
<indexterm><primary>IDN_CONVERSION</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>IDN_CONVERSION</secondary></indexterm>
<para><computeroutput>const IDN_CONVERSION = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">idn_conversion</link>&apos;</computeroutput></para>
<para>idn: (bool|int, default=true) A combination of IDNA_* constants for idn_to_ascii() PHP&apos;s function (see &quot;options&quot; parameter). Set to false to disable IDN support completely, or to true to use the default configuration (IDNA_DEFAULT constant). </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1addb3dc7c4a57b9cee800f894e6dc2b4d"/><section>
    <title>JSON</title>
<indexterm><primary>JSON</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>JSON</secondary></indexterm>
<para><computeroutput>const JSON = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">json</link>&apos;</computeroutput></para>
<para>json: (mixed) Adds JSON data to a request. The provided value is JSON encoded and a Content-Type header of application/json will be added to the request if no Content-Type header is already present. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a4aa96b08f7e67421dfae422d4874ddfb"/><section>
    <title>MULTIPART</title>
<indexterm><primary>MULTIPART</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>MULTIPART</secondary></indexterm>
<para><computeroutput>const MULTIPART = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">multipart</link>&apos;</computeroutput></para>
<para>multipart: (array) Array of associative arrays, each containing a required &quot;name&quot; key mapping to the form field, name, a required &quot;contents&quot; key mapping to a StreamInterface|resource|string, an optional &quot;headers&quot; associative array of custom headers, and an optional &quot;filename&quot; key mapping to a string to send as the filename in the part. If no &quot;filename&quot; key is present, then no &quot;filename&quot; attribute will be added to the part. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a6a7a1361072ce2f1555d8cd92890ecaa"/><section>
    <title>ON_HEADERS</title>
<indexterm><primary>ON_HEADERS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>ON_HEADERS</secondary></indexterm>
<para><computeroutput>const ON_HEADERS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">on_headers</link>&apos;</computeroutput></para>
<para>on_headers: (callable) A callable that is invoked when the HTTP headers of the response have been received but the body has not yet begun to download. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1addd96da52390f7025faa33d484263d44"/><section>
    <title>ON_STATS</title>
<indexterm><primary>ON_STATS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>ON_STATS</secondary></indexterm>
<para><computeroutput>const ON_STATS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">on_stats</link>&apos;</computeroutput></para>
<para>on_stats: (callable) allows you to get access to transfer statistics of a request and access the lower level transfer details of the handler associated with your client. <computeroutput>on_stats</computeroutput> is a callable that is invoked when a handler has finished sending a request. The callback is invoked with transfer statistics about the request, the response received, or the error encountered. Included in the data is the total amount of time taken to send the request. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a543d52cf14847f61a8d9c2ee74b25b0e"/><section>
    <title>PROGRESS</title>
<indexterm><primary>PROGRESS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>PROGRESS</secondary></indexterm>
<para><computeroutput>const PROGRESS = &apos;progress&apos;</computeroutput></para>
<para>progress: (callable) Defines a function to invoke when transfer progress is made. The function accepts the following positional arguments: the total number of bytes expected to be downloaded, the number of bytes downloaded so far, the number of bytes expected to be uploaded, the number of bytes uploaded so far. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a06a1316818325c4be8ab7408827ca7db"/><section>
    <title>PROXY</title>
<indexterm><primary>PROXY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>PROXY</secondary></indexterm>
<para><computeroutput>const PROXY = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">proxy</link>&apos;</computeroutput></para>
<para>proxy: (string|array) Pass a string to specify an HTTP proxy, or an array to specify different proxies for different protocols (where the key is the protocol and the value is a proxy string). </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1aba65a79a404076d2346e65d018f47760"/><section>
    <title>QUERY</title>
<indexterm><primary>QUERY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>QUERY</secondary></indexterm>
<para><computeroutput>const QUERY = &apos;query&apos;</computeroutput></para>
<para>query: (array|string) Associative array of query string values to add to the request. This option uses PHP&apos;s http_build_query() to create the string representation. Pass a string value if you need more control than what this method provides </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a1dca5d6cf19964defabfbf92ccce750c"/><section>
    <title>READ_TIMEOUT</title>
<indexterm><primary>READ_TIMEOUT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>READ_TIMEOUT</secondary></indexterm>
<para><computeroutput>const READ_TIMEOUT = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">read_timeout</link>&apos;</computeroutput></para>
<para>read_timeout: (float, default=default_socket_timeout ini setting) Float describing the body read timeout, for stream requests. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a26f9db8e9504e06d48423a13055179a1"/><section>
    <title>SINK</title>
<indexterm><primary>SINK</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>SINK</secondary></indexterm>
<para><computeroutput>const SINK = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">sink</link>&apos;</computeroutput></para>
<para>sink: (resource|string|StreamInterface) Where the data of the response is written to. Defaults to a PHP temp stream. Providing a string will write data to a file by the given name. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ab643d0258b88cdd4623b6067d0608ae3"/><section>
    <title>SSL_KEY</title>
<indexterm><primary>SSL_KEY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>SSL_KEY</secondary></indexterm>
<para><computeroutput>const SSL_KEY = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">ssl_key</link>&apos;</computeroutput></para>
<para>ssl_key: (array|string) Specify the path to a file containing a private SSL key in PEM format. If a password is required, then set to an array containing the path to the SSL key in the first array element followed by the password required for the certificate in the second element. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ae106697635459c76db45fddd3904043b"/><section>
    <title>STREAM</title>
<indexterm><primary>STREAM</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>STREAM</secondary></indexterm>
<para><computeroutput>const STREAM = &apos;stream&apos;</computeroutput></para>
<para>stream: Set to true to attempt to stream a response rather than download it all up-front. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ae4aea91fa0837add42773477d66ad472"/><section>
    <title>SYNCHRONOUS</title>
<indexterm><primary>SYNCHRONOUS</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>SYNCHRONOUS</secondary></indexterm>
<para><computeroutput>const SYNCHRONOUS = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">synchronous</link>&apos;</computeroutput></para>
<para>synchronous: (bool) Set to true to inform HTTP handlers that you intend on waiting on the response. This can be useful for optimizations. Note that a promise is still returned if you are using one of the async client methods. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1ae001ea02b5d8fb1d82b0f9a0e891774e"/><section>
    <title>TIMEOUT</title>
<indexterm><primary>TIMEOUT</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>TIMEOUT</secondary></indexterm>
<para><computeroutput>const TIMEOUT = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">timeout</link>&apos;</computeroutput></para>
<para>timeout: (float, default=0) Float describing the timeout of the request in seconds. Use 0 to wait indefinitely (the default behavior). </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1a51aa095d9782f65230ddc7e74b730aa6"/><section>
    <title>VERIFY</title>
<indexterm><primary>VERIFY</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>VERIFY</secondary></indexterm>
<para><computeroutput>const VERIFY = &apos;verify&apos;</computeroutput></para>
<para>verify: (bool|string, default=true) Describes the SSL certificate verification behavior of a request. Set to true to enable SSL certificate verification using the system CA bundle when available (the default). Set to false to disable certificate verification (this is insecure!). Set to a string to provide the path to a CA bundle on disk to enable verification using a custom certificate. </para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_request_options_1af71005841ce53adac00581ab0ba24c1f"/><section>
    <title>VERSION</title>
<indexterm><primary>VERSION</primary><secondary>RequestOptions</secondary></indexterm>
<indexterm><primary>RequestOptions</primary><secondary>VERSION</secondary></indexterm>
<para><computeroutput>const VERSION = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">version</link>&apos;</computeroutput></para>
<para>version: (float) Specifies the HTTP protocol version to attempt to use. </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/guzzle/src/<link linkend="__request_options_8php">RequestOptions.php</link></section>
</section>
