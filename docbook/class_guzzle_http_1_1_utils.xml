<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_guzzle_http_1_1_utils" xml:lang="fr">
<title>Référence de la classe Utils</title>
<indexterm><primary>Utils</primary></indexterm>
Graphe de collaboration de Utils:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1adaa715a677ca9c96f17d12d17a4306a6">headersFromLines</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">iterable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">lines</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1a6293ab252c4880a2a343cef02e739da9">debugResource</link> ($value=null)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1a9b4bb8c32bfe4b4d9cfdd840600b88e7">chooseHandler</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1a8ba4da3a7a2f31dd85b1be7c474fb541">defaultUserAgent</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1a8163ba6dc6fcafdab0ef2265da6a8382">defaultCaBundle</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1aa6b5075583ab85d371b65426b878b4fa">normalizeHeaderKeys</link> (array $headers)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1ab67b6c2bf67736eccab698cbf5f4b1a8">isHostInNoProxy</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">host</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">noProxyArray</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1ad93b280a3ab77d3bf351ff57c372a6b2">jsonDecode</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">json</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">assoc</link>=false, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">depth</link>=512, int $options=0)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1ab1f6b1e30ff08b338644047f1b506e2a">currentTime</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1a404ebc2c5f417e42b912e8e65c9b8cca">idnUriConvert</link> (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, int $options=0)</para>
</listitem>
            <listitem><para>static <link linkend="_class_guzzle_http_1_1_utils_1afa144d29c5e4270a3cc9897c6ba465fc">getenv</link> (string $name)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_guzzle_http_1_1_utils_1a9b4bb8c32bfe4b4d9cfdd840600b88e7"/><section>
    <title>chooseHandler()</title>
<indexterm><primary>chooseHandler</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>chooseHandler</secondary></indexterm>
<para><computeroutput>static chooseHandler ( )<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Chooses and creates a default handler to use based on the environment.</para>

<para>The returned handler is not wrapped by any default middlewares.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if no viable Handler is available.</para>

<para><formalpara><title>Renvoie</title>

<para>callable(\Psr\Http\Message\RequestInterface, array): \GuzzleHttp\Promise\PromiseInterface Returns the best handler for the given system. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_a9b4bb8c32bfe4b4d9cfdd840600b88e7_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1ab1f6b1e30ff08b338644047f1b506e2a"/><section>
    <title>currentTime()</title>
<indexterm><primary>currentTime</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>currentTime</secondary></indexterm>
<para><computeroutput>static currentTime ( )<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Wrapper for the <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hrtime()</link> or microtime() functions (depending on the PHP version, one of the two is used)</para>

<para><formalpara><title>Renvoie</title>

<para>float UNIX timestamp </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_ab1f6b1e30ff08b338644047f1b506e2a_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1a6293ab252c4880a2a343cef02e739da9"/><section>
    <title>debugResource()</title>
<indexterm><primary>debugResource</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>debugResource</secondary></indexterm>
<para><computeroutput>static debugResource ( $value = <computeroutput>null</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns a debug stream based on the provided variable.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para>Optional value</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>resource </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_a6293ab252c4880a2a343cef02e739da9_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1a8163ba6dc6fcafdab0ef2265da6a8382"/><section>
    <title>defaultCaBundle()</title>
<indexterm><primary>defaultCaBundle</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>defaultCaBundle</secondary></indexterm>
<para><computeroutput>static defaultCaBundle ( )<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns the default cacert bundle for the current system.</para>

<para>First, the openssl.cafile and curl.cainfo php.ini settings are checked. If those settings are not configured, then the common locations for bundles found on Red Hat, CentOS, Fedora, Ubuntu, Debian, FreeBSD, OS X and Windows are checked. If any of these file locations are found on disk, they will be utilized.</para>

<para>Note: the result of this function is cached for subsequent calls.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if no bundle can be found.</para>

<para><para><link linkend="_deprecated_1_deprecated000039">Obsolète</link> 
<para>Utils::defaultCaBundle will be removed in guzzlehttp/guzzle:8.0. This method is not needed in PHP 5.6+. </para>
</para></para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_a8163ba6dc6fcafdab0ef2265da6a8382_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1a8ba4da3a7a2f31dd85b1be7c474fb541"/><section>
    <title>defaultUserAgent()</title>
<indexterm><primary>defaultUserAgent</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>defaultUserAgent</secondary></indexterm>
<para><computeroutput>static defaultUserAgent ( )<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Get the default User-Agent string to use with Guzzle. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_a8ba4da3a7a2f31dd85b1be7c474fb541_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1afa144d29c5e4270a3cc9897c6ba465fc"/><section>
    <title>getenv()</title>
<indexterm><primary>getenv</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>getenv</secondary></indexterm>
<para><computeroutput>static getenv (string $name)<computeroutput>[static]</computeroutput></computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_afa144d29c5e4270a3cc9897c6ba465fc_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1adaa715a677ca9c96f17d12d17a4306a6"/><section>
    <title>headersFromLines()</title>
<indexterm><primary>headersFromLines</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>headersFromLines</secondary></indexterm>
<para><computeroutput>static headersFromLines (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">iterable</link> $lines)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Parses an array of header lines into an associative array of headers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>iterable</entry><entry>$lines</entry><entry>
<para>Header lines array of strings in the following format: &quot;Name: Value&quot; </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_adaa715a677ca9c96f17d12d17a4306a6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1a404ebc2c5f417e42b912e8e65c9b8cca"/><section>
    <title>idnUriConvert()</title>
<indexterm><primary>idnUriConvert</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>idnUriConvert</secondary></indexterm>
<para><computeroutput>static idnUriConvert (<link linkend="_interface_psr_1_1_http_1_1_message_1_1_uri_interface">UriInterface</link> $uri, int $options = <computeroutput>0</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_a404ebc2c5f417e42b912e8e65c9b8cca_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1ab67b6c2bf67736eccab698cbf5f4b1a8"/><section>
    <title>isHostInNoProxy()</title>
<indexterm><primary>isHostInNoProxy</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>isHostInNoProxy</secondary></indexterm>
<para><computeroutput>static isHostInNoProxy (string $host, array $noProxyArray)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Returns true if the provided host matches any of the no proxy areas.</para>

<para>This method will strip a port from the host if it is present. Each pattern can be matched with an exact match (e.g., &quot;foo.com&quot; == &quot;foo.com&quot;) or a partial match: (e.g., &quot;foo.com&quot; == &quot;baz.foo.com&quot; and &quot;.foo.com&quot; == &quot;baz.foo.com&quot;, but &quot;.foo.com&quot; != &quot;foo.com&quot;).</para>

<para>Areas are matched in the following cases:<orderedlist>
<listitem>
<para>&quot;*&quot; (without quotes) always matches any hosts.</para>
</listitem><listitem>
<para>An exact match.</para>
</listitem><listitem>
<para>The area starts with &quot;.&quot; and the area is the last part of the host. e.g. &apos;.mit.edu&apos; will match any host that ends with &apos;.mit.edu&apos;.</para>
</listitem></orderedlist>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$host</entry><entry>
<para>Host to check against the patterns. </para>
</entry>
                            </row>
                            <row>
<entry>string[]</entry><entry>$noProxyArray</entry><entry>
<para>An array of host patterns.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_ab67b6c2bf67736eccab698cbf5f4b1a8_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1ad93b280a3ab77d3bf351ff57c372a6b2"/><section>
    <title>jsonDecode()</title>
<indexterm><primary>jsonDecode</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>jsonDecode</secondary></indexterm>
<para><computeroutput>static jsonDecode (string $json, bool $assoc = <computeroutput>false</computeroutput>
, int $depth = <computeroutput>512</computeroutput>
, int $options = <computeroutput>0</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Wrapper for json_decode that throws when an error occurs.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$json</entry><entry>
<para>JSON data to parse </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$assoc</entry><entry>
<para>When true, returned objects will be converted into associative arrays. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry>
<para><link linkend="_class_user">User</link> specified recursion depth. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$options</entry><entry>
<para>Bitmask of JSON decode options.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>object|array|string|int|float|bool|null</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para>if the JSON cannot be decoded.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <link linkend="_">https://www.php.net/manual/en/function.json-decode.php</link></para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_ad93b280a3ab77d3bf351ff57c372a6b2_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_guzzle_http_1_1_utils_1aa6b5075583ab85d371b65426b878b4fa"/><section>
    <title>normalizeHeaderKeys()</title>
<indexterm><primary>normalizeHeaderKeys</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>normalizeHeaderKeys</secondary></indexterm>
<para><computeroutput>static normalizeHeaderKeys (array $headers)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Creates an associative array of lowercase header names to the actual header casing. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_guzzle_http_1_1_utils_aa6b5075583ab85d371b65426b878b4fa_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/guzzlehttp/guzzle/src/<link linkend="_guzzlehttp_2guzzle_2src_2_utils_8php">Utils.php</link></section>
</section>
