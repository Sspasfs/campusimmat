<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_laminas_1_1_stdlib_1_1_array_utils" xml:lang="fr">
<title>Référence de la classe ArrayUtils</title>
<indexterm><primary>ArrayUtils</primary></indexterm>
Graphe de collaboration de ArrayUtils:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_laminas_1_1_stdlib_1_1_array_utils__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a0f27f1952adaa394b1983fa78529c09a">hasStringKeys</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allowEmpty</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a0284a4a217511a5b82c1f137fe211aed">hasIntegerKeys</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allowEmpty</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1afc52819a0cb615b8eef2c1660d897498">hasNumericKeys</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allowEmpty</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1ab2e4e81c68de79c3b2460e008a7683ae">isList</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allowEmpty</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a10e4394115fe1d59f15fb80cfaee9584">isHashTable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">allowEmpty</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1addc5c8b484034b4a89b1aa3464951e99">inArray</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">needle</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">haystack</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">strict</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1ad6ddf1905ebf1c46e08622d832a1e453">iteratorToArray</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">iterator</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">recursive</link>=true)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a400e0aeaebfc4cc3d6eb935c923654dc">merge</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">a</link>, array $b, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">preserveNumericKeys</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1ad3104b35c825a53156c86054de1aa76d">filter</link> (array $data, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">flag</link>=null)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a4b5e29e176f2b0f8f03d9bad479a37ec">ARRAY_FILTER_USE_BOTH</link> = 1</para>
</listitem>
            <listitem><para>const <link linkend="_class_laminas_1_1_stdlib_1_1_array_utils_1a1c60c4ab697c00d12d2b575111a254f8">ARRAY_FILTER_USE_KEY</link> = 2</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Utility class for testing and manipulation of PHP arrays.</para>

<para>Declared abstract, as we have no need for instantiation. </para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1ad3104b35c825a53156c86054de1aa76d"/><section>
    <title>filter()</title>
<indexterm><primary>filter</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>filter</secondary></indexterm>
<para><computeroutput>static filter (array $data,  $callback,  $flag = <computeroutput>null</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para><para><link linkend="_deprecated_1_deprecated000080">Obsolète</link> 
<para>Since 3.2.0; use the native array_filter methods</para>
</para></para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$data</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>callable</entry><entry>$callback</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>null | int</entry><entry>$flag</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException </para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a0284a4a217511a5b82c1f137fe211aed"/><section>
    <title>hasIntegerKeys()</title>
<indexterm><primary>hasIntegerKeys</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>hasIntegerKeys</secondary></indexterm>
<para><computeroutput>static hasIntegerKeys ( $value,  $allowEmpty = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Test whether an array contains one or more integer keys</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$allowEmpty</entry><entry>
<para>Should an empty array() return true </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1afc52819a0cb615b8eef2c1660d897498"/><section>
    <title>hasNumericKeys()</title>
<indexterm><primary>hasNumericKeys</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>hasNumericKeys</secondary></indexterm>
<para><computeroutput>static hasNumericKeys ( $value,  $allowEmpty = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Test whether an array contains one or more numeric keys.</para>

<para>A numeric key can be one of the following:<itemizedlist>
<listitem>
<para>an integer 1,</para>
</listitem><listitem>
<para>a string with a number &apos;20&apos;</para>
</listitem><listitem>
<para>a string with negative number: &apos;-1000&apos;</para>
</listitem><listitem>
<para>a float: 2.2120, -78.150999</para>
</listitem><listitem>
<para>a string with float: &apos;4000.99999&apos;, &apos;-10.10&apos;</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$allowEmpty</entry><entry>
<para>Should an empty array() return true </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a0f27f1952adaa394b1983fa78529c09a"/><section>
    <title>hasStringKeys()</title>
<indexterm><primary>hasStringKeys</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>hasStringKeys</secondary></indexterm>
<para><computeroutput>static hasStringKeys ( $value,  $allowEmpty = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Test whether an array contains one or more string keys</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$allowEmpty</entry><entry>
<para>Should an empty array() return true </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1addc5c8b484034b4a89b1aa3464951e99"/><section>
    <title>inArray()</title>
<indexterm><primary>inArray</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>inArray</secondary></indexterm>
<para><computeroutput>static inArray ( $needle, array $haystack,  $strict = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Checks if a value exists in an array.</para>

<para>Due to &quot;foo&quot; == 0 === TRUE with in_array when strict = false, an option has been added to prevent this. When $strict = 0/false, the most secure non-strict check is implemented. if $strict = -1, the default in_array non-strict behaviour is used.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$needle</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$haystack</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | bool</entry><entry>$strict</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a10e4394115fe1d59f15fb80cfaee9584"/><section>
    <title>isHashTable()</title>
<indexterm><primary>isHashTable</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>isHashTable</secondary></indexterm>
<para><computeroutput>static isHashTable ( $value,  $allowEmpty = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Test whether an array is a hash table.</para>

<para>An array is a hash table if:</para>

<para><orderedlist>
<listitem>
<para>Contains one or more non-integer keys, or</para>
</listitem><listitem>
<para>Integer keys are non-continuous or misaligned (not starting with 0)</para>
</listitem></orderedlist>
</para>

<para>For example: <computeroutput> $hash = array( &apos;foo&apos; =&gt; 15, &apos;bar&apos; =&gt; false, ); $hash = array( 1995 =&gt; &apos;Birth of PHP&apos;, 2009 =&gt; &apos;PHP 5.3.0&apos;, 2012 =&gt; &apos;PHP 5.4.0&apos;, ); $hash = array( &apos;formElement, &apos;options&apos; =&gt; array( &apos;debug&apos; =&gt; true ), ); </computeroutput></para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$allowEmpty</entry><entry>
<para>Is an empty array() a valid hash table? </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1ab2e4e81c68de79c3b2460e008a7683ae"/><section>
    <title>isList()</title>
<indexterm><primary>isList</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>isList</secondary></indexterm>
<para><computeroutput>static isList ( $value,  $allowEmpty = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Test whether an array is a list</para>

<para>A list is a collection of values assigned to continuous integer keys starting at 0 and ending at count() - 1.</para>

<para>For example: <computeroutput> $list = array(&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;); $list = array( 0 =&gt; &apos;foo&apos;, 1 =&gt; &apos;bar&apos;, 2 =&gt; array(&apos;foo&apos; =&gt; &apos;baz&apos;), ); </computeroutput></para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$allowEmpty</entry><entry>
<para>Is an empty list a valid list? </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1ad6ddf1905ebf1c46e08622d832a1e453"/><section>
    <title>iteratorToArray()</title>
<indexterm><primary>iteratorToArray</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>iteratorToArray</secondary></indexterm>
<para><computeroutput>static iteratorToArray ( $iterator,  $recursive = <computeroutput>true</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Convert an iterator to an array.</para>

<para>Converts an iterator to an array. The $recursive flag, on by default, hints whether or not you want to do so recursively.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array | Traversable</entry><entry>$iterator</entry><entry>
<para>The array or Traversable object to convert </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$recursive</entry><entry>
<para>Recursively check all nested structures </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If $iterator is not an array or a Traversable object. <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_laminas_1_1_stdlib_1_1_array_utils_ad6ddf1905ebf1c46e08622d832a1e453_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a400e0aeaebfc4cc3d6eb935c923654dc"/><section>
    <title>merge()</title>
<indexterm><primary>merge</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>merge</secondary></indexterm>
<para><computeroutput>static merge (array $a, array $b,  $preserveNumericKeys = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Merge two arrays together.</para>

<para>If an integer key exists in both arrays and preserveNumericKeys is false, the value from the second array will be appended to the first array. If both values are arrays, they are merged together, else the value of the second array overwrites the one of the first array.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$a</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$b</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$preserveNumericKeys</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_laminas_1_1_stdlib_1_1_array_utils_a400e0aeaebfc4cc3d6eb935c923654dc_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a4b5e29e176f2b0f8f03d9bad479a37ec"/><section>
    <title>ARRAY_FILTER_USE_BOTH</title>
<indexterm><primary>ARRAY_FILTER_USE_BOTH</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>ARRAY_FILTER_USE_BOTH</secondary></indexterm>
<para><computeroutput>const ARRAY_FILTER_USE_BOTH = 1</computeroutput></para>
<para>Compatibility Flag for ArrayUtils::filter </para>
</section>
<anchor xml:id="_class_laminas_1_1_stdlib_1_1_array_utils_1a1c60c4ab697c00d12d2b575111a254f8"/><section>
    <title>ARRAY_FILTER_USE_KEY</title>
<indexterm><primary>ARRAY_FILTER_USE_KEY</primary><secondary>ArrayUtils</secondary></indexterm>
<indexterm><primary>ArrayUtils</primary><secondary>ARRAY_FILTER_USE_KEY</secondary></indexterm>
<para><computeroutput>const ARRAY_FILTER_USE_KEY = 2</computeroutput></para>
<para>Compatibility Flag for ArrayUtils::filter </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/laminas/laminas-stdlib/src/<link linkend="__array_utils_8php">ArrayUtils.php</link></section>
</section>
