<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_handler" xml:lang="fr">
<title>Référence de la classe Handler</title>
<indexterm><primary>Handler</primary></indexterm>
Graphe d&apos;héritage de Handler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de Handler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Base Handler class providing basic close() support as well as handleBatch</para>

<para><formalpara><title>Auteur</title>

<para>Jordi Boggiano <link xlink:href="mailto:j.boggiano@seld.be">j.boggiano@seld.be</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758"/><section>
    <title>__destruct()</title>
<indexterm><primary>__destruct</primary><secondary>Handler</secondary></indexterm>
<indexterm><primary>Handler</primary><secondary>__destruct</secondary></indexterm>
<para><computeroutput>__destruct ( )</computeroutput></para><para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_buffer_handler_1a421831a265621325e1fdd19aace0c758">BufferHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler_a421831a265621325e1fdd19aace0c758_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4"/><section>
    <title>__sleep()</title>
<indexterm><primary>__sleep</primary><secondary>Handler</secondary></indexterm>
<indexterm><primary>Handler</primary><secondary>__sleep</secondary></indexterm>
<para><computeroutput>__sleep ( )</computeroutput></para>Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler_aaf11785905da71774e052912d784e3b4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>Handler</secondary></indexterm>
<indexterm><primary>Handler</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>
<para>Closes the handler.</para>

<para>Ends a log cycle and frees all resources used by the handler.</para>

<para>Closing a <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link> means flushing all buffers and freeing any open resources/handles.</para>

<para>Implementations have to be idempotent (i.e. it should be possible to call close several times without breakage) and ideally handlers should be able to reopen themselves on <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link> after they have been closed.</para>

<para>This is useful at the end of a request and will be called automatically when the object is destroyed if you extend <link linkend="_namespace_monolog">Monolog</link>\Handler\Handler.</para>

<para>If you are thinking of calling this method yourself, most likely you should be calling <link linkend="_interface_monolog_1_1_resettable_interface_1a4a20559544fdf4dcb457e258dc976cf8">ResettableInterface::reset</link> instead. Have a look.</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1aa69c8bf1f1dcf4e72552efff1fe3e87e">HandlerInterface</link>.</para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_browser_console_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">BrowserConsoleHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_buffer_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">BufferHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_fingers_crossed_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">FingersCrossedHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_group_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">GroupHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_process_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">ProcessHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_rollbar_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">RollbarHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_rotating_file_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">RotatingFileHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">SocketHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">StreamHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_syslog_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">SyslogHandler</link>, et <link linkend="_class_monolog_1_1_handler_1_1_syslog_udp_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">SyslogUdpHandler</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler_aa69c8bf1f1dcf4e72552efff1fe3e87e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57"/><section>
    <title>handleBatch()</title>
<indexterm><primary>handleBatch</primary><secondary>Handler</secondary></indexterm>
<indexterm><primary>Handler</primary><secondary>handleBatch</secondary></indexterm>
<para><computeroutput>handleBatch (array $records)</computeroutput></para>
<para>
<para>Handles a set of records at once.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$records</entry><entry>
<para>The records to handle (an array of record arrays)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Record[] $records</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1a944865926b0302ad2d802bea1eec3a57">HandlerInterface</link>.</para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_elastica_handler_1a944865926b0302ad2d802bea1eec3a57">ElasticaHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_elasticsearch_handler_1a944865926b0302ad2d802bea1eec3a57">ElasticsearchHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_filter_handler_1a944865926b0302ad2d802bea1eec3a57">FilterHandler</link>, et <link linkend="_class_monolog_1_1_handler_1_1_loggly_handler_1a944865926b0302ad2d802bea1eec3a57">LogglyHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler_a944865926b0302ad2d802bea1eec3a57_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_handler_a944865926b0302ad2d802bea1eec3a57_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__handler_8php">Handler.php</link></section>
</section>
