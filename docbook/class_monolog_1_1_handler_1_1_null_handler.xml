<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_null_handler" xml:lang="fr">
<title>Référence de la classe NullHandler</title>
<indexterm><primary>NullHandler</primary></indexterm>
Graphe d&apos;héritage de NullHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_null_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de NullHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_null_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_null_handler_1a482070a9644ebf12b4589e9f641f17dd">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_null_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_null_handler_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Blackhole</para>

<para>Any record it can handle will be thrown away. This can be used to put on top of an existing stack to override it temporarily.</para>

<para><formalpara><title>Auteur</title>

<para>Jordi Boggiano <link xlink:href="mailto:j.boggiano@seld.be">j.boggiano@seld.be</link></para>
</formalpara>
@phpstan-import-type Level from \Monolog\Logger @phpstan-import-type LevelName from \Monolog\Logger </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_null_handler_1a482070a9644ebf12b4589e9f641f17dd"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>NullHandler</secondary></indexterm>
<indexterm><primary>NullHandler</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct ( $level = <computeroutput><link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>The minimum logging level at which this handler will be triggered</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_null_handler_a482070a9644ebf12b4589e9f641f17dd_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_null_handler_1ad54b568c673b7b4fc724268a54313603"/><section>
    <title>handle()</title>
<indexterm><primary>handle</primary><secondary>NullHandler</secondary></indexterm>
<indexterm><primary>NullHandler</primary><secondary>handle</secondary></indexterm>
<para><computeroutput>handle (array $record)</computeroutput></para>
<para>
<para>Handles a record.</para>

<para>All records may be passed to this method, and the handler should discard those that it does not want to handle.</para>

<para>The return value of this function controls the bubbling process of the handler stack. Unless the bubbling is interrupted (by returning true), the <link linkend="_class_monolog_1_1_logger">Logger</link> class will keep on calling further handlers in the stack with a given log record.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$record</entry><entry>
<para>The record to handle </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool true means that this handler handled the record, and that bubbling is not permitted. false means the record was either not processed or that this handler allows bubbling.</para>
</formalpara>
@phpstan-param Record $record</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">HandlerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_null_handler_1abbfbbcd3430dea8422ecd3c725737758"/><section>
    <title>isHandling()</title>
<indexterm><primary>isHandling</primary><secondary>NullHandler</secondary></indexterm>
<indexterm><primary>NullHandler</primary><secondary>isHandling</secondary></indexterm>
<para><computeroutput>isHandling (array $record)</computeroutput></para>
<para>
<para>Checks whether the given record will be handled by this handler.</para>

<para>This is mostly done for performance reasons, to avoid calling processors for nothing.</para>

<para>Handlers should still check the record levels within <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link>, returning false in <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">isHandling()</link> is no guarantee that <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link> will not be called, and <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">isHandling()</link> might not be called for a given record.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$record</entry><entry>
<para>Partial log record containing only a level key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool</para>
</formalpara>
@phpstan-param array{level: Level} $record</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">HandlerInterface</link>.</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__null_handler_8php">NullHandler.php</link></section>
</section>
