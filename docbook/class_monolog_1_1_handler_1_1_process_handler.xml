<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_process_handler" xml:lang="fr">
<title>Référence de la classe ProcessHandler</title>
<indexterm><primary>ProcessHandler</primary></indexterm>
Graphe d&apos;héritage de ProcessHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_process_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de ProcessHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_process_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1a44fa0460db7a62363df4a94c0766dde3">__construct</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">command</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true, ?string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">cwd</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler">AbstractProcessingHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a6d40ebd1c8e1bb525417cb02ecaf4185">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a0b759f4af85ea8fe8967823a30d54f0c">setLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a23fac327059bf3fd0fe57555252d8cf2">getLevel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1ac98541e5bd5ed488d21e6c806d551506">setBubble</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a013f02d7a1343068d758c412223c2a95">getBubble</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface">ProcessableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface">FormattableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1a87804f2347dd817752ef1faa1f0dea05">setFormatter</link> (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">formatter</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1aad3a8e83c90770a1f71a75bb51e782d8">getFormatter</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1afa17604fd899fffdc1ee326afe177cb5">write</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1afa8c08f1ad0edc86cb6a25933b6c193f">selectErrorStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1a88b1f1db5c6f1fce6ee6073e6151e55f">readProcessErrors</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_process_handler_1a9be64e5d12a4ef7b1a1a57ab865e9715">writeProcessInput</link> (string $string)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_monolog_1_1_handler_1_1_process_handler_1a8f599af61e93342ba6964f7ac7d79b63">DESCRIPTOR_SPEC</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Attributs protégés hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abd32cc82c6a3f79491987de36ad580ca">$level</link> = <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a9145e898a529a9347d8af930c6c3c60c">$bubble</link> = true</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Stores to STDIN of any process, specified by a command.</para>

<para>Usage example: <literallayout>
$log = new Logger(&apos;myLogger&apos;);
$log-&gt;pushHandler(new ProcessHandler(&apos;/usr/bin/php /var/www/monolog/someScript.php&apos;));
</literallayout></para>

<para><formalpara><title>Auteur</title>

<para>Kolja Zuelsdorf <link xlink:href="mailto:koljaz@web.de">koljaz@web.de</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1a44fa0460db7a62363df4a94c0766dde3"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (string $command,  $level = <computeroutput><link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></computeroutput>
, bool $bubble = <computeroutput>true</computeroutput>
, ?string $cwd = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$command</entry><entry>
<para>Command for the process to start. Absolute paths are recommended, especially if you do not use the $cwd parameter. </para>
</entry>
                            </row>
                            <row>
<entry>string | null</entry><entry>$cwd</entry><entry>
<para>&quot;Current working directory&quot; (CWD) for the process to be executed in. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>
<para>
<para>Closes the handler.</para>

<para>Ends a log cycle and frees all resources used by the handler.</para>

<para>Closing a <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link> means flushing all buffers and freeing any open resources/handles.</para>

<para>Implementations have to be idempotent (i.e. it should be possible to call close several times without breakage) and ideally handlers should be able to reopen themselves on <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link> after they have been closed.</para>

<para>This is useful at the end of a request and will be called automatically when the object is destroyed if you extend <link linkend="_namespace_monolog">Monolog</link>\Handler\Handler.</para>

<para>If you are thinking of calling this method yourself, most likely you should be calling <link linkend="_interface_monolog_1_1_resettable_interface_1a4a20559544fdf4dcb457e258dc976cf8">ResettableInterface::reset</link> instead. Have a look.</para>
</para>
 </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">Handler</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1a88b1f1db5c6f1fce6ee6073e6151e55f"/><section>
    <title>readProcessErrors()</title>
<indexterm><primary>readProcessErrors</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>readProcessErrors</secondary></indexterm>
<para><computeroutput>readProcessErrors ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Reads the errors of the process, if there are any.</para>

<para>@codeCoverageIgnore <formalpara><title>Renvoie</title>

<para>string Empty string if there are no errors. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_process_handler_a88b1f1db5c6f1fce6ee6073e6151e55f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1afa8c08f1ad0edc86cb6a25933b6c193f"/><section>
    <title>selectErrorStream()</title>
<indexterm><primary>selectErrorStream</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>selectErrorStream</secondary></indexterm>
<para><computeroutput>selectErrorStream ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Selects the STDERR stream.</para>

<para><formalpara><title>Renvoie</title>

<para>int|bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1afa17604fd899fffdc1ee326afe177cb5"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>write</secondary></indexterm>
<para><computeroutput>write (array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Writes the record down to the log of the implementing handler</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                UnexpectedValueException </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1afa17604fd899fffdc1ee326afe177cb5">AbstractProcessingHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_process_handler_afa17604fd899fffdc1ee326afe177cb5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1a9be64e5d12a4ef7b1a1a57ab865e9715"/><section>
    <title>writeProcessInput()</title>
<indexterm><primary>writeProcessInput</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>writeProcessInput</secondary></indexterm>
<para><computeroutput>writeProcessInput (string $string)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Writes to the input stream of the opened process.</para>

<para>@codeCoverageIgnore </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_process_handler_a9be64e5d12a4ef7b1a1a57ab865e9715_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_process_handler_1a8f599af61e93342ba6964f7ac7d79b63"/><section>
    <title>DESCRIPTOR_SPEC</title>
<indexterm><primary>DESCRIPTOR_SPEC</primary><secondary>ProcessHandler</secondary></indexterm>
<indexterm><primary>ProcessHandler</primary><secondary>DESCRIPTOR_SPEC</secondary></indexterm>
<para><computeroutput>const DESCRIPTOR_SPEC<computeroutput>[protected]</computeroutput></computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">=&#32;[
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;=&gt;&#32;[<emphasis role="stringliteral">&apos;pipe&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;r&apos;</emphasis>],&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;1&#32;=&gt;&#32;[<emphasis role="stringliteral">&apos;pipe&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;w&apos;</emphasis>],&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2&#32;=&gt;&#32;[<emphasis role="stringliteral">&apos;pipe&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;w&apos;</emphasis>],&#32;&#32;
&#32;&#32;&#32;&#32;]
</programlisting></section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__process_handler_8php">ProcessHandler.php</link></section>
</section>
