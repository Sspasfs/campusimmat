<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_sampling_handler" xml:lang="fr">
<title>Référence de la classe SamplingHandler</title>
<indexterm><primary>SamplingHandler</primary></indexterm>
Graphe d&apos;héritage de SamplingHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de SamplingHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1a8f9af7f099d82a13bccb303a2f3ff45f">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handler</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">factor</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1a2b88a8966dc3917966810f7e1e93c5c5">getHandler</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1a87804f2347dd817752ef1faa1f0dea05">setFormatter</link> (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">formatter</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1aad3a8e83c90770a1f71a75bb51e782d8">getFormatter</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a6d40ebd1c8e1bb525417cb02ecaf4185">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a0b759f4af85ea8fe8967823a30d54f0c">setLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a23fac327059bf3fd0fe57555252d8cf2">getLevel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1ac98541e5bd5ed488d21e6c806d551506">setBubble</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a013f02d7a1343068d758c412223c2a95">getBubble</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface">ProcessableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1a9285a7f684c72e9bb78fdef1bcbe3fd0">$handler</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_sampling_handler_1ae9c5503d70ef72de20cecd3ca827b2ec">$factor</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Attributs protégés hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abd32cc82c6a3f79491987de36ad580ca">$level</link> = <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a9145e898a529a9347d8af930c6c3c60c">$bubble</link> = true</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Sampling handler</para>

<para>A sampled event stream can be useful for logging high frequency events in a production environment where you only need an idea of what is happening and are not concerned with capturing every occurrence. Since the decision to handle or not handle a particular event is determined randomly, the resulting sampled log is not guaranteed to contain 1/N of the events that occurred in the application, but based on the Law of large numbers, it will tend to be close to this ratio with a large number of attempts.</para>

<para><formalpara><title>Auteur</title>

<para>Bryan Davis <link xlink:href="mailto:bd808@wikimedia.org">bd808@wikimedia.org</link> </para>

<para>Kunal Mehta <link xlink:href="mailto:legoktm@gmail.com">legoktm@gmail.com</link></para>
</formalpara>
@phpstan-import-type Record from \Monolog\Logger @phpstan-import-type Level from \Monolog\Logger </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1a8f9af7f099d82a13bccb303a2f3ff45f"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct ( $handler, int $factor)</computeroutput></para>
<para>@psalm-param HandlerInterface|callable(Record|array{level: Level}|null, HandlerInterface): HandlerInterface $handler</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>callable | HandlerInterface</entry><entry>$handler</entry><entry>
<para>Handler or factory callable($record|null, $samplingHandler). </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$factor</entry><entry>
<para>Sample factor (e.g. 10 means every ~10th record is sampled) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1aad3a8e83c90770a1f71a75bb51e782d8"/><section>
    <title>getFormatter()</title>
<indexterm><primary>getFormatter</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>getFormatter</secondary></indexterm>
<para><computeroutput>getFormatter ( )</computeroutput></para>
<para>
<para>Gets the formatter.</para>

<para><formalpara><title>Renvoie</title>

<para>FormatterInterface</para>
</formalpara>
</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1aad3a8e83c90770a1f71a75bb51e782d8">FormattableHandlerInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler_aad3a8e83c90770a1f71a75bb51e782d8_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1a2b88a8966dc3917966810f7e1e93c5c5"/><section>
    <title>getHandler()</title>
<indexterm><primary>getHandler</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>getHandler</secondary></indexterm>
<para><computeroutput>getHandler (array $record = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>Return the nested handler</para>

<para>If the handler was provided as a factory callable, this will trigger the handler&apos;s instantiation.</para>

<para>@phpstan-param Record|array{level: Level}|null $record</para>

<para><formalpara><title>Renvoie</title>

<para>HandlerInterface </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler_a2b88a8966dc3917966810f7e1e93c5c5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1abbfbbcd3430dea8422ecd3c725737758"/><section>
    <title>isHandling()</title>
<indexterm><primary>isHandling</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>isHandling</secondary></indexterm>
<para><computeroutput>isHandling (array $record)</computeroutput></para>
<para>
<para>
<para>Checks whether the given record will be handled by this handler.</para>

<para>This is mostly done for performance reasons, to avoid calling processors for nothing.</para>

<para>Handlers should still check the record levels within <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link>, returning false in <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">isHandling()</link> is no guarantee that <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link> will not be called, and <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1abbfbbcd3430dea8422ecd3c725737758">isHandling()</link> might not be called for a given record.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$record</entry><entry>
<para>Partial log record containing only a level key</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool</para>
</formalpara>
@phpstan-param array{level: Level} $record</para>
</para>
 </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abbfbbcd3430dea8422ecd3c725737758">AbstractHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler_abbfbbcd3430dea8422ecd3c725737758_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1a87804f2347dd817752ef1faa1f0dea05"/><section>
    <title>setFormatter()</title>
<indexterm><primary>setFormatter</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>setFormatter</secondary></indexterm>
<para><computeroutput>setFormatter (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $formatter)</computeroutput></para>
<para>
<para>Sets the formatter.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>FormatterInterface</entry><entry>$formatter</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link> self</para>
</formalpara>
</para>
 </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1a87804f2347dd817752ef1faa1f0dea05">FormattableHandlerInterface</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_sampling_handler_a87804f2347dd817752ef1faa1f0dea05_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1ae9c5503d70ef72de20cecd3ca827b2ec"/><section>
    <title>$factor</title>
<indexterm><primary>$factor</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>$factor</secondary></indexterm>
<para><computeroutput>int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">factor</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_sampling_handler_1a9285a7f684c72e9bb78fdef1bcbe3fd0"/><section>
    <title>$handler</title>
<indexterm><primary>$handler</primary><secondary>SamplingHandler</secondary></indexterm>
<indexterm><primary>SamplingHandler</primary><secondary>$handler</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handler</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__sampling_handler_8php">SamplingHandler.php</link></section>
</section>
