<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_socket_handler" xml:lang="fr">
<title>Référence de la classe SocketHandler</title>
<indexterm><primary>SocketHandler</primary></indexterm>
Graphe d&apos;héritage de SocketHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de SocketHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a6d4681e2b2c56a079aa00423bc1c19bf">__construct</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">connectionString</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">persistent</link>=false, float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">timeout</link>=0.0, float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">writingTimeout</link>=10.0, ?float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">connectionTimeout</link>=null, ?int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">chunkSize</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a643ebddba786a3abc5c87a86aa810dfe">closeSocket</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a633780c655536e47c039bbb4e2cf7803">setPersistent</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">persistent</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a7832fb45dd28d2e0d0032088c35bc935">setConnectionTimeout</link> (float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">seconds</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1aa63894f336cdb49322706850083454b5">setTimeout</link> (float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">seconds</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1ae727454940522dd7f834daa0b3d569e2">setWritingTimeout</link> (float $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">seconds</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a8ee8db95efc3693282fb1cca4726be1a">setChunkSize</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bytes</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1af56ef2800042aa1b74489f4653a5a2e7">getConnectionString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a4dd0c77d3fdc85d2a22154a73132c281">isPersistent</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a5115029b76d31675aca1d57ad64fb97d">getConnectionTimeout</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1abac5019c5daf3a27d739aa3a249fdb31">getTimeout</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a23c663e657f77d9e9aef6aaf9e6cec75">getWritingTimeout</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a26f9ac1be808f90bd9f267dce510bacc">getChunkSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1af160f7fbbf281d018ae3162521b8267d">isConnected</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler">AbstractProcessingHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a6d40ebd1c8e1bb525417cb02ecaf4185">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a0b759f4af85ea8fe8967823a30d54f0c">setLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a23fac327059bf3fd0fe57555252d8cf2">getLevel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1ac98541e5bd5ed488d21e6c806d551506">setBubble</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a013f02d7a1343068d758c412223c2a95">getBubble</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface">ProcessableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface">FormattableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1a87804f2347dd817752ef1faa1f0dea05">setFormatter</link> (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">formatter</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1aad3a8e83c90770a1f71a75bb51e782d8">getFormatter</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1afa17604fd899fffdc1ee326afe177cb5">write</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a182602fa0f1e2b34f70560889e2d0e15">pfsockopen</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a4412f90a431cf197ffcfa65222435b24">fsockopen</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a98b86f0a536c1d29154b1ca39a3c1a3d">streamSetTimeout</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a95f4dc807eff9c0a13b77ec7ee750502">streamSetChunkSize</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1aa50e558c4437da601bb5c3c76dc6c01e">fwrite</link> (string $data)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a35558df5380ae64115534888170c9338">streamGetMetadata</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1ab9ad130a7a5c9231037475c701a1e0fb">generateDataStream</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_socket_handler_1a8c5a689e9be7d35d0d01d0194637a7d2">getResource</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Membres hérités additionnels    </title>
Attributs protégés hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abd32cc82c6a3f79491987de36ad580ca">$level</link> = <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a9145e898a529a9347d8af930c6c3c60c">$bubble</link> = true</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Stores to any socket - uses fsockopen() or pfsockopen().</para>

<para><formalpara><title>Auteur</title>

<para>Pablo de Leon Belloc <link xlink:href="mailto:pablolb@gmail.com">pablolb@gmail.com</link> </para>
</formalpara>
<formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/function.fsockopen.php">http://php.net/manual/en/function.fsockopen.php</link></para>
</formalpara>
@phpstan-import-type Record from \Monolog\Logger @phpstan-import-type FormattedRecord from AbstractProcessingHandler </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a6d4681e2b2c56a079aa00423bc1c19bf"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (string $connectionString,  $level = <computeroutput><link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></computeroutput>
, bool $bubble = <computeroutput>true</computeroutput>
, bool $persistent = <computeroutput>false</computeroutput>
, float $timeout = <computeroutput>0.0</computeroutput>
, float $writingTimeout = <computeroutput>10.0</computeroutput>
, ?float $connectionTimeout = <computeroutput>null</computeroutput>
, ?int $chunkSize = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$connectionString</entry><entry>
<para>Socket connection string </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$persistent</entry><entry>
<para>Flag to enable/disable persistent connections </para>
</entry>
                            </row>
                            <row>
<entry>float</entry><entry>$timeout</entry><entry>
<para>Socket timeout to wait until the request is being aborted </para>
</entry>
                            </row>
                            <row>
<entry>float</entry><entry>$writingTimeout</entry><entry>
<para>Socket timeout to wait until the request should&apos;ve been sent/written </para>
</entry>
                            </row>
                            <row>
<entry>float | null</entry><entry>$connectionTimeout</entry><entry>
<para>Socket connect timeout to wait until the connection should&apos;ve been established </para>
</entry>
                            </row>
                            <row>
<entry>int | null</entry><entry>$chunkSize</entry><entry>
<para>Sets the chunk size. Only has effect during connection in the writing cycle</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If an invalid timeout value (less than 0) is passed. </para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_flowdock_handler_1a274fd2b4e7472667fb705ba3135d0a7e">FlowdockHandler</link>, et <link linkend="_class_monolog_1_1_handler_1_1_fleep_hook_handler_1a37b56484bc7abb716a4d790a4ba9ab61">FleepHookHandler</link>.</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>We will not close a PersistentSocket instance so it can be reused in other requests. </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">Handler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_aa69c8bf1f1dcf4e72552efff1fe3e87e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a643ebddba786a3abc5c87a86aa810dfe"/><section>
    <title>closeSocket()</title>
<indexterm><primary>closeSocket</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>closeSocket</secondary></indexterm>
<para><computeroutput>closeSocket ( )</computeroutput></para>
<para>Close socket, if open </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a643ebddba786a3abc5c87a86aa810dfe_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a4412f90a431cf197ffcfa65222435b24"/><section>
    <title>fsockopen()</title>
<indexterm><primary>fsockopen</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>fsockopen</secondary></indexterm>
<para><computeroutput>fsockopen ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Renvoie</title>

<para>resource|false </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a4412f90a431cf197ffcfa65222435b24_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a4412f90a431cf197ffcfa65222435b24_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1aa50e558c4437da601bb5c3c76dc6c01e"/><section>
    <title>fwrite()</title>
<indexterm><primary>fwrite</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>fwrite</secondary></indexterm>
<para><computeroutput>fwrite (string $data)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Renvoie</title>

<para>int|bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1ab9ad130a7a5c9231037475c701a1e0fb"/><section>
    <title>generateDataStream()</title>
<indexterm><primary>generateDataStream</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>generateDataStream</secondary></indexterm>
<para><computeroutput>generateDataStream (array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>@phpstan-param FormattedRecord $record </para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_fleep_hook_handler_1ab9ad130a7a5c9231037475c701a1e0fb">FleepHookHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_flowdock_handler_1ab9ad130a7a5c9231037475c701a1e0fb">FlowdockHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_insight_ops_handler_1ab9ad130a7a5c9231037475c701a1e0fb">InsightOpsHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_log_entries_handler_1ab9ad130a7a5c9231037475c701a1e0fb">LogEntriesHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_logmatic_handler_1ab9ad130a7a5c9231037475c701a1e0fb">LogmaticHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_pushover_handler_1ab9ad130a7a5c9231037475c701a1e0fb">PushoverHandler</link>, et <link linkend="_class_monolog_1_1_handler_1_1_slack_handler_1ab9ad130a7a5c9231037475c701a1e0fb">SlackHandler</link>.</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_ab9ad130a7a5c9231037475c701a1e0fb_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a26f9ac1be808f90bd9f267dce510bacc"/><section>
    <title>getChunkSize()</title>
<indexterm><primary>getChunkSize</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getChunkSize</secondary></indexterm>
<para><computeroutput>getChunkSize ( )</computeroutput></para>
<para>Get current chunk size </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1af56ef2800042aa1b74489f4653a5a2e7"/><section>
    <title>getConnectionString()</title>
<indexterm><primary>getConnectionString</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getConnectionString</secondary></indexterm>
<para><computeroutput>getConnectionString ( )</computeroutput></para>
<para>Get current connection string </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a5115029b76d31675aca1d57ad64fb97d"/><section>
    <title>getConnectionTimeout()</title>
<indexterm><primary>getConnectionTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getConnectionTimeout</secondary></indexterm>
<para><computeroutput>getConnectionTimeout ( )</computeroutput></para>
<para>Get current connection timeout setting </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a8c5a689e9be7d35d0d01d0194637a7d2"/><section>
    <title>getResource()</title>
<indexterm><primary>getResource</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getResource</secondary></indexterm>
<para><computeroutput>getResource ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>resource|null </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a8c5a689e9be7d35d0d01d0194637a7d2_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1abac5019c5daf3a27d739aa3a249fdb31"/><section>
    <title>getTimeout()</title>
<indexterm><primary>getTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getTimeout</secondary></indexterm>
<para><computeroutput>getTimeout ( )</computeroutput></para>
<para>Get current in-transfer timeout </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a23c663e657f77d9e9aef6aaf9e6cec75"/><section>
    <title>getWritingTimeout()</title>
<indexterm><primary>getWritingTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>getWritingTimeout</secondary></indexterm>
<para><computeroutput>getWritingTimeout ( )</computeroutput></para>
<para>Get current local writing timeout</para>

<para><formalpara><title>Renvoie</title>

<para>float </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1af160f7fbbf281d018ae3162521b8267d"/><section>
    <title>isConnected()</title>
<indexterm><primary>isConnected</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>isConnected</secondary></indexterm>
<para><computeroutput>isConnected ( )</computeroutput></para>
<para>Check to see if the socket is currently available.</para>

<para>UDP might appear to be connected but might fail when writing. See <link xlink:href="http://php.net/fsockopen">http://php.net/fsockopen</link> for details. </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a4dd0c77d3fdc85d2a22154a73132c281"/><section>
    <title>isPersistent()</title>
<indexterm><primary>isPersistent</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>isPersistent</secondary></indexterm>
<para><computeroutput>isPersistent ( )</computeroutput></para>
<para>Get persistent setting </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a4dd0c77d3fdc85d2a22154a73132c281_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a182602fa0f1e2b34f70560889e2d0e15"/><section>
    <title>pfsockopen()</title>
<indexterm><primary>pfsockopen</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>pfsockopen</secondary></indexterm>
<para><computeroutput>pfsockopen ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Renvoie</title>

<para>resource|false </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a182602fa0f1e2b34f70560889e2d0e15_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_a182602fa0f1e2b34f70560889e2d0e15_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a8ee8db95efc3693282fb1cca4726be1a"/><section>
    <title>setChunkSize()</title>
<indexterm><primary>setChunkSize</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>setChunkSize</secondary></indexterm>
<para><computeroutput>setChunkSize (int $bytes)</computeroutput></para>
<para>Set chunk size. Only has effect during connection in the writing cycle. </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a7832fb45dd28d2e0d0032088c35bc935"/><section>
    <title>setConnectionTimeout()</title>
<indexterm><primary>setConnectionTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>setConnectionTimeout</secondary></indexterm>
<para><computeroutput>setConnectionTimeout (float $seconds)</computeroutput></para>
<para>Set connection timeout. Only has effect before we connect.</para>

<para><formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/function.fsockopen.php">http://php.net/manual/en/function.fsockopen.php</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a633780c655536e47c039bbb4e2cf7803"/><section>
    <title>setPersistent()</title>
<indexterm><primary>setPersistent</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>setPersistent</secondary></indexterm>
<para><computeroutput>setPersistent (bool $persistent)</computeroutput></para>
<para>Set socket connection to be persistent. It only has effect before the connection is initiated. </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1aa63894f336cdb49322706850083454b5"/><section>
    <title>setTimeout()</title>
<indexterm><primary>setTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>setTimeout</secondary></indexterm>
<para><computeroutput>setTimeout (float $seconds)</computeroutput></para>
<para>Set write timeout. Only has effect before we connect.</para>

<para><formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/function.stream-set-timeout.php">http://php.net/manual/en/function.stream-set-timeout.php</link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1ae727454940522dd7f834daa0b3d569e2"/><section>
    <title>setWritingTimeout()</title>
<indexterm><primary>setWritingTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>setWritingTimeout</secondary></indexterm>
<para><computeroutput>setWritingTimeout (float $seconds)</computeroutput></para>
<para>Set writing timeout. Only has effect during connection in the writing cycle.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>float</entry><entry>$seconds</entry><entry>
<para>0 for no timeout </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a35558df5380ae64115534888170c9338"/><section>
    <title>streamGetMetadata()</title>
<indexterm><primary>streamGetMetadata</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>streamGetMetadata</secondary></indexterm>
<para><computeroutput>streamGetMetadata ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Renvoie</title>

<para>mixed[]|bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a95f4dc807eff9c0a13b77ec7ee750502"/><section>
    <title>streamSetChunkSize()</title>
<indexterm><primary>streamSetChunkSize</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>streamSetChunkSize</secondary></indexterm>
<para><computeroutput>streamSetChunkSize ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/function.stream-set-chunk-size.php">http://php.net/manual/en/function.stream-set-chunk-size.php</link></para>
</formalpara>
<formalpara><title>Renvoie</title>

<para>int|bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1a98b86f0a536c1d29154b1ca39a3c1a3d"/><section>
    <title>streamSetTimeout()</title>
<indexterm><primary>streamSetTimeout</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>streamSetTimeout</secondary></indexterm>
<para><computeroutput>streamSetTimeout ( )<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Wrapper to allow mocking</para>

<para><formalpara><title>Voir également</title>

<para><link xlink:href="http://php.net/manual/en/function.stream-set-timeout.php">http://php.net/manual/en/function.stream-set-timeout.php</link></para>
</formalpara>
<formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_socket_handler_1afa17604fd899fffdc1ee326afe177cb5"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>SocketHandler</secondary></indexterm>
<indexterm><primary>SocketHandler</primary><secondary>write</secondary></indexterm>
<para><computeroutput>write (array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Connect (if necessary) and write to the socket</para>

<para>
<para>Writes the record down to the log of the implementing handler</para>

<para>@phpstan-param FormattedRecord $record</para>
</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                UnexpectedValueException 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1afa17604fd899fffdc1ee326afe177cb5">AbstractProcessingHandler</link>.</para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_fleep_hook_handler_1afa17604fd899fffdc1ee326afe177cb5">FleepHookHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_flowdock_handler_1afa17604fd899fffdc1ee326afe177cb5">FlowdockHandler</link>, <link linkend="_class_monolog_1_1_handler_1_1_pushover_handler_1afa17604fd899fffdc1ee326afe177cb5">PushoverHandler</link>, et <link linkend="_class_monolog_1_1_handler_1_1_slack_handler_1afa17604fd899fffdc1ee326afe177cb5">SlackHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_socket_handler_afa17604fd899fffdc1ee326afe177cb5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__socket_handler_8php">SocketHandler.php</link></section>
</section>
