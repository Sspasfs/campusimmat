<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_stream_handler" xml:lang="fr">
<title>Référence de la classe StreamHandler</title>
<indexterm><primary>StreamHandler</primary></indexterm>
Graphe d&apos;héritage de StreamHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_stream_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de StreamHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_stream_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1ae996ad71e3e7982a70443c5b7d1f4175">__construct</link> ($stream, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true, ?int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">filePermission</link>=null, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">useLocking</link>=false)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1a3e5834ff3daeecd091712270886a16fb">getStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1accd14bda49a1044b4d8dd93f020f11ee">getUrl</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1af45bd2ec98e163f4d95637cfa9ed39fc">getStreamChunkSize</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler">AbstractProcessingHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a6d40ebd1c8e1bb525417cb02ecaf4185">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a0b759f4af85ea8fe8967823a30d54f0c">setLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a23fac327059bf3fd0fe57555252d8cf2">getLevel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1ac98541e5bd5ed488d21e6c806d551506">setBubble</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a013f02d7a1343068d758c412223c2a95">getBubble</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface">ProcessableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface">FormattableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1a87804f2347dd817752ef1faa1f0dea05">setFormatter</link> (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">formatter</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1aad3a8e83c90770a1f71a75bb51e782d8">getFormatter</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1afa17604fd899fffdc1ee326afe177cb5">write</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1a81b02000c3d348489b32fa091316c103">streamWrite</link> ($stream, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1a6f6988200fca051d34cdafa1f09aca87">MAX_CHUNK_SIZE</link> = 2147483647</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1a0ff55380fb3b64bee19cfb8cc966d3ff">DEFAULT_CHUNK_SIZE</link> = 10 * 1024 * 1024</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1ab812ea9f06eeadf6d309e368195d32ac">$streamChunkSize</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1aa658946a5d6cb700e35df1fc7854e7b3">$stream</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1acf215f34a917d014776ce684a9ee8909">$url</link> = null</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1afefd2f7430b3dbc9ce0ba8f37ea2a224">$filePermission</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_stream_handler_1abedca205ed4f8dbc0e2a00307cc1df73">$useLocking</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Attributs protégés hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abd32cc82c6a3f79491987de36ad580ca">$level</link> = <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a9145e898a529a9347d8af930c6c3c60c">$bubble</link> = true</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Stores to any stream resource</para>

<para>Can be used to store into php://stderr, remote and local files, etc.</para>

<para><formalpara><title>Auteur</title>

<para>Jordi Boggiano <link xlink:href="mailto:j.boggiano@seld.be">j.boggiano@seld.be</link></para>
</formalpara>
@phpstan-import-type FormattedRecord from AbstractProcessingHandler </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1ae996ad71e3e7982a70443c5b7d1f4175"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct ( $stream,  $level = <computeroutput><link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></computeroutput>
, bool $bubble = <computeroutput>true</computeroutput>
, ?int $filePermission = <computeroutput>null</computeroutput>
, bool $useLocking = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>resource | string</entry><entry>$stream</entry><entry>
<para>If a missing path can&apos;t be created, an UnexpectedValueException will be thrown on first write </para>
</entry>
                            </row>
                            <row>
<entry>int | null</entry><entry>$filePermission</entry><entry>
<para>Optional file permissions (default (0644) are only for owner read/write) </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$useLocking</entry><entry>
<para>Try to lock log file before doing any writes</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException If stream is not a resource or string </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_stream_handler_ae996ad71e3e7982a70443c5b7d1f4175_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>
<para>
<para>Closes the handler.</para>

<para>Ends a log cycle and frees all resources used by the handler.</para>

<para>Closing a <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link> means flushing all buffers and freeing any open resources/handles.</para>

<para>Implementations have to be idempotent (i.e. it should be possible to call close several times without breakage) and ideally handlers should be able to reopen themselves on <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle()</link> after they have been closed.</para>

<para>This is useful at the end of a request and will be called automatically when the object is destroyed if you extend <link linkend="_namespace_monolog">Monolog</link>\Handler\Handler.</para>

<para>If you are thinking of calling this method yourself, most likely you should be calling <link linkend="_interface_monolog_1_1_resettable_interface_1a4a20559544fdf4dcb457e258dc976cf8">ResettableInterface::reset</link> instead. Have a look.</para>
</para>
 </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">Handler</link>.</para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_rotating_file_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">RotatingFileHandler</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1a3e5834ff3daeecd091712270886a16fb"/><section>
    <title>getStream()</title>
<indexterm><primary>getStream</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>getStream</secondary></indexterm>
<para><computeroutput>getStream ( )</computeroutput></para>
<para>Return the currently active stream if it is open</para>

<para><formalpara><title>Renvoie</title>

<para>resource|null </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1af45bd2ec98e163f4d95637cfa9ed39fc"/><section>
    <title>getStreamChunkSize()</title>
<indexterm><primary>getStreamChunkSize</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>getStreamChunkSize</secondary></indexterm>
<para><computeroutput>getStreamChunkSize ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>int </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1accd14bda49a1044b4d8dd93f020f11ee"/><section>
    <title>getUrl()</title>
<indexterm><primary>getUrl</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>getUrl</secondary></indexterm>
<para><computeroutput>getUrl ( )</computeroutput></para>
<para>Return the stream URL if it was configured with a URL and not an active resource</para>

<para><formalpara><title>Renvoie</title>

<para>string|null </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1a81b02000c3d348489b32fa091316c103"/><section>
    <title>streamWrite()</title>
<indexterm><primary>streamWrite</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>streamWrite</secondary></indexterm>
<para><computeroutput>streamWrite ( $stream, array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Write to stream 
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>resource</entry><entry>$stream</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$record</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param FormattedRecord $record </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_stream_handler_a81b02000c3d348489b32fa091316c103_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1afa17604fd899fffdc1ee326afe177cb5"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>write</secondary></indexterm>
<para><computeroutput>write (array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>
<para>Writes the record down to the log of the implementing handler</para>

<para>@phpstan-param FormattedRecord $record</para>
 </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1afa17604fd899fffdc1ee326afe177cb5">AbstractProcessingHandler</link>.</para>
<para>
Réimplémentée dans <link linkend="_class_monolog_1_1_handler_1_1_rotating_file_handler_1afa17604fd899fffdc1ee326afe177cb5">RotatingFileHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_stream_handler_afa17604fd899fffdc1ee326afe177cb5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1afefd2f7430b3dbc9ce0ba8f37ea2a224"/><section>
    <title>$filePermission</title>
<indexterm><primary>$filePermission</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>$filePermission</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">filePermission</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1aa658946a5d6cb700e35df1fc7854e7b3"/><section>
    <title>$stream</title>
<indexterm><primary>$stream</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>$stream</secondary></indexterm>
<para><computeroutput>$stream<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1ab812ea9f06eeadf6d309e368195d32ac"/><section>
    <title>$streamChunkSize</title>
<indexterm><primary>$streamChunkSize</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>$streamChunkSize</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">streamChunkSize</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1acf215f34a917d014776ce684a9ee8909"/><section>
    <title>$url</title>
<indexterm><primary>$url</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>$url</secondary></indexterm>
<para><computeroutput>$url = null<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1abedca205ed4f8dbc0e2a00307cc1df73"/><section>
    <title>$useLocking</title>
<indexterm><primary>$useLocking</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>$useLocking</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">useLocking</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1a0ff55380fb3b64bee19cfb8cc966d3ff"/><section>
    <title>DEFAULT_CHUNK_SIZE</title>
<indexterm><primary>DEFAULT_CHUNK_SIZE</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>DEFAULT_CHUNK_SIZE</secondary></indexterm>
<para><computeroutput>const DEFAULT_CHUNK_SIZE = 10 * 1024 * 1024<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>@const int 10MB </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_stream_handler_1a6f6988200fca051d34cdafa1f09aca87"/><section>
    <title>MAX_CHUNK_SIZE</title>
<indexterm><primary>MAX_CHUNK_SIZE</primary><secondary>StreamHandler</secondary></indexterm>
<indexterm><primary>StreamHandler</primary><secondary>MAX_CHUNK_SIZE</secondary></indexterm>
<para><computeroutput>const MAX_CHUNK_SIZE = 2147483647<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>@const int </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="_monolog_2monolog_2src_2_monolog_2_handler_2_stream_handler_8php">StreamHandler.php</link></section>
</section>
