<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_handler_1_1_test_handler" xml:lang="fr">
<title>Référence de la classe TestHandler</title>
<indexterm><primary>TestHandler</primary></indexterm>
Graphe d&apos;héritage de TestHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de TestHandler:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1ac3cf5a88085580b7a687ee3ed9f3b605">getRecords</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1aa821bec12eaa7e0f649397c9675ff505">clear</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a4be59dbe9d2aa721275957148e3753a0">setSkipReset</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">skipReset</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a29fe0a6ab04913b2e4a79dacd625dcc9">hasRecords</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1acdb037f1c737db11f7070d40e253f268">hasRecord</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a8e5bc7c7388b2a4fd51b60ef81d03f4c">hasRecordThatContains</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a3288149e367add31f4cc79305bec5bac">hasRecordThatMatches</link> (string $regex, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a582ce27b33fde0ee744fe633a6ed705b">hasRecordThatPasses</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">predicate</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a9f1179240d068c94a040021326032bed">__call</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">method</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">args</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a6d40ebd1c8e1bb525417cb02ecaf4185">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>=<link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>=true)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abbfbbcd3430dea8422ecd3c725737758">isHandling</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a0b759f4af85ea8fe8967823a30d54f0c">setLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a23fac327059bf3fd0fe57555252d8cf2">getLevel</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1ac98541e5bd5ed488d21e6c806d551506">setBubble</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">bubble</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a013f02d7a1343068d758c412223c2a95">getBubble</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_class_monolog_1_1_handler_1_1_handler">Handler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a944865926b0302ad2d802bea1eec3a57">handleBatch</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1a421831a265621325e1fdd19aace0c758">__destruct</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_handler_1aaf11785905da71774e052912d784e3b4">__sleep</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_handler_interface_1ad54b568c673b7b4fc724268a54313603">handle</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface">ProcessableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_processable_handler_interface_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface">FormattableHandlerInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1a87804f2347dd817752ef1faa1f0dea05">setFormatter</link> (<link linkend="_interface_monolog_1_1_formatter_1_1_formatter_interface">FormatterInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">formatter</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_monolog_1_1_handler_1_1_formattable_handler_interface_1aad3a8e83c90770a1f71a75bb51e782d8">getFormatter</link> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1afa17604fd899fffdc1ee326afe177cb5">write</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a6cb1988642ff4f03fdfb3658cdd14fa0">$records</link> = []</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_test_handler_1a69dd595592ec395c48d00c72e2ffa5f2">$recordsByLevel</link> = []</para>
</listitem>
        </itemizedlist>
</simplesect>
Attributs protégés hérités de <link linkend="_class_monolog_1_1_handler_1_1_abstract_handler">AbstractHandler</link>        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1abd32cc82c6a3f79491987de36ad580ca">$level</link> = <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">Logger::DEBUG</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_handler_1_1_abstract_handler_1a9145e898a529a9347d8af930c6c3c60c">$bubble</link> = true</para>
</listitem>
        </itemizedlist>
<section>
<title>Description détaillée</title>

<para>Used for testing purposes.</para>

<para>It records all records and gives you access to them for verification.</para>

<para><formalpara><title>Auteur</title>

<para>Jordi Boggiano <link xlink:href="mailto:j.boggiano@seld.be">j.boggiano@seld.be</link></para>
</formalpara>
@method bool hasEmergency($record) @method bool hasAlert($record) @method bool hasCritical($record) @method bool hasError($record) @method bool hasWarning($record) @method bool hasNotice($record) @method bool hasInfo($record) @method bool hasDebug($record)</para>

<para>@method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasEmergencyRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasAlertRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasCriticalRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasErrorRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasWarningRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasNoticeRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasInfoRecords()</link> @method bool <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">hasDebugRecords()</link></para>

<para>@method bool hasEmergencyThatContains($message) @method bool hasAlertThatContains($message) @method bool hasCriticalThatContains($message) @method bool hasErrorThatContains($message) @method bool hasWarningThatContains($message) @method bool hasNoticeThatContains($message) @method bool hasInfoThatContains($message) @method bool hasDebugThatContains($message)</para>

<para>@method bool hasEmergencyThatMatches($message) @method bool hasAlertThatMatches($message) @method bool hasCriticalThatMatches($message) @method bool hasErrorThatMatches($message) @method bool hasWarningThatMatches($message) @method bool hasNoticeThatMatches($message) @method bool hasInfoThatMatches($message) @method bool hasDebugThatMatches($message)</para>

<para>@method bool hasEmergencyThatPasses($message) @method bool hasAlertThatPasses($message) @method bool hasCriticalThatPasses($message) @method bool hasErrorThatPasses($message) @method bool hasWarningThatPasses($message) @method bool hasNoticeThatPasses($message) @method bool hasInfoThatPasses($message) @method bool hasDebugThatPasses($message)</para>

<para>@phpstan-import-type Record from \Monolog\Logger @phpstan-import-type Level from \Monolog\Logger @phpstan-import-type LevelName from \Monolog\Logger </para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a9f1179240d068c94a040021326032bed"/><section>
    <title>__call()</title>
<indexterm><primary>__call</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>__call</secondary></indexterm>
<para><computeroutput>__call ( $method,  $args)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$method</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$args</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1aa821bec12eaa7e0f649397c9675ff505"/><section>
    <title>clear()</title>
<indexterm><primary>clear</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>clear</secondary></indexterm>
<para><computeroutput>clear ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>void </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_aa821bec12eaa7e0f649397c9675ff505_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1ac3cf5a88085580b7a687ee3ed9f3b605"/><section>
    <title>getRecords()</title>
<indexterm><primary>getRecords</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>getRecords</secondary></indexterm>
<para><computeroutput>getRecords ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>array</para>
</formalpara>
@phpstan-return Record[] </para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1acdb037f1c737db11f7070d40e253f268"/><section>
    <title>hasRecord()</title>
<indexterm><primary>hasRecord</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>hasRecord</secondary></indexterm>
<para><computeroutput>hasRecord ( $record,  $level)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | array</entry><entry>$record</entry><entry>
<para>Either a message string or an array containing message and optionally context keys that will be checked against all records </para>
</entry>
                            </row>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Logging level value or name</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param array{message: string, context?: mixed[]}|string $record @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_acdb037f1c737db11f7070d40e253f268_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a29fe0a6ab04913b2e4a79dacd625dcc9"/><section>
    <title>hasRecords()</title>
<indexterm><primary>hasRecords</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>hasRecords</secondary></indexterm>
<para><computeroutput>hasRecords ( $level)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Logging level value or name</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a29fe0a6ab04913b2e4a79dacd625dcc9_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a8e5bc7c7388b2a4fd51b60ef81d03f4c"/><section>
    <title>hasRecordThatContains()</title>
<indexterm><primary>hasRecordThatContains</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>hasRecordThatContains</secondary></indexterm>
<para><computeroutput>hasRecordThatContains (string $message,  $level)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Logging level value or name</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a8e5bc7c7388b2a4fd51b60ef81d03f4c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a3288149e367add31f4cc79305bec5bac"/><section>
    <title>hasRecordThatMatches()</title>
<indexterm><primary>hasRecordThatMatches</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>hasRecordThatMatches</secondary></indexterm>
<para><computeroutput>hasRecordThatMatches (string $regex,  $level)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Logging level value or name</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a3288149e367add31f4cc79305bec5bac_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a582ce27b33fde0ee744fe633a6ed705b"/><section>
    <title>hasRecordThatPasses()</title>
<indexterm><primary>hasRecordThatPasses</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>hasRecordThatPasses</secondary></indexterm>
<para><computeroutput>hasRecordThatPasses (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $predicate,  $level)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Logging level value or name </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool</para>
</formalpara>
@psalm-param <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable(Record, int)</link>: mixed $predicate @phpstan-param Level|LevelName|LogLevel::* $level </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a582ce27b33fde0ee744fe633a6ed705b_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a582ce27b33fde0ee744fe633a6ed705b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a4a20559544fdf4dcb457e258dc976cf8"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>reset ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>void </para>
</formalpara>
</para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1a4a20559544fdf4dcb457e258dc976cf8">AbstractProcessingHandler</link>.</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_handler_1_1_test_handler_a4a20559544fdf4dcb457e258dc976cf8_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a4be59dbe9d2aa721275957148e3753a0"/><section>
    <title>setSkipReset()</title>
<indexterm><primary>setSkipReset</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>setSkipReset</secondary></indexterm>
<para><computeroutput>setSkipReset (bool $skipReset)</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>void </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1afa17604fd899fffdc1ee326afe177cb5"/><section>
    <title>write()</title>
<indexterm><primary>write</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>write</secondary></indexterm>
<para><computeroutput>write (array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>
<para>Writes the record down to the log of the implementing handler</para>

<para>@phpstan-param FormattedRecord $record</para>
 </para>
<para>
Réimplémentée à partir de <link linkend="_class_monolog_1_1_handler_1_1_abstract_processing_handler_1afa17604fd899fffdc1ee326afe177cb5">AbstractProcessingHandler</link>.</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a6cb1988642ff4f03fdfb3658cdd14fa0"/><section>
    <title>$records</title>
<indexterm><primary>$records</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>$records</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">records</link> = []<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_handler_1_1_test_handler_1a69dd595592ec395c48d00c72e2ffa5f2"/><section>
    <title>$recordsByLevel</title>
<indexterm><primary>$recordsByLevel</primary><secondary>TestHandler</secondary></indexterm>
<indexterm><primary>TestHandler</primary><secondary>$recordsByLevel</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">recordsByLevel</link> = []<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/Handler/<link linkend="__test_handler_8php">TestHandler.php</link></section>
</section>
