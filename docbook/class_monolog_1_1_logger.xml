<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_logger" xml:lang="fr">
<title>Référence de la classe Logger</title>
<indexterm><primary>Logger</primary></indexterm>
Graphe d&apos;héritage de Logger:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de Logger:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1afc419741a19c9f93b1cf6cfe833292ac">__construct</link> (string $name, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handlers</link>=[], array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">processors</link>=[], ?DateTimeZone $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">timezone</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a3d0963e68bb313b163a73f2803c64600">getName</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a99d83c10e16d3c81e0d9ba17a8114b86">withName</link> (string $name)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1af5f5232bdf608b6c5686736ffb61b808">pushHandler</link> (<link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handler</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ad8248593c4d9cf8854ab7fb79b6e63da">popHandler</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ae2b5d7306523881acfc81cde71bf16af">setHandlers</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handlers</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a1378f22dffac8d828eff68d881feedb2">getHandlers</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a14c91c0ddce4f5cb91bc031e68c00453">pushProcessor</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1aece5018a30e181b7c02b82a8470b5017">popProcessor</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a50ea35ae009d7f4d1a1b4179d60f42d9">getProcessors</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1aab73b1b8423d0b78422d71318ea4518e">useMicrosecondTimestamps</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">micro</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a1fa41a15d4a5bd14b45cc36a656fc32c">useLoggingLoopDetection</link> (bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">detectCycles</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a9c7add88566da0c1e5528ecfe68d03eb">addRecord</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>, string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[], <link linkend="_class_monolog_1_1_date_time_immutable">DateTimeImmutable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">datetime</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1aa69c8bf1f1dcf4e72552efff1fe3e87e">close</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a4a20559544fdf4dcb457e258dc976cf8">reset</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a079fe222ea2cc93395dad8f5830be572">isHandling</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a005bfbc225bb7c13072036594272db45">setExceptionHandler</link> (?<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callback</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a9c3e0b6e1c4b03fbd01129915a802e7d">getExceptionHandler</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ad320d8ce87763c6e2d94b69584ccae3f">log</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a30d64800fcc051abf015b61a4307958c">debug</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a965d1818b6b268d5b49dbf94ff7bc445">info</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1abe7cfefc7dacfe6e77c248d62552f824">notice</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ab0265cec309e8de8592c2efc3d00773a">warning</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a7545997e30fe965d666f20bdcbcde118">error</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ab5ebff9512b78e26c896f72ac5d544ff">critical</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ad1a92292e398409b7e44ab298fdad127">alert</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a8e44733d5c28a4d7799badda95cbca6f">emergency</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>, array $context=[])</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a17fd63f2e52fc498694c0230d8cfae51">setTimezone</link> (DateTimeZone $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">tz</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a23e87a365ef1aea5bc5fdad51d8925ae">getTimezone</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_monolog_1_1_logger_1aa41a4e4b0d5740d3c881724ee61cdf32">getLevels</link> ()</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_logger_1a89e99f08ab7a4f44dfd35e6376b02be6">getLevelName</link> (int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_logger_1a46e58832367c0f367d076e8ce48bd903">toMonologLevel</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">level</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61">DEBUG</link> = 100</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1af2d1bd27ecbe33ecaadb558404e9c669">INFO</link> = 200</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1a0b32ca69140ca26e6614dddf004ae3d9">NOTICE</link> = 250</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1ad0c7ccd2f8b92a760391d21d0ec7b339">WARNING</link> = 300</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1a7f79d7b73cfb40bb7855d4260393cc0f">ERROR</link> = 400</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1a5e924d1434e5b36fdc72dd03b1a8f744">CRITICAL</link> = 500</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1a037a7f6e892e6adb07c2aa099fbaf69d">ALERT</link> = 550</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1ad93131122361f85c70dab2636fe863a5">EMERGENCY</link> = 600</para>
</listitem>
            <listitem><para>const <link linkend="_class_monolog_1_1_logger_1ad629fa048bd788fc4a4ed613628423cb">API</link> = 2</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres protégées    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ad156bba4784f78c0fc5e0c37084be5c1">handleException</link> (Throwable $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">e</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ab2fc40d43824ea3e1ce5d86dee0d763b">$name</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ac01af86047396c863ebae81b8c8f7427">$handlers</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1ab05fb0eafda65f59e2d3909b8177e511">$processors</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1a60a495d2dc8d800ed1f81911b92f40d3">$microsecondTimestamps</link> = true</para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1af1cceca0f6633f202e2e3eccb72912af">$timezone</link></para>
</listitem>
            <listitem><para><link linkend="_class_monolog_1_1_logger_1afb775cd9c5f46d0957da16fd1a9ae887">$exceptionHandler</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_monolog_1_1_logger_1a1035dc0448354cc79f8f9e1ca8dfd0cb">$levels</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para><link linkend="_namespace_monolog">Monolog</link> log channel</para>

<para>It contains a stack of Handlers and a stack of Processors, and uses them to store records that are added to it.</para>

<para><formalpara><title>Auteur</title>

<para>Jordi Boggiano <link xlink:href="mailto:j.boggiano@seld.be">j.boggiano@seld.be</link></para>
</formalpara>
@phpstan-type Level Logger::DEBUG|Logger<link linkend="_define_8php_1af2d1bd27ecbe33ecaadb558404e9c669">INFO</link>|Logger::NOTICE|Logger<link linkend="_define_8php_1ad0c7ccd2f8b92a760391d21d0ec7b339">WARNING</link>|Logger<link linkend="_define_8php_1a7f79d7b73cfb40bb7855d4260393cc0f">ERROR</link>|Logger::CRITICAL|Logger::ALERT|Logger::EMERGENCY @phpstan-type LevelName &apos;DEBUG&apos;|&apos;INFO&apos;|&apos;NOTICE&apos;|&apos;WARNING&apos;|&apos;ERROR&apos;|&apos;CRITICAL&apos;|&apos;ALERT&apos;|&apos;EMERGENCY&apos; @phpstan-type Record array{message: string, context: mixed[], level: Level, level_name: LevelName, channel: string, datetime: \DateTimeImmutable, extra: mixed[]} </para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_monolog_1_1_logger_1afc419741a19c9f93b1cf6cfe833292ac"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct (string $name, array $handlers = <computeroutput>[]</computeroutput>
, array $processors = <computeroutput>[]</computeroutput>
, ?DateTimeZone $timezone = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>@psalm-param array&lt;callable(array): array&gt; $processors</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$name</entry><entry>
<para>The logging channel, a simple descriptive name that is attached to all log records </para>
</entry>
                            </row>
                            <row>
<entry>HandlerInterface[]</entry><entry>$handlers</entry><entry>
<para>Optional stack of handlers, the first one in the array is called first, etc. </para>
</entry>
                            </row>
                            <row>
<entry>callable[]</entry><entry>$processors</entry><entry>
<para>Optional array of processors </para>
</entry>
                            </row>
                            <row>
<entry>DateTimeZone | null</entry><entry>$timezone</entry><entry>
<para>Optional timezone, if not provided date_default_timezone_get() will be used </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_logger_1a9c7add88566da0c1e5528ecfe68d03eb"/><section>
    <title>addRecord()</title>
<indexterm><primary>addRecord</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>addRecord</secondary></indexterm>
<para><computeroutput>addRecord (int $level, string $message, array $context = <computeroutput>[]</computeroutput>
, <link linkend="_class_monolog_1_1_date_time_immutable">DateTimeImmutable</link> $datetime = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>Adds a log record.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$level</entry><entry>
<para>The logging level (a <link linkend="_namespace_monolog">Monolog</link> or RFC 5424 level) </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                            <row>
<entry>DateTimeImmutable</entry><entry>$datetime</entry><entry>
<para>Optional log date to log into the past or future </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool Whether the record has been processed</para>
</formalpara>
@phpstan-param Level $level </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad1a92292e398409b7e44ab298fdad127"/><section>
    <title>alert()</title>
<indexterm><primary>alert</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>alert</secondary></indexterm>
<para><computeroutput>alert ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the ALERT level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a4e65637c3b36b015b513fb9267ae375f">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1aa69c8bf1f1dcf4e72552efff1fe3e87e"/><section>
    <title>close()</title>
<indexterm><primary>close</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>close</secondary></indexterm>
<para><computeroutput>close ( )</computeroutput></para>
<para>Ends a log cycle and frees all resources used by handlers.</para>

<para>Closing a Handler means flushing all buffers and freeing any open resources/handles. Handlers that have been closed should be able to accept log records again and re-open themselves on demand, but this may not always be possible depending on implementation.</para>

<para>This is useful at the end of a request and will be called automatically on every handler when they get destructed. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ab5ebff9512b78e26c896f72ac5d544ff"/><section>
    <title>critical()</title>
<indexterm><primary>critical</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>critical</secondary></indexterm>
<para><computeroutput>critical ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the CRITICAL level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a14ebc4ac3658a6054caade4a30587cd3">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a30d64800fcc051abf015b61a4307958c"/><section>
    <title>debug()</title>
<indexterm><primary>debug</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>debug</secondary></indexterm>
<para><computeroutput>debug ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the DEBUG level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a9f1fbd09fa3d7fc7d6564fb7c6dfc87a">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a8e44733d5c28a4d7799badda95cbca6f"/><section>
    <title>emergency()</title>
<indexterm><primary>emergency</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>emergency</secondary></indexterm>
<para><computeroutput>emergency ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the EMERGENCY level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1afb086b1f95759b162cd55ba2b6fa38ae">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a7545997e30fe965d666f20bdcbcde118"/><section>
    <title>error()</title>
<indexterm><primary>error</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>error</secondary></indexterm>
<para><computeroutput>error ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the ERROR level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a1cd5faee8fb5d0ddc73bca6d6bde78a1">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a9c3e0b6e1c4b03fbd01129915a802e7d"/><section>
    <title>getExceptionHandler()</title>
<indexterm><primary>getExceptionHandler</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getExceptionHandler</secondary></indexterm>
<para><computeroutput>getExceptionHandler ( )</computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1a1378f22dffac8d828eff68d881feedb2"/><section>
    <title>getHandlers()</title>
<indexterm><primary>getHandlers</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getHandlers</secondary></indexterm>
<para><computeroutput>getHandlers ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>HandlerInterface[] </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a89e99f08ab7a4f44dfd35e6376b02be6"/><section>
    <title>getLevelName()</title>
<indexterm><primary>getLevelName</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getLevelName</secondary></indexterm>
<para><computeroutput>static getLevelName (int $level)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Gets the name of the logging level.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Psr\Log\InvalidArgumentException If level is not defined</para>

<para>@phpstan-param Level $level @phpstan-return LevelName </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger_a89e99f08ab7a4f44dfd35e6376b02be6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1aa41a4e4b0d5740d3c881724ee61cdf32"/><section>
    <title>getLevels()</title>
<indexterm><primary>getLevels</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getLevels</secondary></indexterm>
<para><computeroutput>static getLevels ( )<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Gets all supported logging levels.</para>

<para><formalpara><title>Renvoie</title>

<para>array&lt;string, int&gt; Assoc array with human-readable level names =&gt; level codes. @phpstan-return array&lt;LevelName, Level&gt; </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger_aa41a4e4b0d5740d3c881724ee61cdf32_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a3d0963e68bb313b163a73f2803c64600"/><section>
    <title>getName()</title>
<indexterm><primary>getName</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getName</secondary></indexterm>
<para><computeroutput>getName ( )</computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger_a3d0963e68bb313b163a73f2803c64600_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a50ea35ae009d7f4d1a1b4179d60f42d9"/><section>
    <title>getProcessors()</title>
<indexterm><primary>getProcessors</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getProcessors</secondary></indexterm>
<para><computeroutput>getProcessors ( )</computeroutput></para>
<para><formalpara><title>Renvoie</title>

<para>callable[] </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a23e87a365ef1aea5bc5fdad51d8925ae"/><section>
    <title>getTimezone()</title>
<indexterm><primary>getTimezone</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>getTimezone</secondary></indexterm>
<para><computeroutput>getTimezone ( )</computeroutput></para>
<para>Returns the timezone to be used for the timestamp of log records. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad156bba4784f78c0fc5e0c37084be5c1"/><section>
    <title>handleException()</title>
<indexterm><primary>handleException</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>handleException</secondary></indexterm>
<para><computeroutput>handleException (Throwable $e, array $record)<computeroutput>[protected]</computeroutput></computeroutput></para>
<para>Delegates exception management to the custom exception handler, or throws the exception if no custom handler is set.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$record</entry><entry>
<para>@phpstan-param Record $record </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a965d1818b6b268d5b49dbf94ff7bc445"/><section>
    <title>info()</title>
<indexterm><primary>info</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>info</secondary></indexterm>
<para><computeroutput>info ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the INFO level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a080c4e103f83f253391f134962c3bb0f">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a079fe222ea2cc93395dad8f5830be572"/><section>
    <title>isHandling()</title>
<indexterm><primary>isHandling</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>isHandling</secondary></indexterm>
<para><computeroutput>isHandling (int $level)</computeroutput></para>
<para>Checks whether the Logger has a handler that listens on the given level</para>

<para>@phpstan-param Level $level </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad320d8ce87763c6e2d94b69584ccae3f"/><section>
    <title>log()</title>
<indexterm><primary>log</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>log</secondary></indexterm>
<para><computeroutput>log ( $level,  $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at an arbitrary level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$level</entry><entry>
<para>The log level (a <link linkend="_namespace_monolog">Monolog</link>, PSR-3 or RFC 5424 level) </para>
</entry>
                            </row>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @phpstan-param Level|LevelName|LogLevel::* $level </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1a142f6bf4e86dc16e0bae4cff1de0dd44">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1abe7cfefc7dacfe6e77c248d62552f824"/><section>
    <title>notice()</title>
<indexterm><primary>notice</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>notice</secondary></indexterm>
<para><computeroutput>notice ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the NOTICE level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1ae0f18fe657e53af89a1edca20cab8089">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad8248593c4d9cf8854ab7fb79b6e63da"/><section>
    <title>popHandler()</title>
<indexterm><primary>popHandler</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>popHandler</secondary></indexterm>
<para><computeroutput>popHandler ( )</computeroutput></para>
<para>Pops a handler from the stack</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                LogicException If empty handler stack </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1aece5018a30e181b7c02b82a8470b5017"/><section>
    <title>popProcessor()</title>
<indexterm><primary>popProcessor</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>popProcessor</secondary></indexterm>
<para><computeroutput>popProcessor ( )</computeroutput></para>
<para>Removes the processor on top of the stack and returns it.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                LogicException If empty processor stack <formalpara><title>Renvoie</title>

<para>callable </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1af5f5232bdf608b6c5686736ffb61b808"/><section>
    <title>pushHandler()</title>
<indexterm><primary>pushHandler</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>pushHandler</secondary></indexterm>
<para><computeroutput>pushHandler (<link linkend="_interface_monolog_1_1_handler_1_1_handler_interface">HandlerInterface</link> $handler)</computeroutput></para>
<para>Pushes a handler on to the stack. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a14c91c0ddce4f5cb91bc031e68c00453"/><section>
    <title>pushProcessor()</title>
<indexterm><primary>pushProcessor</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>pushProcessor</secondary></indexterm>
<para><computeroutput>pushProcessor (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $callback)</computeroutput></para>
<para>Adds a processor on to the stack. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a4a20559544fdf4dcb457e258dc976cf8"/><section>
    <title>reset()</title>
<indexterm><primary>reset</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>reset</secondary></indexterm>
<para><computeroutput>reset ( )</computeroutput></para>
<para>Ends a log cycle and resets all handlers and processors to their initial state.</para>

<para>Resetting a Handler or a Processor means flushing/cleaning all buffers, resetting internal state, and getting it back to a state in which it can receive log records again.</para>

<para>This is useful in case you want to avoid logs leaking between two requests or jobs when you have a long running process like a worker or an application server serving multiple requests in one process. </para>
<para>
Implémente <link linkend="_interface_monolog_1_1_resettable_interface_1a4a20559544fdf4dcb457e258dc976cf8">ResettableInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a005bfbc225bb7c13072036594272db45"/><section>
    <title>setExceptionHandler()</title>
<indexterm><primary>setExceptionHandler</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>setExceptionHandler</secondary></indexterm>
<para><computeroutput>setExceptionHandler (?<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $callback)</computeroutput></para>
<para>Set a custom exception handler that will be called if adding a new record fails</para>

<para>The callable will receive an exception object and the record that failed to be logged </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ae2b5d7306523881acfc81cde71bf16af"/><section>
    <title>setHandlers()</title>
<indexterm><primary>setHandlers</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>setHandlers</secondary></indexterm>
<para><computeroutput>setHandlers (array $handlers)</computeroutput></para>
<para>Set handlers, replacing all existing ones.</para>

<para>If a map is passed, keys will be ignored.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>HandlerInterface[]</entry><entry>$handlers</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a17fd63f2e52fc498694c0230d8cfae51"/><section>
    <title>setTimezone()</title>
<indexterm><primary>setTimezone</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>setTimezone</secondary></indexterm>
<para><computeroutput>setTimezone (DateTimeZone $tz)</computeroutput></para>
<para>Sets the timezone to be used for the timestamp of log records. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a46e58832367c0f367d076e8ce48bd903"/><section>
    <title>toMonologLevel()</title>
<indexterm><primary>toMonologLevel</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>toMonologLevel</secondary></indexterm>
<para><computeroutput>static toMonologLevel ( $level)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Converts PSR-3 levels to <link linkend="_namespace_monolog">Monolog</link> ones if necessary</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | int</entry><entry>$level</entry><entry>
<para>Level number (monolog) or name (PSR-3) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Psr\Log\InvalidArgumentException If level is not defined</para>

<para>@phpstan-param Level|LevelName|LogLevel::* $level @phpstan-return Level </para>

<para>@phpstan-ignore-next-line</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_logger_a46e58832367c0f367d076e8ce48bd903_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a1fa41a15d4a5bd14b45cc36a656fc32c"/><section>
    <title>useLoggingLoopDetection()</title>
<indexterm><primary>useLoggingLoopDetection</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>useLoggingLoopDetection</secondary></indexterm>
<para><computeroutput>useLoggingLoopDetection (bool $detectCycles)</computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1aab73b1b8423d0b78422d71318ea4518e"/><section>
    <title>useMicrosecondTimestamps()</title>
<indexterm><primary>useMicrosecondTimestamps</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>useMicrosecondTimestamps</secondary></indexterm>
<para><computeroutput>useMicrosecondTimestamps (bool $micro)</computeroutput></para>
<para>Control the use of microsecond resolution timestamps in the &apos;datetime&apos; member of new records.</para>

<para>As of PHP7.1 microseconds are always included by the engine, so there is no performance penalty and <link linkend="_namespace_monolog">Monolog</link> 2 enabled microseconds by default. This function lets you disable them though in case you want to suppress microseconds from the output.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bool</entry><entry>$micro</entry><entry>
<para>True to use microtime() to create timestamps </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ab0265cec309e8de8592c2efc3d00773a"/><section>
    <title>warning()</title>
<indexterm><primary>warning</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>warning</secondary></indexterm>
<para><computeroutput>warning ( $message, array $context = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Adds a log record at the WARNING level.</para>

<para>This method allows for compatibility with common interfaces.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | Stringable</entry><entry>$message</entry><entry>
<para>The log message </para>
</entry>
                            </row>
                            <row>
<entry>mixed[]</entry><entry>$context</entry><entry>
<para>The log context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implémente <link linkend="_interface_psr_1_1_log_1_1_logger_interface_1aa9f94dcb1a687e36bc7f838a8801feec">LoggerInterface</link>.</para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a99d83c10e16d3c81e0d9ba17a8114b86"/><section>
    <title>withName()</title>
<indexterm><primary>withName</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>withName</secondary></indexterm>
<para><computeroutput>withName (string $name)</computeroutput></para>
<para>Return a new cloned instance with the name changed </para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_logger_1afb775cd9c5f46d0957da16fd1a9ae887"/><section>
    <title>$exceptionHandler</title>
<indexterm><primary>$exceptionHandler</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$exceptionHandler</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">exceptionHandler</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1ac01af86047396c863ebae81b8c8f7427"/><section>
    <title>$handlers</title>
<indexterm><primary>$handlers</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$handlers</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">handlers</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1a1035dc0448354cc79f8f9e1ca8dfd0cb"/><section>
    <title>$levels</title>
<indexterm><primary>$levels</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$levels</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">levels</link><computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">=&#32;[
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::DEBUG&#32;&#32;&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;DEBUG&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::INFO&#32;&#32;&#32;&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;INFO&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::NOTICE&#32;&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;NOTICE&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::WARNING&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;WARNING&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::ERROR&#32;&#32;&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;ERROR&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::CRITICAL&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;CRITICAL&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::ALERT&#32;&#32;&#32;&#32;&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;ALERT&apos;</emphasis>,
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;self::EMERGENCY&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;EMERGENCY&apos;</emphasis>,
&#32;&#32;&#32;&#32;]
</programlisting></section>
<anchor xml:id="_class_monolog_1_1_logger_1a60a495d2dc8d800ed1f81911b92f40d3"/><section>
    <title>$microsecondTimestamps</title>
<indexterm><primary>$microsecondTimestamps</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$microsecondTimestamps</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">microsecondTimestamps</link> = true<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1ab2fc40d43824ea3e1ce5d86dee0d763b"/><section>
    <title>$name</title>
<indexterm><primary>$name</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$name</secondary></indexterm>
<para><computeroutput>$name<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1ab05fb0eafda65f59e2d3909b8177e511"/><section>
    <title>$processors</title>
<indexterm><primary>$processors</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$processors</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">processors</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1af1cceca0f6633f202e2e3eccb72912af"/><section>
    <title>$timezone</title>
<indexterm><primary>$timezone</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>$timezone</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">timezone</link><computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1a037a7f6e892e6adb07c2aa099fbaf69d"/><section>
    <title>ALERT</title>
<indexterm><primary>ALERT</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>ALERT</secondary></indexterm>
<para><computeroutput>const ALERT = 550</computeroutput></para>
<para>Action must be taken immediately</para>

<para>Example: Entire website down, database unavailable, etc. This should trigger the SMS alerts and wake you up. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad629fa048bd788fc4a4ed613628423cb"/><section>
    <title>API</title>
<indexterm><primary>API</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>API</secondary></indexterm>
<para><computeroutput>const API = 2</computeroutput></para></section>
<anchor xml:id="_class_monolog_1_1_logger_1a5e924d1434e5b36fdc72dd03b1a8f744"/><section>
    <title>CRITICAL</title>
<indexterm><primary>CRITICAL</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>CRITICAL</secondary></indexterm>
<para><computeroutput>const CRITICAL = 500</computeroutput></para>
<para>Critical conditions</para>

<para>Example: Application component unavailable, unexpected exception. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a758c150b67e476ecf77478f16b387c61"/><section>
    <title>DEBUG</title>
<indexterm><primary>DEBUG</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>DEBUG</secondary></indexterm>
<para><computeroutput>const DEBUG = 100</computeroutput></para>
<para>Detailed debug information </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad93131122361f85c70dab2636fe863a5"/><section>
    <title>EMERGENCY</title>
<indexterm><primary>EMERGENCY</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>EMERGENCY</secondary></indexterm>
<para><computeroutput>const EMERGENCY = 600</computeroutput></para>
<para>Urgent alert. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a7f79d7b73cfb40bb7855d4260393cc0f"/><section>
    <title>ERROR</title>
<indexterm><primary>ERROR</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>ERROR</secondary></indexterm>
<para><computeroutput>const ERROR = 400</computeroutput></para>
<para>Runtime errors </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1af2d1bd27ecbe33ecaadb558404e9c669"/><section>
    <title>INFO</title>
<indexterm><primary>INFO</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>INFO</secondary></indexterm>
<para><computeroutput>const INFO = 200</computeroutput></para>
<para>Interesting events</para>

<para>Examples: <link linkend="_class_user">User</link> logs in, SQL logs. </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1a0b32ca69140ca26e6614dddf004ae3d9"/><section>
    <title>NOTICE</title>
<indexterm><primary>NOTICE</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>NOTICE</secondary></indexterm>
<para><computeroutput>const NOTICE = 250</computeroutput></para>
<para>Uncommon events </para>
</section>
<anchor xml:id="_class_monolog_1_1_logger_1ad0c7ccd2f8b92a760391d21d0ec7b339"/><section>
    <title>WARNING</title>
<indexterm><primary>WARNING</primary><secondary>Logger</secondary></indexterm>
<indexterm><primary>Logger</primary><secondary>WARNING</secondary></indexterm>
<para><computeroutput>const WARNING = 300</computeroutput></para>
<para>Exceptional occurrences that are not errors</para>

<para>Examples: Use of deprecated APIs, poor use of an API, undesirable things that are not necessarily wrong. </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/<link linkend="__logger_8php">Logger.php</link></section>
</section>
