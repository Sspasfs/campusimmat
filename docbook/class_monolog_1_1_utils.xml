<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_monolog_1_1_utils" xml:lang="fr">
<title>Référence de la classe Utils</title>
<indexterm><primary>Utils</primary></indexterm>
Graphe de collaboration de Utils:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1ab18b88929d1e210e006940c48af10743">getClass</link> (object $object)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1a6c6f203419d3af91290aa221f337988b">substr</link> (string $string, int $start, ?int $length=null)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1ac203d61c6f46b2cad5bd8d7669aa71bb">canonicalizePath</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">streamUrl</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1ad10eeb69895cb168d8f9ef89d9b2edbc">jsonEncode</link> ($data, ?int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">encodeFlags</link>=null, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">ignoreErrors</link>=false)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1aeedcc0663f8abe4b1b3bfbcb8ed0687c">handleJsonError</link> (int $code, $data, ?int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">encodeFlags</link>=null)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1ab6cf37c53f64f2c263955eb6cbb31445">pcreLastErrorMessage</link> (int $code)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1af31dda434331e222c06b0a4d7c064567">expandIniShorthandBytes</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">val</link>)</para>
</listitem>
            <listitem><para>static <link linkend="_class_monolog_1_1_utils_1a00d80416197b59f036ebbbb3a88990d4">getRecordMessageForException</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">record</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_monolog_1_1_utils_1a4072eafd798c09b5895ef533b6ec72cf">DEFAULT_JSON_FLAGS</link> = <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_UNESCAPED_SLASHES</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_UNESCAPED_UNICODE</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_PRESERVE_ZERO_FRACTION</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_INVALID_UTF8_SUBSTITUTE</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_PARTIAL_OUTPUT_ON_ERROR</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_monolog_1_1_utils_1ac203d61c6f46b2cad5bd8d7669aa71bb"/><section>
    <title>canonicalizePath()</title>
<indexterm><primary>canonicalizePath</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>canonicalizePath</secondary></indexterm>
<para><computeroutput>static canonicalizePath (string $streamUrl)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Makes sure if a relative path is passed in it is turned into an absolute path</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$streamUrl</entry><entry>
<para>stream URL or path without protocol </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_ac203d61c6f46b2cad5bd8d7669aa71bb_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1af31dda434331e222c06b0a4d7c064567"/><section>
    <title>expandIniShorthandBytes()</title>
<indexterm><primary>expandIniShorthandBytes</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>expandIniShorthandBytes</secondary></indexterm>
<para><computeroutput>static expandIniShorthandBytes ( $val)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Converts a string with a valid &apos;memory_limit&apos; format, to bytes.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | false</entry><entry>$val</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int|false Returns an integer representing bytes. Returns FALSE in case of error. </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_af31dda434331e222c06b0a4d7c064567_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1ab18b88929d1e210e006940c48af10743"/><section>
    <title>getClass()</title>
<indexterm><primary>getClass</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>getClass</secondary></indexterm>
<para><computeroutput>static getClass (object $object)<computeroutput>[static]</computeroutput></computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_ab18b88929d1e210e006940c48af10743_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1a00d80416197b59f036ebbbb3a88990d4"/><section>
    <title>getRecordMessageForException()</title>
<indexterm><primary>getRecordMessageForException</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>getRecordMessageForException</secondary></indexterm>
<para><computeroutput>static getRecordMessageForException (array $record)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array&lt;mixed&gt;</entry><entry>
<para>$record </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_a00d80416197b59f036ebbbb3a88990d4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1aeedcc0663f8abe4b1b3bfbcb8ed0687c"/><section>
    <title>handleJsonError()</title>
<indexterm><primary>handleJsonError</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>handleJsonError</secondary></indexterm>
<para><computeroutput>static handleJsonError (int $code,  $data, ?int $encodeFlags = <computeroutput>null</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Handle a json_encode failure.</para>

<para>If the failure is due to invalid string encoding, try to clean the input and encode again. If the second encoding attempt fails, the initial error is not encoding related or the input can&apos;t be cleaned then raise a descriptive exception.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>int</entry><entry>$code</entry><entry>
<para>return code of json_last_error function </para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$data</entry><entry>
<para>data that was meant to be encoded </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$encodeFlags</entry><entry>
<para>flags to pass to json encode, defaults to JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE | JSON_PRESERVE_ZERO_FRACTION </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if failure can&apos;t be corrected <formalpara><title>Renvoie</title>

<para>string JSON encoded data after error correction </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1ad10eeb69895cb168d8f9ef89d9b2edbc"/><section>
    <title>jsonEncode()</title>
<indexterm><primary>jsonEncode</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>jsonEncode</secondary></indexterm>
<para><computeroutput>static jsonEncode ( $data, ?int $encodeFlags = <computeroutput>null</computeroutput>
, bool $ignoreErrors = <computeroutput>false</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Return the JSON representation of a value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$data</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$encodeFlags</entry><entry>
<para>flags to pass to json encode, defaults to DEFAULT_JSON_FLAGS </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$ignoreErrors</entry><entry>
<para>whether to ignore encoding errors or to throw on error, when ignored and the encoding fails, &quot;null&quot; is returned which is valid json for null </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if encoding fails and errors are not ignored <formalpara><title>Renvoie</title>

<para>string when errors are ignored and the encoding fails, &quot;null&quot; is returned which is valid json for null</para>
</formalpara>
Wrapper for JSON encoding that throws when an error occurs.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para>The value being encoded </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$options</entry><entry>
<para>JSON encode option bitmask </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry>
<para>Set the maximum depth. Must be greater than zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para>if the JSON cannot be encoded.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <link linkend="_">https://www.php.net/manual/en/function.json-encode.php</link></para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_ad10eeb69895cb168d8f9ef89d9b2edbc_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1ab6cf37c53f64f2c263955eb6cbb31445"/><section>
    <title>pcreLastErrorMessage()</title>
<indexterm><primary>pcreLastErrorMessage</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>pcreLastErrorMessage</secondary></indexterm>
<para><computeroutput>static pcreLastErrorMessage (int $code)<computeroutput>[static]</computeroutput></computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_ab6cf37c53f64f2c263955eb6cbb31445_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_monolog_1_1_utils_1a6c6f203419d3af91290aa221f337988b"/><section>
    <title>substr()</title>
<indexterm><primary>substr</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>substr</secondary></indexterm>
<para><computeroutput>static substr (string $string, int $start, ?int $length = <computeroutput>null</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_monolog_1_1_utils_a6c6f203419d3af91290aa221f337988b_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_monolog_1_1_utils_1a4072eafd798c09b5895ef533b6ec72cf"/><section>
    <title>DEFAULT_JSON_FLAGS</title>
<indexterm><primary>DEFAULT_JSON_FLAGS</primary><secondary>Utils</secondary></indexterm>
<indexterm><primary>Utils</primary><secondary>DEFAULT_JSON_FLAGS</secondary></indexterm>
<para><computeroutput>const DEFAULT_JSON_FLAGS = <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_UNESCAPED_SLASHES</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_UNESCAPED_UNICODE</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_PRESERVE_ZERO_FRACTION</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_INVALID_UTF8_SUBSTITUTE</link> | <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">JSON_PARTIAL_OUTPUT_ON_ERROR</link></computeroutput></para></section>
<para>
La documentation de cette classe a été générée à partir des fichiers suivants :</para>
public/glpi/vendor/monolog/monolog/src/Monolog/<link linkend="_monolog_2monolog_2src_2_monolog_2_utils_8php">Utils.php</link>public/glpi/vendor/guzzlehttp/guzzle/src/<link linkend="_guzzlehttp_2guzzle_2src_2_utils_8php">Utils.php</link></section>
</section>
