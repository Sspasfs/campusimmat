<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_sabre_1_1_d_a_v_1_1_server" xml:lang="fr">
<title>Référence de la classe Server</title>
<indexterm><primary>Server</primary></indexterm>
Graphe d&apos;héritage de Server:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server__inherit__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Graphe de collaboration de Server:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aa7bf2836a941686eb91d9427a1a60e59">__construct</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">treeOrNode</link>=null, <link linkend="_class_sabre_1_1_h_t_t_p_1_1_sapi">HTTP\Sapi</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">sapi</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1af8fa59992209e36dccb3eefb0f75531f">start</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ac72ad9f570c48e1d61faf54bb6067ffd">exec</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ac318b2a4a9b4516620cbce197d7d6f60">setBaseUri</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a4c1fe3216f1bf7bad538226923151337">getBaseUri</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a0726706616b065960581170ef816b26c">guessBaseUri</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a1b09f71f0a86f9ad12eb89284476cb70">addPlugin</link> (<link linkend="_class_sabre_1_1_d_a_v_1_1_server_plugin">ServerPlugin</link> $plugin)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a0d1c0d9f3b992e822ed515a20e264570">getPlugin</link> ($name)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a3a6565e51f295a21bbcc386bac9dad46">getPlugins</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a2321df4f2f7d188b92b96fe63dc71a90">getLogger</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a0012c4d85a4b1ca8d0a59a76035e6d8f">invokeMethod</link> (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request, <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_response_interface">ResponseInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">response</link>, $sendResponse=true)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a9f8e1b3ce0478a660c36cd5192e6a58d">getAllowedMethods</link> ($path)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1af9082177972a203cdb3d869a6d8f85da">getRequestUri</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a9b0da9a3a6e6d9e5440d7873ab3e5078">calculateUri</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aef4fb326002fbe383f2a63f5917cd574">getHTTPDepth</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">default</link>=self::DEPTH_INFINITY)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a85c5aa1228e738701b18909f825f2cf5">getHTTPRange</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a36a266cba206038ea1661ba53564205a">getHTTPPrefer</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aff14e9b61cd9e1c90737fab45b7848a3">getCopyAndMoveInfo</link> (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a6e6fc96f1092c618480d21f46fb6d9d6">getProperties</link> ($path, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">propertyNames</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1af767916ed4a661ea467019339613d159">getPropertiesForChildren</link> ($path, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">propertyNames</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ac15914847becf8ed6db5a2c1ea9db1f7">getHTTPHeaders</link> ($path)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a9db9475706b96a2e588c19b0b494d112">getPropertiesForPath</link> ($path, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">propertyNames</link>=[], $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">depth</link>=0)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aeb04f64579728036d8cb386e019b9e7f">getPropertiesIteratorForPath</link> ($path, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">propertyNames</link>=[], $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">depth</link>=0)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a861d1d1c5b32b12b87a5506c18646f06">getPropertiesForMultiplePaths</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">paths</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">propertyNames</link>=[])</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a0d482b1510c208960cfcdc7562acee09">getPropertiesByNode</link> (<link linkend="_class_sabre_1_1_d_a_v_1_1_prop_find">PropFind</link> $propFind, <link linkend="_interface_sabre_1_1_d_a_v_1_1_i_node">INode</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">node</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1abcbfb555339c5a7ef4954f1a6840a45a">createFile</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, $data, &amp;$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">etag</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a911c21193076d8b8ab9f6c438a607ad7">updateFile</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, $data, &amp;$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">etag</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ae92c962b349150c75fe568cf3db05799">createDirectory</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ab53ec0494888c77a405b7a3c59d88e48">createCollection</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, <link linkend="_class_sabre_1_1_d_a_v_1_1_mk_col">MkCol</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">mkCol</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a5e5253933a13826c498de8b9e47be99f">updateProperties</link> ($path, array $properties)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a6fe9bae87fa5b97cad8a0e6dbd362a14">checkPreconditions</link> (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request, <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_response_interface">ResponseInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">response</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a211a0f9ca1b4020f08f026cef6e5ded4">getIfConditions</link> (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a586229a26445bc72547ea6158807113e">getResourceTypeForNode</link> (<link linkend="_interface_sabre_1_1_d_a_v_1_1_i_node">INode</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">node</link>)</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aa9894f8b8cee34b5b9251e462117db32">generateMultiStatus</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">fileProperties</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">strip404s</link>=false)</para>
</listitem>
        </itemizedlist>
</simplesect>
Fonctions membres publiques hérités de <link linkend="_interface_psr_1_1_log_1_1_logger_aware_interface">LoggerAwareInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_psr_1_1_log_1_1_logger_aware_interface_1a80ec5ad53b685504efbf3395c8663ae0">setLogger</link> (<link linkend="_interface_psr_1_1_log_1_1_logger_interface">LoggerInterface</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">logger</link>)</para>
</listitem>
        </itemizedlist>
Fonctions membres publiques hérités de <link linkend="_interface_sabre_1_1_event_1_1_emitter_interface">EmitterInterface</link>        <itemizedlist>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1a33e6415f7f3f457744ad1746759646c4">on</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>, <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callBack</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">priority</link>=100)</para>
</listitem>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1a150b782ec28a64c0fc324a02e8523341">once</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>, <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callBack</link>, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">priority</link>=100)</para>
</listitem>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1a17650c695025842efe69c5ef3dae0473">emit</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">arguments</link>=[], <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">continueCallBack</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1aba0d942bfcf8fd7abc2f58749f5b8432">listeners</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1a0e747e11d0882655ee8a77dd1f4b5298">removeListener</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>, <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">callable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">listener</link>)</para>
</listitem>
            <listitem><para><link linkend="_interface_sabre_1_1_event_1_1_emitter_interface_1a0016e4737c8baecc64f62655510b252f">removeAllListeners</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">eventName</link>=null)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Champs de données    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a900f7563b51f2f8f4cb222a7cb113a49">DEPTH_INFINITY</link> = -1</para>
</listitem>
            <listitem><para>const <link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ad7769598c7d2253e461da786dc43dd86">NS_SABREDAV</link> = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">http:</link>//sabredav.org/<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">ns</link>&apos;</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a5fe7e974b9e397670607dadb4d75b793">$tree</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a53a6f60bd0af5db4d881d05c1f312978">$httpResponse</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a880c2413655f6bf662d05261ec94815a">$httpRequest</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aa0fa69ce58acbe89980c56d536867215">$sapi</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a1b009d9991961742f7d26e8b05447bc0">$transactionType</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a12cdb26fc913d8b7a8b426d9bccd4dae">$protectedProperties</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1ae34f18150f1b993bc6c018b79e7b4139">$debugExceptions</link> = false</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a6b0c91fc6f33141880cf24d9cc5764f2">$resourceTypeMapping</link></para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a052eae2b3acf5d79d9be1b08a848b6a5">$enablePropfindDepthInfinity</link> = false</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1aa108d9d91e700ac530401dd363b0723b">$xml</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs publics statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a3fc74fa6d32b485b106d2bb6f1693d9e">$exposeVersion</link> = true</para>
</listitem>
            <listitem><para>static <link linkend="_class_sabre_1_1_d_a_v_1_1_server_1abd94248d954ce82629504d99773a18ff">$streamMultiStatus</link> = false</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Attributs protégés    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a5ff6ff0b33ae1faa9e6c39bce4bc6c16">$baseUri</link> = null</para>
</listitem>
            <listitem><para><link linkend="_class_sabre_1_1_d_a_v_1_1_server_1a4ab51386acb82cd0a0066eac2567b2bd">$plugins</link> = []</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Main DAV server class.</para>

<para><formalpara><title>Copyright</title>

<para>Copyright (C) fruux GmbH (<link xlink:href="https://fruux.com/">https://fruux.com/</link>) </para>
</formalpara>
<formalpara><title>Auteur</title>

<para>Evert Pot (<link xlink:href="http://evertpot.com/">http://evertpot.com/</link>) @license <link xlink:href="http://sabre.io/license/">http://sabre.io/license/</link> Modified BSD License </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des constructeurs et destructeur</title>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aa7bf2836a941686eb91d9427a1a60e59"/><section>
    <title>__construct()</title>
<indexterm><primary>__construct</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>__construct</secondary></indexterm>
<para><computeroutput>__construct ( $treeOrNode = <computeroutput>null</computeroutput>
, <link linkend="_class_sabre_1_1_h_t_t_p_1_1_sapi">HTTP\Sapi</link> $sapi = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>Sets up the server.</para>

<para>If a Sabre\DAV\Tree object is passed as an argument, it will use it as the directory tree. If a Sabre\DAV\INode is passed, it will create a Sabre\DAV\Tree and use the node as the root.</para>

<para>If nothing is passed, a Sabre\DAV\SimpleCollection is created in a Sabre\DAV\Tree.</para>

<para>If an array is passed, we automatically create a root node, and use the nodes in the array as top-level children.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Tree | INode | array | null</entry><entry>$treeOrNode</entry><entry>
<para>The tree object</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_aa7bf2836a941686eb91d9427a1a60e59_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a1b09f71f0a86f9ad12eb89284476cb70"/><section>
    <title>addPlugin()</title>
<indexterm><primary>addPlugin</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>addPlugin</secondary></indexterm>
<para><computeroutput>addPlugin (<link linkend="_class_sabre_1_1_d_a_v_1_1_server_plugin">ServerPlugin</link> $plugin)</computeroutput></para>
<para>Adds a plugin to the server.</para>

<para>For more information, console the documentation of Sabre\DAV\ServerPlugin </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a1b09f71f0a86f9ad12eb89284476cb70_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a1b09f71f0a86f9ad12eb89284476cb70_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a9b0da9a3a6e6d9e5440d7873ab3e5078"/><section>
    <title>calculateUri()</title>
<indexterm><primary>calculateUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>calculateUri</secondary></indexterm>
<para><computeroutput>calculateUri ( $uri)</computeroutput></para>
<para>Turns a URI such as the REQUEST_URI into a local path.</para>

<para>This method:<itemizedlist>
<listitem>
<para>strips off the base path</para>
</listitem><listitem>
<para>normalizes the path</para>
</listitem><listitem>
<para>uri-decodes the path</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Forbidden A permission denied exception is thrown whenever there was an attempt to supply a uri outside of the base uri</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a9b0da9a3a6e6d9e5440d7873ab3e5078_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a9b0da9a3a6e6d9e5440d7873ab3e5078_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a6fe9bae87fa5b97cad8a0e6dbd362a14"/><section>
    <title>checkPreconditions()</title>
<indexterm><primary>checkPreconditions</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>checkPreconditions</secondary></indexterm>
<para><computeroutput>checkPreconditions (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request, <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_response_interface">ResponseInterface</link> $response)</computeroutput></para>
<para>This method checks the main HTTP preconditions.</para>

<para>Currently these are:<itemizedlist>
<listitem>
<para>If-Match</para>
</listitem><listitem>
<para>If-None-Match</para>
</listitem><listitem>
<para>If-Modified-Since</para>
</listitem><listitem>
<para>If-Unmodified-Since</para>
</listitem></itemizedlist>
</para>

<para>The method will return true if all preconditions are met The method will return false, or throw an exception if preconditions failed. If false is returned the operation should be aborted, and the appropriate HTTP response headers are already set.</para>

<para>Normally this method will throw 412 Precondition Failed for failures related to If-None-Match, If-Match and If-Unmodified Since. It will set the status to 304 Not Modified for If-Modified_since.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a6fe9bae87fa5b97cad8a0e6dbd362a14_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a6fe9bae87fa5b97cad8a0e6dbd362a14_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ab53ec0494888c77a405b7a3c59d88e48"/><section>
    <title>createCollection()</title>
<indexterm><primary>createCollection</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>createCollection</secondary></indexterm>
<para><computeroutput>createCollection ( $uri, <link linkend="_class_sabre_1_1_d_a_v_1_1_mk_col">MkCol</link> $mkCol)</computeroutput></para>
<para>Use this method to create a new collection.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry>
<para>The new uri</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array|null </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_ab53ec0494888c77a405b7a3c59d88e48_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_ab53ec0494888c77a405b7a3c59d88e48_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ae92c962b349150c75fe568cf3db05799"/><section>
    <title>createDirectory()</title>
<indexterm><primary>createDirectory</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>createDirectory</secondary></indexterm>
<para><computeroutput>createDirectory ( $uri)</computeroutput></para>
<para>This method is invoked by sub-systems creating a new directory.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_ae92c962b349150c75fe568cf3db05799_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1abcbfb555339c5a7ef4954f1a6840a45a"/><section>
    <title>createFile()</title>
<indexterm><primary>createFile</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>createFile</secondary></indexterm>
<para><computeroutput>createFile ( $uri,  $data, &amp; $etag = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>This method is invoked by sub-systems creating a new file.</para>

<para>Currently this is done by HTTP PUT and HTTP LOCK (in the Locks_Plugin). It was important to get this done through a centralized function, allowing plugins to intercept this using the beforeCreateFile event.</para>

<para>This method will return true if the file was actually created</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>resource</entry><entry>$data</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$etag</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_abcbfb555339c5a7ef4954f1a6840a45a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ac72ad9f570c48e1d61faf54bb6067ffd"/><section>
    <title>exec()</title>
<indexterm><primary>exec</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>exec</secondary></indexterm>
<para><computeroutput>exec ( )</computeroutput></para>
<para>Alias of start().</para>

<para><para><link linkend="_deprecated_1_deprecated000168">Obsolète</link> </para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_ac72ad9f570c48e1d61faf54bb6067ffd_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aa9894f8b8cee34b5b9251e462117db32"/><section>
    <title>generateMultiStatus()</title>
<indexterm><primary>generateMultiStatus</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>generateMultiStatus</secondary></indexterm>
<para><computeroutput>generateMultiStatus ( $fileProperties,  $strip404s = <computeroutput>false</computeroutput>
)</computeroutput></para>
<para>Returns a callback generating a WebDAV propfind response body based on a list of nodes.</para>

<para>If &apos;strip404s&apos; is set to true, all 404 responses will be removed.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array | \Traversable</entry><entry>$fileProperties</entry><entry>
<para>The list with nodes </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$strip404s</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>callable|string </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a9f8e1b3ce0478a660c36cd5192e6a58d"/><section>
    <title>getAllowedMethods()</title>
<indexterm><primary>getAllowedMethods</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getAllowedMethods</secondary></indexterm>
<para><computeroutput>getAllowedMethods ( $path)</computeroutput></para>
<para>Returns an array with all the supported HTTP methods for a specific uri.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a4c1fe3216f1bf7bad538226923151337"/><section>
    <title>getBaseUri()</title>
<indexterm><primary>getBaseUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getBaseUri</secondary></indexterm>
<para><computeroutput>getBaseUri ( )</computeroutput></para>
<para>Returns the base responding uri.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a4c1fe3216f1bf7bad538226923151337_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a4c1fe3216f1bf7bad538226923151337_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aff14e9b61cd9e1c90737fab45b7848a3"/><section>
    <title>getCopyAndMoveInfo()</title>
<indexterm><primary>getCopyAndMoveInfo</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getCopyAndMoveInfo</secondary></indexterm>
<para><computeroutput>getCopyAndMoveInfo (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request)</computeroutput></para>
<para>Returns information about Copy and Move requests.</para>

<para>This function is created to help getting information about the source and the destination for the WebDAV MOVE and COPY HTTP request. It also validates a lot of information and throws proper exceptions</para>

<para>The returned value is an array with the following keys:<itemizedlist>
<listitem>
<para>destination - Destination path</para>
</listitem><listitem>
<para>destinationExists - Whether or not the destination is an existing url (and should therefore be overwritten)</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                BadRequest upon missing or broken request headers 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                UnsupportedMediaType when trying to copy into a non-collection 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                PreconditionFailed if overwrite is set to false, but the destination exists 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Forbidden when source and destination paths are identical 
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Exception</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                Conflict when trying to copy a node into its own subtree</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_aff14e9b61cd9e1c90737fab45b7848a3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aef4fb326002fbe383f2a63f5917cd574"/><section>
    <title>getHTTPDepth()</title>
<indexterm><primary>getHTTPDepth</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getHTTPDepth</secondary></indexterm>
<para><computeroutput>getHTTPDepth ( $default = <computeroutput>self::DEPTH_INFINITY</computeroutput>
)</computeroutput></para>
<para>Returns the HTTP depth header.</para>

<para>This method returns the contents of the HTTP depth request header. If the depth header was &apos;infinity&apos; it will return the Sabre\DAV\Server::DEPTH_INFINITY object It is possible to supply a default depth value, which is used when the depth header has invalid content, or is completely non-existent</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$default</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>int </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ac15914847becf8ed6db5a2c1ea9db1f7"/><section>
    <title>getHTTPHeaders()</title>
<indexterm><primary>getHTTPHeaders</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getHTTPHeaders</secondary></indexterm>
<para><computeroutput>getHTTPHeaders ( $path)</computeroutput></para>
<para>Returns a list of HTTP headers for a particular resource.</para>

<para>The generated http headers are based on properties provided by the resource. The method basically provides a simple mapping between DAV property and HTTP header.</para>

<para>The headers are intended to be used for HEAD and GET requests.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_ac15914847becf8ed6db5a2c1ea9db1f7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a36a266cba206038ea1661ba53564205a"/><section>
    <title>getHTTPPrefer()</title>
<indexterm><primary>getHTTPPrefer</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getHTTPPrefer</secondary></indexterm>
<para><computeroutput>getHTTPPrefer ( )</computeroutput></para>
<para>Returns the HTTP Prefer header information.</para>

<para>The prefer header is defined in: <link xlink:href="http://tools.ietf.org/html/draft-snell-http-prefer-14">http://tools.ietf.org/html/draft-snell-http-prefer-14</link></para>

<para>This method will return an array with options.</para>

<para>Currently, the following options may be returned: [ &apos;return-asynch&apos; =&gt; true, &apos;return-minimal&apos; =&gt; true, &apos;return-representation&apos; =&gt; true, &apos;wait&apos; =&gt; 30, &apos;strict&apos; =&gt; true, &apos;lenient&apos; =&gt; true, ]</para>

<para>This method also supports the Brief header, and will also return &apos;return-minimal&apos; if the brief header was set to &apos;t&apos;.</para>

<para>For the boolean options, false will be returned if the headers are not specified. For the integer options it will be &apos;null&apos;.</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a36a266cba206038ea1661ba53564205a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a85c5aa1228e738701b18909f825f2cf5"/><section>
    <title>getHTTPRange()</title>
<indexterm><primary>getHTTPRange</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getHTTPRange</secondary></indexterm>
<para><computeroutput>getHTTPRange ( )</computeroutput></para>
<para>Returns the HTTP range header.</para>

<para>This method returns null if there is no well-formed HTTP range request header or array($start, $end).</para>

<para>The first number is the offset of the first byte in the range. The second number is the offset of the last byte in the range.</para>

<para>If the second offset is null, it should be treated as the offset of the last byte of the entity If the first offset is null, the second offset should be used to retrieve the last x bytes of the entity</para>

<para><formalpara><title>Renvoie</title>

<para>int[]|null </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a211a0f9ca1b4020f08f026cef6e5ded4"/><section>
    <title>getIfConditions()</title>
<indexterm><primary>getIfConditions</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getIfConditions</secondary></indexterm>
<para><computeroutput>getIfConditions (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request)</computeroutput></para>
<para>This method is created to extract information from the WebDAV HTTP &apos;If:&apos; header.</para>

<para>The If header can be quite complex, and has a bunch of features. We&apos;re using a regex to extract all relevant information The function will return an array, containing structs with the following keys</para>

<para><itemizedlist>
<listitem>
<para>uri - the uri the condition applies to.</para>
</listitem><listitem>
<para>tokens - The lock token. another 2 dimensional array containing 3 elements</para>
</listitem></itemizedlist>
</para>

<para>Example 1:</para>

<para>If: (&lt;opaquelocktoken:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&gt;)</para>

<para>Would result in:</para>

<para>[ [ &apos;uri&apos; =&gt; &apos;/request/uri&apos;, &apos;tokens&apos; =&gt; [ [ [ &apos;negate&apos; =&gt; false, &apos;token&apos; =&gt; &apos;opaquelocktoken:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&apos;, &apos;etag&apos; =&gt; &quot;&quot; ] ] ], ] ]</para>

<para>Example 2:</para>

<para>If: &lt;/path&gt; (Not &lt;opaquelocktoken:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&gt; [&quot;Im An ETag&quot;]) ([&quot;Another ETag&quot;]) &lt;/path2&gt; (Not [&quot;Path2 ETag&quot;])</para>

<para>Would result in:</para>

<para>[ [ &apos;uri&apos; =&gt; &apos;path&apos;, &apos;tokens&apos; =&gt; [ [ [ &apos;negate&apos; =&gt; true, &apos;token&apos; =&gt; &apos;opaquelocktoken:181d4fae-7d8c-11d0-a765-00a0c91e6bf2&apos;, &apos;etag&apos; =&gt; &apos;&quot;Im An ETag&quot;&apos; ], [ &apos;negate&apos; =&gt; false, &apos;token&apos; =&gt; &apos;&apos;, &apos;etag&apos; =&gt; &apos;&quot;Another ETag&quot;&apos; ] ] ], ], [ &apos;uri&apos; =&gt; &apos;path2&apos;, &apos;tokens&apos; =&gt; [ [ [ &apos;negate&apos; =&gt; true, &apos;token&apos; =&gt; &apos;&apos;, &apos;etag&apos; =&gt; &apos;&quot;Path2 ETag&quot;&apos; ] ] ], ], ]</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a211a0f9ca1b4020f08f026cef6e5ded4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a211a0f9ca1b4020f08f026cef6e5ded4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a2321df4f2f7d188b92b96fe63dc71a90"/><section>
    <title>getLogger()</title>
<indexterm><primary>getLogger</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getLogger</secondary></indexterm>
<para><computeroutput>getLogger ( )</computeroutput></para>
<para>Returns the PSR-3 logger object.</para>

<para><formalpara><title>Renvoie</title>

<para>LoggerInterface </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a0d1c0d9f3b992e822ed515a20e264570"/><section>
    <title>getPlugin()</title>
<indexterm><primary>getPlugin</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPlugin</secondary></indexterm>
<para><computeroutput>getPlugin ( $name)</computeroutput></para>
<para>Returns an initialized plugin by it&apos;s name.</para>

<para>This function returns null if the plugin was not found.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$name</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>ServerPlugin </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a3a6565e51f295a21bbcc386bac9dad46"/><section>
    <title>getPlugins()</title>
<indexterm><primary>getPlugins</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPlugins</secondary></indexterm>
<para><computeroutput>getPlugins ( )</computeroutput></para>
<para>Returns all plugins.</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a6e6fc96f1092c618480d21f46fb6d9d6"/><section>
    <title>getProperties()</title>
<indexterm><primary>getProperties</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getProperties</secondary></indexterm>
<para><computeroutput>getProperties ( $path,  $propertyNames)</computeroutput></para>
<para>Returns a list of properties for a path.</para>

<para>This is a simplified version getPropertiesForPath. If you aren&apos;t interested in status codes, but you just want to have a flat list of properties, use this method.</para>

<para>Please note though that any problems related to retrieving properties, such as permission issues will just result in an empty array being returned.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$propertyNames</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a6e6fc96f1092c618480d21f46fb6d9d6_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a6e6fc96f1092c618480d21f46fb6d9d6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a0d482b1510c208960cfcdc7562acee09"/><section>
    <title>getPropertiesByNode()</title>
<indexterm><primary>getPropertiesByNode</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPropertiesByNode</secondary></indexterm>
<para><computeroutput>getPropertiesByNode (<link linkend="_class_sabre_1_1_d_a_v_1_1_prop_find">PropFind</link> $propFind, <link linkend="_interface_sabre_1_1_d_a_v_1_1_i_node">INode</link> $node)</computeroutput></para>
<para>Determines all properties for a node.</para>

<para>This method tries to grab all properties for a node. This method is used internally getPropertiesForPath and a few others.</para>

<para>It could be useful to call this, if you already have an instance of your target node and simply want to run through the system to get a correct list of properties.</para>

<para><formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0d482b1510c208960cfcdc7562acee09_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0d482b1510c208960cfcdc7562acee09_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1af767916ed4a661ea467019339613d159"/><section>
    <title>getPropertiesForChildren()</title>
<indexterm><primary>getPropertiesForChildren</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPropertiesForChildren</secondary></indexterm>
<para><computeroutput>getPropertiesForChildren ( $path,  $propertyNames)</computeroutput></para>
<para>A kid-friendly way to fetch properties for a node&apos;s children.</para>

<para>The returned array will be indexed by the path of the of child node. Only properties that are actually found will be returned.</para>

<para>The parent node will not be returned.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$propertyNames</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_af767916ed4a661ea467019339613d159_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a861d1d1c5b32b12b87a5506c18646f06"/><section>
    <title>getPropertiesForMultiplePaths()</title>
<indexterm><primary>getPropertiesForMultiplePaths</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPropertiesForMultiplePaths</secondary></indexterm>
<para><computeroutput>getPropertiesForMultiplePaths (array $paths, array $propertyNames = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Returns a list of properties for a list of paths.</para>

<para>The path that should be supplied should have the baseUrl stripped out The list of properties should be supplied in Clark notation. If the list is empty &apos;allprops&apos; is assumed.</para>

<para>The result is returned as an array, with paths for it&apos;s keys. The result may be returned out of order.</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a861d1d1c5b32b12b87a5506c18646f06_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a9db9475706b96a2e588c19b0b494d112"/><section>
    <title>getPropertiesForPath()</title>
<indexterm><primary>getPropertiesForPath</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPropertiesForPath</secondary></indexterm>
<para><computeroutput>getPropertiesForPath ( $path,  $propertyNames = <computeroutput>[]</computeroutput>
,  $depth = <computeroutput>0</computeroutput>
)</computeroutput></para>
<para>Returns a list of properties for a given path.</para>

<para>The path that should be supplied should have the baseUrl stripped out The list of properties should be supplied in Clark notation. If the list is empty &apos;allprops&apos; is assumed.</para>

<para>If a depth of 1 is requested child elements will also be returned.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$propertyNames</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array</para>
</formalpara>
<para><link linkend="_deprecated_1_deprecated000169">Obsolète</link> 
<para>Use getPropertiesIteratorForPath() instead (as it&apos;s more memory efficient) </para>
</para><formalpara><title>Voir également</title>

<para>getPropertiesIteratorForPath() </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a9db9475706b96a2e588c19b0b494d112_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a9db9475706b96a2e588c19b0b494d112_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aeb04f64579728036d8cb386e019b9e7f"/><section>
    <title>getPropertiesIteratorForPath()</title>
<indexterm><primary>getPropertiesIteratorForPath</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getPropertiesIteratorForPath</secondary></indexterm>
<para><computeroutput>getPropertiesIteratorForPath ( $path,  $propertyNames = <computeroutput>[]</computeroutput>
,  $depth = <computeroutput>0</computeroutput>
)</computeroutput></para>
<para>Returns a list of properties for a given path.</para>

<para>The path that should be supplied should have the baseUrl stripped out The list of properties should be supplied in Clark notation. If the list is empty &apos;allprops&apos; is assumed.</para>

<para>If a depth of 1 is requested child elements will also be returned.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$propertyNames</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>\Iterator </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_aeb04f64579728036d8cb386e019b9e7f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_aeb04f64579728036d8cb386e019b9e7f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1af9082177972a203cdb3d869a6d8f85da"/><section>
    <title>getRequestUri()</title>
<indexterm><primary>getRequestUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getRequestUri</secondary></indexterm>
<para><computeroutput>getRequestUri ( )</computeroutput></para>
<para>Gets the uri for the request, keeping the base uri into consideration.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_af9082177972a203cdb3d869a6d8f85da_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a586229a26445bc72547ea6158807113e"/><section>
    <title>getResourceTypeForNode()</title>
<indexterm><primary>getResourceTypeForNode</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>getResourceTypeForNode</secondary></indexterm>
<para><computeroutput>getResourceTypeForNode (<link linkend="_interface_sabre_1_1_d_a_v_1_1_i_node">INode</link> $node)</computeroutput></para>
<para>Returns an array with resourcetypes for a node.</para>

<para><formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a586229a26445bc72547ea6158807113e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a0726706616b065960581170ef816b26c"/><section>
    <title>guessBaseUri()</title>
<indexterm><primary>guessBaseUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>guessBaseUri</secondary></indexterm>
<para><computeroutput>guessBaseUri ( )</computeroutput></para>
<para>This method attempts to detect the base uri. Only the PATH_INFO variable is considered.</para>

<para>If this variable is not set, the root (/) is assumed.</para>

<para><formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0726706616b065960581170ef816b26c_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0726706616b065960581170ef816b26c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a0012c4d85a4b1ca8d0a59a76035e6d8f"/><section>
    <title>invokeMethod()</title>
<indexterm><primary>invokeMethod</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>invokeMethod</secondary></indexterm>
<para><computeroutput>invokeMethod (<link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link> $request, <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_response_interface">ResponseInterface</link> $response,  $sendResponse = <computeroutput>true</computeroutput>
)</computeroutput></para>
<para>Handles a http request, and execute a method based on its name.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>bool</entry><entry>$sendResponse</entry><entry>
<para>whether to send the HTTP response to the DAV client </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0012c4d85a4b1ca8d0a59a76035e6d8f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a0012c4d85a4b1ca8d0a59a76035e6d8f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ac318b2a4a9b4516620cbce197d7d6f60"/><section>
    <title>setBaseUri()</title>
<indexterm><primary>setBaseUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>setBaseUri</secondary></indexterm>
<para><computeroutput>setBaseUri ( $uri)</computeroutput></para>
<para>Sets the base server uri.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1af8fa59992209e36dccb3eefb0f75531f"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>start</secondary></indexterm>
<para><computeroutput>start ( )</computeroutput></para>
<para>Starts the DAV Server. </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_af8fa59992209e36dccb3eefb0f75531f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_af8fa59992209e36dccb3eefb0f75531f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a911c21193076d8b8ab9f6c438a607ad7"/><section>
    <title>updateFile()</title>
<indexterm><primary>updateFile</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>updateFile</secondary></indexterm>
<para><computeroutput>updateFile ( $uri,  $data, &amp; $etag = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>This method is invoked by sub-systems updating a file.</para>

<para>This method will return true if the file was actually updated</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$uri</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>resource</entry><entry>$data</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$etag</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>bool </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a911c21193076d8b8ab9f6c438a607ad7_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a5e5253933a13826c498de8b9e47be99f"/><section>
    <title>updateProperties()</title>
<indexterm><primary>updateProperties</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>updateProperties</secondary></indexterm>
<para><computeroutput>updateProperties ( $path, array $properties)</computeroutput></para>
<para>This method updates a resource&apos;s properties.</para>

<para>The properties array must be a list of properties. Array-keys are property names in clarknotation, array-values are it&apos;s values. If a property must be deleted, the value should be null.</para>

<para>Note that this request should either completely succeed, or completely fail.</para>

<para>The response is an array with properties for keys, and http status codes as their values.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$path</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>array </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_sabre_1_1_d_a_v_1_1_server_a5e5253933a13826c498de8b9e47be99f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des champs</title>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a5ff6ff0b33ae1faa9e6c39bce4bc6c16"/><section>
    <title>$baseUri</title>
<indexterm><primary>$baseUri</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$baseUri</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">baseUri</link> = null<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ae34f18150f1b993bc6c018b79e7b4139"/><section>
    <title>$debugExceptions</title>
<indexterm><primary>$debugExceptions</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$debugExceptions</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">debugExceptions</link> = false</computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a052eae2b3acf5d79d9be1b08a848b6a5"/><section>
    <title>$enablePropfindDepthInfinity</title>
<indexterm><primary>$enablePropfindDepthInfinity</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$enablePropfindDepthInfinity</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">enablePropfindDepthInfinity</link> = false</computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a3fc74fa6d32b485b106d2bb6f1693d9e"/><section>
    <title>$exposeVersion</title>
<indexterm><primary>$exposeVersion</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$exposeVersion</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">exposeVersion</link> = true<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a880c2413655f6bf662d05261ec94815a"/><section>
    <title>$httpRequest</title>
<indexterm><primary>$httpRequest</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$httpRequest</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">httpRequest</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a53a6f60bd0af5db4d881d05c1f312978"/><section>
    <title>$httpResponse</title>
<indexterm><primary>$httpResponse</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$httpResponse</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">httpResponse</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a4ab51386acb82cd0a0066eac2567b2bd"/><section>
    <title>$plugins</title>
<indexterm><primary>$plugins</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$plugins</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">plugins</link> = []<computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a12cdb26fc913d8b7a8b426d9bccd4dae"/><section>
    <title>$protectedProperties</title>
<indexterm><primary>$protectedProperties</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$protectedProperties</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">protectedProperties</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a6b0c91fc6f33141880cf24d9cc5764f2"/><section>
    <title>$resourceTypeMapping</title>
<indexterm><primary>$resourceTypeMapping</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$resourceTypeMapping</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">resourceTypeMapping</link></computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">=&#32;[
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&apos;Sabre\\DAV\\ICollection&apos;</emphasis>&#32;=&gt;&#32;<emphasis role="stringliteral">&apos;{DAV:}collection&apos;</emphasis>,
&#32;&#32;&#32;&#32;]
</programlisting></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aa0fa69ce58acbe89980c56d536867215"/><section>
    <title>$sapi</title>
<indexterm><primary>$sapi</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$sapi</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">sapi</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1abd94248d954ce82629504d99773a18ff"/><section>
    <title>$streamMultiStatus</title>
<indexterm><primary>$streamMultiStatus</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$streamMultiStatus</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">streamMultiStatus</link> = false<computeroutput>[static]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a1b009d9991961742f7d26e8b05447bc0"/><section>
    <title>$transactionType</title>
<indexterm><primary>$transactionType</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$transactionType</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">transactionType</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a5fe7e974b9e397670607dadb4d75b793"/><section>
    <title>$tree</title>
<indexterm><primary>$tree</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$tree</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">tree</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1aa108d9d91e700ac530401dd363b0723b"/><section>
    <title>$xml</title>
<indexterm><primary>$xml</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>$xml</secondary></indexterm>
<para><computeroutput>$<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">xml</link></computeroutput></para></section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1a900f7563b51f2f8f4cb222a7cb113a49"/><section>
    <title>DEPTH_INFINITY</title>
<indexterm><primary>DEPTH_INFINITY</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>DEPTH_INFINITY</secondary></indexterm>
<para><computeroutput>const DEPTH_INFINITY = -1</computeroutput></para>
<para>Infinity is used for some request supporting the HTTP Depth header and indicates that the operation should traverse the entire tree. </para>
</section>
<anchor xml:id="_class_sabre_1_1_d_a_v_1_1_server_1ad7769598c7d2253e461da786dc43dd86"/><section>
    <title>NS_SABREDAV</title>
<indexterm><primary>NS_SABREDAV</primary><secondary>Server</secondary></indexterm>
<indexterm><primary>Server</primary><secondary>NS_SABREDAV</secondary></indexterm>
<para><computeroutput>const NS_SABREDAV = &apos;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">http:</link>//sabredav.org/<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">ns</link>&apos;</computeroutput></para>
<para><link linkend="_class_x_m_l">XML</link> namespace for all SabreDAV related elements. </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/sabre/dav/lib/DAV/<link linkend="_vendor_2sabre_2dav_2lib_2_d_a_v_2_server_8php">Server.php</link></section>
</section>
