<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_webmozart_1_1_assert_1_1_assert" xml:lang="fr">
<title>Référence de la classe Assert</title>
<indexterm><primary>Assert</primary></indexterm>
Graphe de collaboration de Assert:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_webmozart_1_1_assert_1_1_assert__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Fonctions membres publiques statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a5a6be8d05541e044810a8c6ec9d2c5fc">string</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a2bb05c19c963c649ee04a0f660b7592b">stringNotEmpty</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1adfbf9670153c5f490d9a365cec35c431">integer</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a04d796ebe15ccd4309a7d9600ecfa24b">integerish</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3f48ed4b80f58dbd727abbbbc628b3b0">positiveInteger</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1acab536a2831cad5378fb12ea6b7ab2e5">float</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aa1d29bda8446c0b1c0a1568cea3ff0b6">numeric</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ae605aae559a44d19b00ab8c959c71da0">natural</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a99b6d6afab4e7ac26c6129f8e8374014">boolean</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ac042844f602474675888166b2ecf72b2">scalar</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a1364d8c65b28f8d5c8082007050fe992">object</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a0130c0a7e7b823e15f458b9dd442b6cf">resource</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">type</link>=<link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3d8250bbe96b8687a49996b434805f6e">null</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a474c66dd49577cf774dd5f40001fa2be">isCallable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a17ca296a4d6ea734af5ef47b51d5247c">isArray</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3c578fe4df71e6258b16f41ed3c8edc8">isTraversable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a10a0d3b37eda0e67086fdc6311a7a487">isArrayAccessible</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aea5b5d06dedaab2d0182a07681ddc947">isCountable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9a3c3a7b05efbcc3a99edded7bd48931">isIterable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a8419b0da7a722d61e2afb108b84f3c58">isInstanceOf</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a26aed0fba471354921cd560f37782dac">notInstanceOf</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a4da1149935a80305b7b7d5f67d41f8ea">isInstanceOfAny</link> ($value, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classes</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ae96fe50f0ec997333a86f6b32106e4af">isAOf</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a8dc50856688a8bb78fe47cf072aac090">isNotA</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a980391175025a41b7f51455b38437268">isAnyOf</link> ($value, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classes</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aaf4664738a231b2b4a358dfe932d946d">isEmpty</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a277ba4ae053d585b43bddbfaadb3b09e">notEmpty</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3d8250bbe96b8687a49996b434805f6e">null</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9e3fc27f3f225919bd3c27bf3e88313c">notNull</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ac957dbcba5f3e95a18b7794fa790f8bd">true</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a04dfee1f757ca120514a7266c198631b">false</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a0c65c9c4779c1c8e25470941ac8b8231">notFalse</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a18a66f410dad4f9fea9e1b97cca07974">ip</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aef2de7e2947dbe1eb18e2a5c9b425b92">ipv4</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a097b719711e65232d03a160e8a1ee702">ipv6</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a569ac85523122735a25f5dfbde67a9e2">email</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a92722eedf8d4d4a70c1dfe88da279c9c">uniqueValues</link> (array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9f4a04ea76f5c104a3a874bb5284bec8">eq</link> ($value, $expect, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ab61a7f6e97424f2fe73f45bcd2873b49">notEq</link> ($value, $expect, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aecb688f450c356325895f76276b0f87b">same</link> ($value, $expect, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a79b10f94a2431b34ee2fed835bc42ec4">notSame</link> ($value, $expect, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a455d39d66e7b0e3869a098e0d2c20eae">greaterThan</link> ($value, $limit, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aae21d9eba0466ce67cae1b9bbb8e394c">greaterThanEq</link> ($value, $limit, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a08dd4e121f4e4468a66da8529ab01f80">lessThan</link> ($value, $limit, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a0aa69c0ba0338b37c15b441fe5d830cb">lessThanEq</link> ($value, $limit, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1adbaa1be5005cc4c0a6166a7dba472f02">range</link> ($value, $min, $max, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ade66bf8d00bfe5714061272d0550a698">oneOf</link> ($value, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a027c8868386568d9e5c7d851428862f5">inArray</link> ($value, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a22b867fa690d62a2cf191c15e1c38d34">contains</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">subString</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a451d2433e5ff1229689bf66666f1241a">notContains</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">subString</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1af7c2c171896c8531e26b085e1fe43877">notWhitespaceOnly</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ab1a1c8e5194020da9f37698c7f42924e">startsWith</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">prefix</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1abe35b2547689bc932bc7b112fb4f186d">notStartsWith</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">prefix</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ab74ad04e83649bdac2ca7fecf41a4e3e">startsWithLetter</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a8ab8ebcace6812fa76437287aa375a91">endsWith</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">suffix</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a999e383e4b110916f1cf47fad850d381">notEndsWith</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">suffix</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a5d0a0de01bec8ae90e551e5081317303">regex</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">pattern</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a116a35f99f3cd285aeda7d429e30665e">notRegex</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">pattern</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aa9d9802d0688ffe3b000b269807f5ac9">unicodeLetters</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a541fb5b37ab816c9960d1d59aa72017c">alpha</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ac72ea848078236a8f4ad4e75f1feec13">digits</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a52f0b05834e512d4f0b94560650733b8">alnum</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a8969d580c2578af08315d16ce71eb7e0">lower</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3d60055ed19ba357158715e8bab7adb6">upper</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1addf2819486be529a76c0dec2ce715fb5">length</link> ($value, $length, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a076e2a10e10ca51d2c4fa0dbbea6f047">minLength</link> ($value, $min, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a29e9b8eb7a3b8263acd0e8b8f4fd1bdd">maxLength</link> ($value, $max, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a115bd29ad02595481fb40ad61ac9f857">lengthBetween</link> ($value, $min, $max, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a36bb9216c7741e2609ec97037d97a2f4">fileExists</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a1fbdb9a57ff87ee84b27076fb134737e">file</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a7c2e997b2a48bc556e8c8841eb049198">directory</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a00fbf58e98ff47aacd1a07f5ba733e7d">readable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1afee3979636d28e1abd0629067c26ed1d">writable</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1af1c5e45aace30e8134053ac8334c5de6">classExists</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a6db0aa06e88ea768cb657570579f82ce">subclassOf</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9499d66b3cc62ce54fa057d886f258eb">interfaceExists</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a510e0c52d70cdc6d5d38f77fddb95bae">implementsInterface</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">interface</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3889f87234a43fd8b3b2e573981f250e">propertyExists</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classOrObject</link>, $property, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a93272f7ca1be7238439952e155d45e34">propertyNotExists</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classOrObject</link>, $property, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a12445c43f65f6b32d4c8ff9b2af802ca">methodExists</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classOrObject</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">method</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a89eb06f654b380382f9fa231e3c432e6">methodNotExists</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">classOrObject</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">method</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aea12c9b454962cdb8c46a5672c94e056">keyExists</link> ($array, $key, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1ab6be7018de616cc6247319c64cf3c83b">keyNotExists</link> ($array, $key, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9ff37a100cdea1c146781d2ea4570d6c">validArrayKey</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a42ed3e0539b9cc31451dc9b76d85a742">count</link> ($array, $number, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a2d08fca3ec29ec682c8b34f07fe36134">minCount</link> ($array, $min, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1adeabb83a395b4a7d8dc04d6fef88071c">maxCount</link> ($array, $max, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a91b66b1999d1f7b3757c7ad6d98c6174">countBetween</link> ($array, $min, $max, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1abd734a988a7229a62bf7337350e68df1">isList</link> ($array, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a6ee7fef9b3f050412a6499ad2ea8460e">isNonEmptyList</link> ($array, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a108d656f88c6339cdfdd6d93ba4063e6">isMap</link> ($array, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1aef05ea2ca9db1626c8167bdfa6e102ca">isNonEmptyMap</link> ($array, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1af66112ada7ab8b2dc66bf8ee7cba5b3d">uuid</link> ($value, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1adf2d92561da2f474ccea41032b603aae">throws</link> (Closure $expression, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">class</link>=&apos;Exception&apos;, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>=&apos;&apos;)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a61a19cb43fb2530a2f880c0d0672c471">__callStatic</link> ($name, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">arguments</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions membres protégées statiques    </title>
        <itemizedlist>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a8a7747ba787e01fbada1810cb318a4c5">valueToString</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1acd533c558a19f08a9a686e05d859c7d9">typeToString</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a26061730d04e50dea783611369152312">strlen</link> ($value)</para>
</listitem>
            <listitem><para>static <link linkend="_class_webmozart_1_1_assert_1_1_assert_1a9cb8aef78bad8f487b17d52cb84cbae8">reportInvalidArgument</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">message</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Description détaillée</title>

<para>Efficient assertions to validate the input/output of your methods.</para>

<para><formalpara><title>Depuis</title>

<para>1.0</para>
</formalpara>
<formalpara><title>Auteur</title>

<para>Bernhard Schussek <link xlink:href="mailto:bschussek@gmail.com">bschussek@gmail.com</link> </para>
</formalpara>
</para>
</section>
<section>
<title>Documentation des fonctions membres</title>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a61a19cb43fb2530a2f880c0d0672c471"/><section>
    <title>__callStatic()</title>
<indexterm><primary>__callStatic</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>__callStatic</secondary></indexterm>
<para><computeroutput>static __callStatic ( $name,  $arguments)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>BadMethodCallException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a52f0b05834e512d4f0b94560650733b8"/><section>
    <title>alnum()</title>
<indexterm><primary>alnum</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>alnum</secondary></indexterm>
<para><computeroutput>static alnum ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a541fb5b37ab816c9960d1d59aa72017c"/><section>
    <title>alpha()</title>
<indexterm><primary>alpha</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>alpha</secondary></indexterm>
<para><computeroutput>static alpha ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a99b6d6afab4e7ac26c6129f8e8374014"/><section>
    <title>boolean()</title>
<indexterm><primary>boolean</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>boolean</secondary></indexterm>
<para><computeroutput>static boolean ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert bool $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1af1c5e45aace30e8134053ac8334c5de6"/><section>
    <title>classExists()</title>
<indexterm><primary>classExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>classExists</secondary></indexterm>
<para><computeroutput>static classExists ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-assert class-string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a22b867fa690d62a2cf191c15e1c38d34"/><section>
    <title>contains()</title>
<indexterm><primary>contains</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>contains</secondary></indexterm>
<para><computeroutput>static contains ( $value,  $subString,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$subString</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a42ed3e0539b9cc31451dc9b76d85a742"/><section>
    <title>count()</title>
<indexterm><primary>count</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>count</secondary></indexterm>
<para><computeroutput>static count ( $array,  $number,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does not check if $array is countable, this can generate a warning on php versions after 7.2.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Countable | array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$number</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a91b66b1999d1f7b3757c7ad6d98c6174"/><section>
    <title>countBetween()</title>
<indexterm><primary>countBetween</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>countBetween</secondary></indexterm>
<para><computeroutput>static countBetween ( $array,  $min,  $max,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does not check if $array is countable, this can generate a warning on php versions after 7.2.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Countable | array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$min</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$max</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ac72ea848078236a8f4ad4e75f1feec13"/><section>
    <title>digits()</title>
<indexterm><primary>digits</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>digits</secondary></indexterm>
<para><computeroutput>static digits ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a7c2e997b2a48bc556e8c8841eb049198"/><section>
    <title>directory()</title>
<indexterm><primary>directory</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>directory</secondary></indexterm>
<para><computeroutput>static directory ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a569ac85523122735a25f5dfbde67a9e2"/><section>
    <title>email()</title>
<indexterm><primary>email</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>email</secondary></indexterm>
<para><computeroutput>static email ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a8ab8ebcace6812fa76437287aa375a91"/><section>
    <title>endsWith()</title>
<indexterm><primary>endsWith</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>endsWith</secondary></indexterm>
<para><computeroutput>static endsWith ( $value,  $suffix,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$suffix</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9f4a04ea76f5c104a3a874bb5284bec8"/><section>
    <title>eq()</title>
<indexterm><primary>eq</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>eq</secondary></indexterm>
<para><computeroutput>static eq ( $value,  $expect,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$expect</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a04dfee1f757ca120514a7266c198631b"/><section>
    <title>false()</title>
<indexterm><primary>false</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>false</secondary></indexterm>
<para><computeroutput>static false ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert false $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a1fbdb9a57ff87ee84b27076fb134737e"/><section>
    <title>file()</title>
<indexterm><primary>file</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>file</secondary></indexterm>
<para><computeroutput>static file ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a36bb9216c7741e2609ec97037d97a2f4"/><section>
    <title>fileExists()</title>
<indexterm><primary>fileExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>fileExists</secondary></indexterm>
<para><computeroutput>static fileExists ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Will also pass if $value is a directory, use Assert::file() instead if you need to be sure it is a file.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1acab536a2831cad5378fb12ea6b7ab2e5"/><section>
    <title>float()</title>
<indexterm><primary>float</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>float</secondary></indexterm>
<para><computeroutput>static float ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert float $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a455d39d66e7b0e3869a098e0d2c20eae"/><section>
    <title>greaterThan()</title>
<indexterm><primary>greaterThan</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>greaterThan</secondary></indexterm>
<para><computeroutput>static greaterThan ( $value,  $limit,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$limit</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aae21d9eba0466ce67cae1b9bbb8e394c"/><section>
    <title>greaterThanEq()</title>
<indexterm><primary>greaterThanEq</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>greaterThanEq</secondary></indexterm>
<para><computeroutput>static greaterThanEq ( $value,  $limit,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$limit</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a510e0c52d70cdc6d5d38f77fddb95bae"/><section>
    <title>implementsInterface()</title>
<indexterm><primary>implementsInterface</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>implementsInterface</secondary></indexterm>
<para><computeroutput>static implementsInterface ( $value,  $interface,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template ExpectedType of object @psalm-param class-string&lt;ExpectedType&gt; $interface @psalm-assert class-string&lt;ExpectedType&gt; $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$interface</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a027c8868386568d9e5c7d851428862f5"/><section>
    <title>inArray()</title>
<indexterm><primary>inArray</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>inArray</secondary></indexterm>
<para><computeroutput>static inArray ( $value, array $values,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does strict comparison, so Assert::inArray(3, [&apos;3&apos;]) does not pass the assertion.</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$values</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1adfbf9670153c5f490d9a365cec35c431"/><section>
    <title>integer()</title>
<indexterm><primary>integer</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>integer</secondary></indexterm>
<para><computeroutput>static integer ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert int $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a04d796ebe15ccd4309a7d9600ecfa24b"/><section>
    <title>integerish()</title>
<indexterm><primary>integerish</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>integerish</secondary></indexterm>
<para><computeroutput>static integerish ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert numeric $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9499d66b3cc62ce54fa057d886f258eb"/><section>
    <title>interfaceExists()</title>
<indexterm><primary>interfaceExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>interfaceExists</secondary></indexterm>
<para><computeroutput>static interfaceExists ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-assert class-string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a18a66f410dad4f9fea9e1b97cca07974"/><section>
    <title>ip()</title>
<indexterm><primary>ip</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>ip</secondary></indexterm>
<para><computeroutput>static ip ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aef2de7e2947dbe1eb18e2a5c9b425b92"/><section>
    <title>ipv4()</title>
<indexterm><primary>ipv4</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>ipv4</secondary></indexterm>
<para><computeroutput>static ipv4 ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a097b719711e65232d03a160e8a1ee702"/><section>
    <title>ipv6()</title>
<indexterm><primary>ipv6</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>ipv6</secondary></indexterm>
<para><computeroutput>static ipv6 ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a980391175025a41b7f51455b38437268"/><section>
    <title>isAnyOf()</title>
<indexterm><primary>isAnyOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isAnyOf</secondary></indexterm>
<para><computeroutput>static isAnyOf ( $value, array $classes,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param array&lt;class-string&gt; $classes</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>object | string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string[]</entry><entry>$classes</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ae96fe50f0ec997333a86f6b32106e4af"/><section>
    <title>isAOf()</title>
<indexterm><primary>isAOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isAOf</secondary></indexterm>
<para><computeroutput>static isAOf ( $value,  $class,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template ExpectedType of object @psalm-param class-string&lt;ExpectedType&gt; $class @psalm-assert ExpectedType|class-string&lt;ExpectedType&gt; $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>object | string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a17ca296a4d6ea734af5ef47b51d5247c"/><section>
    <title>isArray()</title>
<indexterm><primary>isArray</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isArray</secondary></indexterm>
<para><computeroutput>static isArray ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert array $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a10a0d3b37eda0e67086fdc6311a7a487"/><section>
    <title>isArrayAccessible()</title>
<indexterm><primary>isArrayAccessible</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isArrayAccessible</secondary></indexterm>
<para><computeroutput>static isArrayAccessible ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert array|ArrayAccess $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a474c66dd49577cf774dd5f40001fa2be"/><section>
    <title>isCallable()</title>
<indexterm><primary>isCallable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isCallable</secondary></indexterm>
<para><computeroutput>static isCallable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert callable $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aea5b5d06dedaab2d0182a07681ddc947"/><section>
    <title>isCountable()</title>
<indexterm><primary>isCountable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isCountable</secondary></indexterm>
<para><computeroutput>static isCountable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert countable $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aaf4664738a231b2b4a358dfe932d946d"/><section>
    <title>isEmpty()</title>
<indexterm><primary>isEmpty</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isEmpty</secondary></indexterm>
<para><computeroutput>static isEmpty ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert empty $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a8419b0da7a722d61e2afb108b84f3c58"/><section>
    <title>isInstanceOf()</title>
<indexterm><primary>isInstanceOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isInstanceOf</secondary></indexterm>
<para><computeroutput>static isInstanceOf ( $value,  $class,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template ExpectedType of object @psalm-param class-string&lt;ExpectedType&gt; $class @psalm-assert ExpectedType $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | object</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a4da1149935a80305b7b7d5f67d41f8ea"/><section>
    <title>isInstanceOfAny()</title>
<indexterm><primary>isInstanceOfAny</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isInstanceOfAny</secondary></indexterm>
<para><computeroutput>static isInstanceOfAny ( $value, array $classes,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param array&lt;class-string&gt; $classes</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry></entry><entry>array&lt;object|string&gt;</entry><entry>
<para>$classes </para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9a3c3a7b05efbcc3a99edded7bd48931"/><section>
    <title>isIterable()</title>
<indexterm><primary>isIterable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isIterable</secondary></indexterm>
<para><computeroutput>static isIterable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert iterable $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1abd734a988a7229a62bf7337350e68df1"/><section>
    <title>isList()</title>
<indexterm><primary>isList</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isList</secondary></indexterm>
<para><computeroutput>static isList ( $array,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert list $array</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a108d656f88c6339cdfdd6d93ba4063e6"/><section>
    <title>isMap()</title>
<indexterm><primary>isMap</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isMap</secondary></indexterm>
<para><computeroutput>static isMap ( $array,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template T @psalm-param mixed|array&lt;T&gt; $array @psalm-assert array&lt;string, T&gt; $array</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_webmozart_1_1_assert_1_1_assert_a108d656f88c6339cdfdd6d93ba4063e6_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a6ee7fef9b3f050412a6499ad2ea8460e"/><section>
    <title>isNonEmptyList()</title>
<indexterm><primary>isNonEmptyList</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isNonEmptyList</secondary></indexterm>
<para><computeroutput>static isNonEmptyList ( $array,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert non-empty-list $array</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aef05ea2ca9db1626c8167bdfa6e102ca"/><section>
    <title>isNonEmptyMap()</title>
<indexterm><primary>isNonEmptyMap</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isNonEmptyMap</secondary></indexterm>
<para><computeroutput>static isNonEmptyMap ( $array,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template T @psalm-param mixed|array&lt;T&gt; $array @psalm-assert array&lt;string, T&gt; $array @psalm-assert !empty $array</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a8dc50856688a8bb78fe47cf072aac090"/><section>
    <title>isNotA()</title>
<indexterm><primary>isNotA</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isNotA</secondary></indexterm>
<para><computeroutput>static isNotA ( $value,  $class,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template UnexpectedType of object @psalm-param class-string&lt;UnexpectedType&gt; $class @psalm-assert !UnexpectedType $value @psalm-assert !class-string&lt;UnexpectedType&gt; $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>object | string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a3c578fe4df71e6258b16f41ed3c8edc8"/><section>
    <title>isTraversable()</title>
<indexterm><primary>isTraversable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>isTraversable</secondary></indexterm>
<para><computeroutput>static isTraversable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert iterable $value</para>

<para><para><link linkend="_deprecated_1_deprecated000253">Obsolète</link> 
<para>use &quot;isIterable&quot; or &quot;isInstanceOf&quot; instead</para>
</para></para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aea12c9b454962cdb8c46a5672c94e056"/><section>
    <title>keyExists()</title>
<indexterm><primary>keyExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>keyExists</secondary></indexterm>
<para><computeroutput>static keyExists ( $array,  $key,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | int</entry><entry>$key</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ab6be7018de616cc6247319c64cf3c83b"/><section>
    <title>keyNotExists()</title>
<indexterm><primary>keyNotExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>keyNotExists</secondary></indexterm>
<para><computeroutput>static keyNotExists ( $array,  $key,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | int</entry><entry>$key</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1addf2819486be529a76c0dec2ce715fb5"/><section>
    <title>length()</title>
<indexterm><primary>length</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>length</secondary></indexterm>
<para><computeroutput>static length ( $value,  $length,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$length</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a115bd29ad02595481fb40ad61ac9f857"/><section>
    <title>lengthBetween()</title>
<indexterm><primary>lengthBetween</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>lengthBetween</secondary></indexterm>
<para><computeroutput>static lengthBetween ( $value,  $min,  $max,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Inclusive , so Assert::lengthBetween(&apos;asd&apos;, 3, 5); passes the assertion.</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$min</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$max</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a08dd4e121f4e4468a66da8529ab01f80"/><section>
    <title>lessThan()</title>
<indexterm><primary>lessThan</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>lessThan</secondary></indexterm>
<para><computeroutput>static lessThan ( $value,  $limit,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$limit</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a0aa69c0ba0338b37c15b441fe5d830cb"/><section>
    <title>lessThanEq()</title>
<indexterm><primary>lessThanEq</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>lessThanEq</secondary></indexterm>
<para><computeroutput>static lessThanEq ( $value,  $limit,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$limit</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a8969d580c2578af08315d16ce71eb7e0"/><section>
    <title>lower()</title>
<indexterm><primary>lower</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>lower</secondary></indexterm>
<para><computeroutput>static lower ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert lowercase-string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1adeabb83a395b4a7d8dc04d6fef88071c"/><section>
    <title>maxCount()</title>
<indexterm><primary>maxCount</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>maxCount</secondary></indexterm>
<para><computeroutput>static maxCount ( $array,  $max,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does not check if $array is countable, this can generate a warning on php versions after 7.2.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Countable | array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$max</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a29e9b8eb7a3b8263acd0e8b8f4fd1bdd"/><section>
    <title>maxLength()</title>
<indexterm><primary>maxLength</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>maxLength</secondary></indexterm>
<para><computeroutput>static maxLength ( $value,  $max,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Inclusive max.</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$max</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a12445c43f65f6b32d4c8ff9b2af802ca"/><section>
    <title>methodExists()</title>
<indexterm><primary>methodExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>methodExists</secondary></indexterm>
<para><computeroutput>static methodExists ( $classOrObject,  $method,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param class-string|object $classOrObject</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | object</entry><entry>$classOrObject</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$method</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a89eb06f654b380382f9fa231e3c432e6"/><section>
    <title>methodNotExists()</title>
<indexterm><primary>methodNotExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>methodNotExists</secondary></indexterm>
<para><computeroutput>static methodNotExists ( $classOrObject,  $method,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param class-string|object $classOrObject</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | object</entry><entry>$classOrObject</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$method</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a2d08fca3ec29ec682c8b34f07fe36134"/><section>
    <title>minCount()</title>
<indexterm><primary>minCount</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>minCount</secondary></indexterm>
<para><computeroutput>static minCount ( $array,  $min,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does not check if $array is countable, this can generate a warning on php versions after 7.2.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Countable | array</entry><entry>$array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$min</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a076e2a10e10ca51d2c4fa0dbbea6f047"/><section>
    <title>minLength()</title>
<indexterm><primary>minLength</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>minLength</secondary></indexterm>
<para><computeroutput>static minLength ( $value,  $min,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Inclusive min.</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>int | float</entry><entry>$min</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ae605aae559a44d19b00ab8c959c71da0"/><section>
    <title>natural()</title>
<indexterm><primary>natural</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>natural</secondary></indexterm>
<para><computeroutput>static natural ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert positive-int|0 $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a451d2433e5ff1229689bf66666f1241a"/><section>
    <title>notContains()</title>
<indexterm><primary>notContains</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notContains</secondary></indexterm>
<para><computeroutput>static notContains ( $value,  $subString,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$subString</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a277ba4ae053d585b43bddbfaadb3b09e"/><section>
    <title>notEmpty()</title>
<indexterm><primary>notEmpty</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notEmpty</secondary></indexterm>
<para><computeroutput>static notEmpty ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert !empty $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a999e383e4b110916f1cf47fad850d381"/><section>
    <title>notEndsWith()</title>
<indexterm><primary>notEndsWith</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notEndsWith</secondary></indexterm>
<para><computeroutput>static notEndsWith ( $value,  $suffix,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$suffix</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ab61a7f6e97424f2fe73f45bcd2873b49"/><section>
    <title>notEq()</title>
<indexterm><primary>notEq</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notEq</secondary></indexterm>
<para><computeroutput>static notEq ( $value,  $expect,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$expect</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a0c65c9c4779c1c8e25470941ac8b8231"/><section>
    <title>notFalse()</title>
<indexterm><primary>notFalse</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notFalse</secondary></indexterm>
<para><computeroutput>static notFalse ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert !false $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a26aed0fba471354921cd560f37782dac"/><section>
    <title>notInstanceOf()</title>
<indexterm><primary>notInstanceOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notInstanceOf</secondary></indexterm>
<para><computeroutput>static notInstanceOf ( $value,  $class,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template ExpectedType of object @psalm-param class-string&lt;ExpectedType&gt; $class @psalm-assert !ExpectedType $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | object</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9e3fc27f3f225919bd3c27bf3e88313c"/><section>
    <title>notNull()</title>
<indexterm><primary>notNull</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notNull</secondary></indexterm>
<para><computeroutput>static notNull ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert !null $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a116a35f99f3cd285aeda7d429e30665e"/><section>
    <title>notRegex()</title>
<indexterm><primary>notRegex</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notRegex</secondary></indexterm>
<para><computeroutput>static notRegex ( $value,  $pattern,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$pattern</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a79b10f94a2431b34ee2fed835bc42ec4"/><section>
    <title>notSame()</title>
<indexterm><primary>notSame</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notSame</secondary></indexterm>
<para><computeroutput>static notSame ( $value,  $expect,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$expect</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1abe35b2547689bc932bc7b112fb4f186d"/><section>
    <title>notStartsWith()</title>
<indexterm><primary>notStartsWith</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notStartsWith</secondary></indexterm>
<para><computeroutput>static notStartsWith ( $value,  $prefix,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$prefix</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1af7c2c171896c8531e26b085e1fe43877"/><section>
    <title>notWhitespaceOnly()</title>
<indexterm><primary>notWhitespaceOnly</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>notWhitespaceOnly</secondary></indexterm>
<para><computeroutput>static notWhitespaceOnly ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a3d8250bbe96b8687a49996b434805f6e"/><section>
    <title>null()</title>
<indexterm><primary>null</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>null</secondary></indexterm>
<para><computeroutput>static null ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert null $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aa1d29bda8446c0b1c0a1568cea3ff0b6"/><section>
    <title>numeric()</title>
<indexterm><primary>numeric</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>numeric</secondary></indexterm>
<para><computeroutput>static numeric ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert numeric $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a1364d8c65b28f8d5c8082007050fe992"/><section>
    <title>object()</title>
<indexterm><primary>object</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>object</secondary></indexterm>
<para><computeroutput>static object ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert object $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ade66bf8d00bfe5714061272d0550a698"/><section>
    <title>oneOf()</title>
<indexterm><primary>oneOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>oneOf</secondary></indexterm>
<para><computeroutput>static oneOf ( $value, array $values,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>A more human-readable alias of Assert::inArray().</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$values</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a3f48ed4b80f58dbd727abbbbc628b3b0"/><section>
    <title>positiveInteger()</title>
<indexterm><primary>positiveInteger</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>positiveInteger</secondary></indexterm>
<para><computeroutput>static positiveInteger ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert positive-int $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a3889f87234a43fd8b3b2e573981f250e"/><section>
    <title>propertyExists()</title>
<indexterm><primary>propertyExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>propertyExists</secondary></indexterm>
<para><computeroutput>static propertyExists ( $classOrObject,  $property,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param class-string|object $classOrObject</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | object</entry><entry>$classOrObject</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$property</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a93272f7ca1be7238439952e155d45e34"/><section>
    <title>propertyNotExists()</title>
<indexterm><primary>propertyNotExists</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>propertyNotExists</secondary></indexterm>
<para><computeroutput>static propertyNotExists ( $classOrObject,  $property,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-param class-string|object $classOrObject</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | object</entry><entry>$classOrObject</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$property</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1adbaa1be5005cc4c0a6166a7dba472f02"/><section>
    <title>range()</title>
<indexterm><primary>range</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>range</secondary></indexterm>
<para><computeroutput>static range ( $value,  $min,  $max,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Inclusive range, so Assert::(3, 3, 5) passes.</para>

<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$min</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$max</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a00fbf58e98ff47aacd1a07f5ba733e7d"/><section>
    <title>readable()</title>
<indexterm><primary>readable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>readable</secondary></indexterm>
<para><computeroutput>static readable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a5d0a0de01bec8ae90e551e5081317303"/><section>
    <title>regex()</title>
<indexterm><primary>regex</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>regex</secondary></indexterm>
<para><computeroutput>static regex ( $value,  $pattern,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$pattern</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9cb8aef78bad8f487b17d52cb84cbae8"/><section>
    <title>reportInvalidArgument()</title>
<indexterm><primary>reportInvalidArgument</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>reportInvalidArgument</secondary></indexterm>
<para><computeroutput>static reportInvalidArgument ( $message)<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                @psalm-pure this method is not supposed to perform side-effects </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a0130c0a7e7b823e15f458b9dd442b6cf"/><section>
    <title>resource()</title>
<indexterm><primary>resource</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>resource</secondary></indexterm>
<para><computeroutput>static resource ( $value,  $type = <computeroutput><link linkend="_class_webmozart_1_1_assert_1_1_assert_1a3d8250bbe96b8687a49996b434805f6e">null</link></computeroutput>
,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert resource $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | null</entry><entry>$type</entry><entry>
<para>type of resource this should be. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Voir également</title>

<para><link xlink:href="https://www.php.net/manual/en/function.get-resource-type.php">https://www.php.net/manual/en/function.get-resource-type.php</link> </para>
</formalpara>

                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aecb688f450c356325895f76276b0f87b"/><section>
    <title>same()</title>
<indexterm><primary>same</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>same</secondary></indexterm>
<para><computeroutput>static same ( $value,  $expect,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>mixed</entry><entry>$expect</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ac042844f602474675888166b2ecf72b2"/><section>
    <title>scalar()</title>
<indexterm><primary>scalar</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>scalar</secondary></indexterm>
<para><computeroutput>static scalar ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert scalar $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ab1a1c8e5194020da9f37698c7f42924e"/><section>
    <title>startsWith()</title>
<indexterm><primary>startsWith</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>startsWith</secondary></indexterm>
<para><computeroutput>static startsWith ( $value,  $prefix,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$prefix</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ab74ad04e83649bdac2ca7fecf41a4e3e"/><section>
    <title>startsWithLetter()</title>
<indexterm><primary>startsWithLetter</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>startsWithLetter</secondary></indexterm>
<para><computeroutput>static startsWithLetter ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a5a6be8d05541e044810a8c6ec9d2c5fc"/><section>
    <title>string()</title>
<indexterm><primary>string</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>string</secondary></indexterm>
<para><computeroutput>static string ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a2bb05c19c963c649ee04a0f660b7592b"/><section>
    <title>stringNotEmpty()</title>
<indexterm><primary>stringNotEmpty</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>stringNotEmpty</secondary></indexterm>
<para><computeroutput>static stringNotEmpty ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert non-empty-string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a26061730d04e50dea783611369152312"/><section>
    <title>strlen()</title>
<indexterm><primary>strlen</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>strlen</secondary></indexterm>
<para><computeroutput>static strlen ( $value)<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a6db0aa06e88ea768cb657570579f82ce"/><section>
    <title>subclassOf()</title>
<indexterm><primary>subclassOf</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>subclassOf</secondary></indexterm>
<para><computeroutput>static subclassOf ( $value,  $class,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-template ExpectedType of object @psalm-param class-string&lt;ExpectedType&gt; $class @psalm-assert class-string&lt;ExpectedType&gt;|ExpectedType $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | object</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1adf2d92561da2f474ccea41032b603aae"/><section>
    <title>throws()</title>
<indexterm><primary>throws</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>throws</secondary></indexterm>
<para><computeroutput>static throws (Closure $expression,  $class = <computeroutput>&apos;Exception&apos;</computeroutput>
,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-param class-string&lt;Throwable&gt; $class</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Closure</entry><entry>$expression</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$class</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1ac957dbcba5f3e95a18b7794fa790f8bd"/><section>
    <title>true()</title>
<indexterm><primary>true</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>true</secondary></indexterm>
<para><computeroutput>static true ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert true $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1acd533c558a19f08a9a686e05d859c7d9"/><section>
    <title>typeToString()</title>
<indexterm><primary>typeToString</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>typeToString</secondary></indexterm>
<para><computeroutput>static typeToString ( $value)<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1aa9d9802d0688ffe3b000b269807f5ac9"/><section>
    <title>unicodeLetters()</title>
<indexterm><primary>unicodeLetters</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>unicodeLetters</secondary></indexterm>
<para><computeroutput>static unicodeLetters ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a92722eedf8d4d4a70c1dfe88da279c9c"/><section>
    <title>uniqueValues()</title>
<indexterm><primary>uniqueValues</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>uniqueValues</secondary></indexterm>
<para><computeroutput>static uniqueValues (array $values,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Does non strict comparisons on the items, so [&apos;3&apos;, 3] will not pass the assertion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>$values</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a3d60055ed19ba357158715e8bab7adb6"/><section>
    <title>upper()</title>
<indexterm><primary>upper</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>upper</secondary></indexterm>
<para><computeroutput>static upper ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure @psalm-assert !lowercase-string $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1af66112ada7ab8b2dc66bf8ee7cba5b3d"/><section>
    <title>uuid()</title>
<indexterm><primary>uuid</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>uuid</secondary></indexterm>
<para><computeroutput>static uuid ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>@psalm-pure</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a9ff37a100cdea1c146781d2ea4570d6c"/><section>
    <title>validArrayKey()</title>
<indexterm><primary>validArrayKey</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>validArrayKey</secondary></indexterm>
<para><computeroutput>static validArrayKey ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>Checks if a value is a valid array key (int or string).</para>

<para>@psalm-pure @psalm-assert array-key $value</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1a8a7747ba787e01fbada1810cb318a4c5"/><section>
    <title>valueToString()</title>
<indexterm><primary>valueToString</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>valueToString</secondary></indexterm>
<para><computeroutput>static valueToString ( $value)<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string </para>
</formalpara>
</para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_webmozart_1_1_assert_1_1_assert_a8a7747ba787e01fbada1810cb318a4c5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_webmozart_1_1_assert_1_1_assert_a8a7747ba787e01fbada1810cb318a4c5_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_webmozart_1_1_assert_1_1_assert_1afee3979636d28e1abd0629067c26ed1d"/><section>
    <title>writable()</title>
<indexterm><primary>writable</primary><secondary>Assert</secondary></indexterm>
<indexterm><primary>Assert</primary><secondary>writable</secondary></indexterm>
<para><computeroutput>static writable ( $value,  $message = <computeroutput>&apos;&apos;</computeroutput>
)<computeroutput>[static]</computeroutput></computeroutput></para>
<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string</entry><entry>$message</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>InvalidArgumentException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
La documentation de cette classe a été générée à partir du fichier suivant :</para>
public/glpi/vendor/webmozart/assert/src/<link linkend="__assert_8php">Assert.php</link></section>
</section>
