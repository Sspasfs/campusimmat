<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_guzzle_http" xml:lang="fr">
<title>Référence de l&apos;espace de nommage GuzzleHttp</title>
<indexterm><primary>GuzzleHttp</primary></indexterm>
<simplesect>
    <title>Espaces de nommage    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_guzzle_http_1_1_cookie">Cookie</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_guzzle_http_1_1_exception">Exception</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_guzzle_http_1_1_handler">Handler</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_guzzle_http_1_1_promise">Promise</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_guzzle_http_1_1_psr7">Psr7</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Structures de données    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_body_summarizer">BodySummarizer</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_guzzle_http_1_1_body_summarizer_interface">BodySummarizerInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_client">Client</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_guzzle_http_1_1_client_interface">ClientInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_handler_stack">HandlerStack</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_message_formatter">MessageFormatter</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_guzzle_http_1_1_message_formatter_interface">MessageFormatterInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_middleware">Middleware</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_pool">Pool</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_prepare_body_middleware">PrepareBodyMiddleware</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_redirect_middleware">RedirectMiddleware</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_request_options">RequestOptions</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_retry_middleware">RetryMiddleware</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_transfer_stats">TransferStats</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_guzzle_http_1_1_utils">Utils</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_guzzle_http_1a12d90f7e4a62464a0bb88082083e035c">get</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a71d0216d094225273e5da75a248311e2">head</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a55d9d79e1ea4267eb4163c0249ea8ce6">put</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a02144f7eaaef7d69ccc3691fda9ea8a7">post</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1aea71e451a13abd2c7cd20cc91a3bde37">patch</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1ae2a219e6820424c210d7dcef897867be">delete</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a4a81ba549dcf2e189e634af20dabe6da">requestAsync</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">method</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1af1c59676cb4c1b584500ff594b86c09a">getAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1ac89c5a68eb65b10c067e3f731ef14ab3">headAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a9ca35d0ff65a1b3f82696c816800af3e">putAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a6eb0ff47b10b7158469751153fd8068d">postAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1ab9d3ca28d0842080c997e70ace05f876">patchAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a59190bf159f47498ff4f51127e7126b5">deleteAsync</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">uri</link>, array $options=[])</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a0b634b074fe1ef82cda43649293f1c9c">describe_type</link> ($input)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1adf13d6b24a9d274499ba62e96f5a687a">headers_from_lines</link> (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">iterable</link> $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">lines</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a6f80794616c2fbd5400985f74672d713">debug_resource</link> ($value=null)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1aa0c64d2c59c04841ad45dee17fda6656">choose_handler</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1aac383f8a054cf78bd8c997de5ed8ee7f">default_user_agent</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1aeaed8c70455d561e9de7ca3029dc79f9">default_ca_bundle</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a03f26690da8f5472df854b872d19c4dd">normalize_header_keys</link> (array $headers)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a9fe34bb741c9bea9a2bc07707224becb">is_host_in_noproxy</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">host</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">noProxyArray</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a876abc2eb3d34a4cfd10abf0f7e3949f">json_decode</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">json</link>, bool $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">assoc</link>=false, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">depth</link>=512, int $options=0)</para>
</listitem>
            <listitem><para><link linkend="_namespace_guzzle_http_1a43c0826d27653b8c4cd40d2398f4b93e">json_encode</link> ($value, int $options=0, int $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">depth</link>=512)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">trait</link> <link linkend="_namespace_guzzle_http_1aec54bf06e25919ac33719ef21e756b81">ClientTrait</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="_namespace_guzzle_http_1aa0c64d2c59c04841ad45dee17fda6656"/><section>
    <title>choose_handler()</title>
<indexterm><primary>choose_handler</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>choose_handler</secondary></indexterm>
<para><computeroutput>choose_handler ( )</computeroutput></para>
<para>Chooses and creates a default handler to use based on the environment.</para>

<para>The returned handler is not wrapped by any default middlewares.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if no viable <link linkend="_namespace_guzzle_http_1_1_handler">Handler</link> is available.</para>

<para><formalpara><title>Renvoie</title>

<para>callable(\Psr\Http\Message\RequestInterface, array): \GuzzleHttp\Promise\PromiseInterface Returns the best handler for the given system.</para>
</formalpara>
<para><link linkend="_deprecated_1_deprecated000031">Obsolète</link> 
<para>choose_handler will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1a9b4bb8c32bfe4b4d9cfdd840600b88e7">Utils::chooseHandler</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_aa0c64d2c59c04841ad45dee17fda6656_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a6f80794616c2fbd5400985f74672d713"/><section>
    <title>debug_resource()</title>
<indexterm><primary>debug_resource</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>debug_resource</secondary></indexterm>
<para><computeroutput>debug_resource ( $value = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>Returns a debug stream based on the provided variable.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para>Optional value</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>resource</para>
</formalpara>
<para><link linkend="_deprecated_1_deprecated000030">Obsolète</link> 
<para>debug_resource will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1a6293ab252c4880a2a343cef02e739da9">Utils::debugResource</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a6f80794616c2fbd5400985f74672d713_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1aeaed8c70455d561e9de7ca3029dc79f9"/><section>
    <title>default_ca_bundle()</title>
<indexterm><primary>default_ca_bundle</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>default_ca_bundle</secondary></indexterm>
<para><computeroutput>default_ca_bundle ( )</computeroutput></para>
<para>Returns the default cacert bundle for the current system.</para>

<para>First, the openssl.cafile and curl.cainfo php.ini settings are checked. If those settings are not configured, then the common locations for bundles found on Red Hat, CentOS, Fedora, Ubuntu, Debian, FreeBSD, OS X and Windows are checked. If any of these file locations are found on disk, they will be utilized.</para>

<para>Note: the result of this function is cached for subsequent calls.</para>

<para>
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                RuntimeException if no bundle can be found.</para>

<para><para><link linkend="_deprecated_1_deprecated000033">Obsolète</link> 
<para>default_ca_bundle will be removed in guzzlehttp/guzzle:8.0. This function is not needed in PHP 5.6+. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_aeaed8c70455d561e9de7ca3029dc79f9_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1aac383f8a054cf78bd8c997de5ed8ee7f"/><section>
    <title>default_user_agent()</title>
<indexterm><primary>default_user_agent</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>default_user_agent</secondary></indexterm>
<para><computeroutput>default_user_agent ( )</computeroutput></para>
<para>Get the default User-Agent string to use with Guzzle.</para>

<para><para><link linkend="_deprecated_1_deprecated000032">Obsolète</link> 
<para>default_user_agent will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1a8ba4da3a7a2f31dd85b1be7c474fb541">Utils::defaultUserAgent</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_aac383f8a054cf78bd8c997de5ed8ee7f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1ae2a219e6820424c210d7dcef897867be"/><section>
    <title>delete()</title>
<indexterm><primary>delete</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>delete</secondary></indexterm>
<para><computeroutput>delete ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP DELETE request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a59190bf159f47498ff4f51127e7126b5"/><section>
    <title>deleteAsync()</title>
<indexterm><primary>deleteAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>deleteAsync</secondary></indexterm>
<para><computeroutput>deleteAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP DELETE request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a59190bf159f47498ff4f51127e7126b5_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a0b634b074fe1ef82cda43649293f1c9c"/><section>
    <title>describe_type()</title>
<indexterm><primary>describe_type</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>describe_type</secondary></indexterm>
<para><computeroutput>describe_type ( $input)</computeroutput></para>
<para>Debug function used to describe the provided value type and class.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$input</entry><entry>
<para>Any type of variable to describe the type of. This parameter misses a typehint because of that.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string Returns a string containing the type of the variable and if a class is provided, the class name.</para>
</formalpara>
<para><link linkend="_deprecated_1_deprecated000028">Obsolète</link> 
<para>describe_type will be removed in guzzlehttp/guzzle:8.0. Use Utils::describeType instead. </para>
</para></para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a12d90f7e4a62464a0bb88082083e035c"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>get</secondary></indexterm>
<para><computeroutput>get ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP GET request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1af1c59676cb4c1b584500ff594b86c09a"/><section>
    <title>getAsync()</title>
<indexterm><primary>getAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>getAsync</secondary></indexterm>
<para><computeroutput>getAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP GET request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_af1c59676cb4c1b584500ff594b86c09a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a71d0216d094225273e5da75a248311e2"/><section>
    <title>head()</title>
<indexterm><primary>head</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>head</secondary></indexterm>
<para><computeroutput>head ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP HEAD request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1ac89c5a68eb65b10c067e3f731ef14ab3"/><section>
    <title>headAsync()</title>
<indexterm><primary>headAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>headAsync</secondary></indexterm>
<para><computeroutput>headAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP HEAD request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_ac89c5a68eb65b10c067e3f731ef14ab3_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1adf13d6b24a9d274499ba62e96f5a687a"/><section>
    <title>headers_from_lines()</title>
<indexterm><primary>headers_from_lines</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>headers_from_lines</secondary></indexterm>
<para><computeroutput>headers_from_lines (<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">iterable</link> $lines)</computeroutput></para>
<para>Parses an array of header lines into an associative array of headers.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>iterable</entry><entry>$lines</entry><entry>
<para>Header lines array of strings in the following format: &quot;Name: Value&quot;</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <para><link linkend="_deprecated_1_deprecated000029">Obsolète</link> 
<para>headers_from_lines will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1adaa715a677ca9c96f17d12d17a4306a6">Utils::headersFromLines</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_adf13d6b24a9d274499ba62e96f5a687a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a9fe34bb741c9bea9a2bc07707224becb"/><section>
    <title>is_host_in_noproxy()</title>
<indexterm><primary>is_host_in_noproxy</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>is_host_in_noproxy</secondary></indexterm>
<para><computeroutput>is_host_in_noproxy (string $host, array $noProxyArray)</computeroutput></para>
<para>Returns true if the provided host matches any of the no proxy areas.</para>

<para>This method will strip a port from the host if it is present. Each pattern can be matched with an exact match (e.g., &quot;foo.com&quot; == &quot;foo.com&quot;) or a partial match: (e.g., &quot;foo.com&quot; == &quot;baz.foo.com&quot; and &quot;.foo.com&quot; == &quot;baz.foo.com&quot;, but &quot;.foo.com&quot; != &quot;foo.com&quot;).</para>

<para>Areas are matched in the following cases:<orderedlist>
<listitem>
<para>&quot;*&quot; (without quotes) always matches any hosts.</para>
</listitem><listitem>
<para>An exact match.</para>
</listitem><listitem>
<para>The area starts with &quot;.&quot; and the area is the last part of the host. e.g. &apos;.mit.edu&apos; will match any host that ends with &apos;.mit.edu&apos;.</para>
</listitem></orderedlist>
</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$host</entry><entry>
<para>Host to check against the patterns. </para>
</entry>
                            </row>
                            <row>
<entry>string[]</entry><entry>$noProxyArray</entry><entry>
<para>An array of host patterns.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_namespace_guzzle_http_1_1_exception">Exception</link></entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException</para>

<para><para><link linkend="_deprecated_1_deprecated000035">Obsolète</link> 
<para>is_host_in_noproxy will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1ab67b6c2bf67736eccab698cbf5f4b1a8">Utils::isHostInNoProxy</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a9fe34bb741c9bea9a2bc07707224becb_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a876abc2eb3d34a4cfd10abf0f7e3949f"/><section>
    <title>json_decode()</title>
<indexterm><primary>json_decode</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>json_decode</secondary></indexterm>
<para><computeroutput>json_decode (string $json, bool $assoc = <computeroutput>false</computeroutput>
, int $depth = <computeroutput>512</computeroutput>
, int $options = <computeroutput>0</computeroutput>
)</computeroutput></para>
<para>Wrapper for json_decode that throws when an error occurs.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$json</entry><entry>
<para>JSON data to parse </para>
</entry>
                            </row>
                            <row>
<entry>bool</entry><entry>$assoc</entry><entry>
<para>When true, returned objects will be converted into associative arrays. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry>
<para><link linkend="_class_user">User</link> specified recursion depth. </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$options</entry><entry>
<para>Bitmask of JSON decode options.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>object|array|string|int|float|bool|null</para>
</formalpara>

                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_namespace_guzzle_http_1_1_exception">Exception</link></entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException if the JSON cannot be decoded.</para>

<para><link linkend="_">deprecated 36. </link></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a876abc2eb3d34a4cfd10abf0f7e3949f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a43c0826d27653b8c4cd40d2398f4b93e"/><section>
    <title>json_encode()</title>
<indexterm><primary>json_encode</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>json_encode</secondary></indexterm>
<para><computeroutput>json_encode ( $value, int $options = <computeroutput>0</computeroutput>
, int $depth = <computeroutput>512</computeroutput>
)</computeroutput></para>
<para>Wrapper for JSON encoding that throws when an error occurs.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>mixed</entry><entry>$value</entry><entry>
<para>The value being encoded </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$options</entry><entry>
<para>JSON encode option bitmask </para>
</entry>
                            </row>
                            <row>
<entry>int</entry><entry>$depth</entry><entry>
<para>Set the maximum depth. Must be greater than zero.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry><link linkend="_namespace_guzzle_http_1_1_exception">Exception</link></entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                InvalidArgumentException if the JSON cannot be encoded.</para>

<para><link linkend="_">deprecated 37. </link></para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a03f26690da8f5472df854b872d19c4dd"/><section>
    <title>normalize_header_keys()</title>
<indexterm><primary>normalize_header_keys</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>normalize_header_keys</secondary></indexterm>
<para><computeroutput>normalize_header_keys (array $headers)</computeroutput></para>
<para>Creates an associative array of lowercase header names to the actual header casing.</para>

<para><para><link linkend="_deprecated_1_deprecated000034">Obsolète</link> 
<para>normalize_header_keys will be removed in guzzlehttp/guzzle:8.0. Use <link linkend="_class_guzzle_http_1_1_utils_1aa6b5075583ab85d371b65426b878b4fa">Utils::normalizeHeaderKeys</link> instead. </para>
</para></para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a03f26690da8f5472df854b872d19c4dd_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1aea71e451a13abd2c7cd20cc91a3bde37"/><section>
    <title>patch()</title>
<indexterm><primary>patch</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>patch</secondary></indexterm>
<para><computeroutput>patch ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP PATCH request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1ab9d3ca28d0842080c997e70ace05f876"/><section>
    <title>patchAsync()</title>
<indexterm><primary>patchAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>patchAsync</secondary></indexterm>
<para><computeroutput>patchAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP PATCH request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_ab9d3ca28d0842080c997e70ace05f876_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a02144f7eaaef7d69ccc3691fda9ea8a7"/><section>
    <title>post()</title>
<indexterm><primary>post</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>post</secondary></indexterm>
<para><computeroutput>post ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP POST request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a6eb0ff47b10b7158469751153fd8068d"/><section>
    <title>postAsync()</title>
<indexterm><primary>postAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>postAsync</secondary></indexterm>
<para><computeroutput>postAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP POST request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a6eb0ff47b10b7158469751153fd8068d_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a55d9d79e1ea4267eb4163c0249ea8ce6"/><section>
    <title>put()</title>
<indexterm><primary>put</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>put</secondary></indexterm>
<para><computeroutput>put ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an HTTP PUT request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceptions</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>GuzzleException</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a9ca35d0ff65a1b3f82696c816800af3e"/><section>
    <title>putAsync()</title>
<indexterm><primary>putAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>putAsync</secondary></indexterm>
<para><computeroutput>putAsync ( $uri, array $options = <computeroutput>[]</computeroutput>
)</computeroutput></para>
<para>Create and send an asynchronous HTTP PUT request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a9ca35d0ff65a1b3f82696c816800af3e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_guzzle_http_1a4a81ba549dcf2e189e634af20dabe6da"/><section>
    <title>requestAsync()</title>
<indexterm><primary>requestAsync</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>requestAsync</secondary></indexterm>
<para><computeroutput>requestAsync (string $method,  $uri, array $options = <computeroutput>[]</computeroutput>
)<computeroutput>[abstract]</computeroutput></computeroutput></para>
<para>Create and send an asynchronous HTTP request.</para>

<para>Use an absolute path to override the base path of the client, or a relative path to append to the base path of the client. The URL can contain the query string as well. Use an array to provide a URL template and additional variables to use in the URL template expansion.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string</entry><entry>$method</entry><entry>
<para>HTTP method </para>
</entry>
                            </row>
                            <row>
<entry>string | UriInterface</entry><entry>$uri</entry><entry>
<para>URI object or string. </para>
</entry>
                            </row>
                            <row>
<entry>array</entry><entry>$options</entry><entry>
<para>Request options to apply. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_guzzle_http_a4a81ba549dcf2e189e634af20dabe6da_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des variables</title>
<anchor xml:id="_namespace_guzzle_http_1aec54bf06e25919ac33719ef21e756b81"/><section>
    <title>ClientTrait</title>
<indexterm><primary>ClientTrait</primary><secondary>GuzzleHttp</secondary></indexterm>
<indexterm><primary>GuzzleHttp</primary><secondary>ClientTrait</secondary></indexterm>
<para><computeroutput><link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">trait</link> ClientTrait</computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">{
&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;<emphasis role="keyword">abstract</emphasis>&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">function</emphasis>&#32;request(<emphasis role="keywordtype">string</emphasis>&#32;$method,&#32;$uri,&#32;array&#32;<link linkend="_common_8tabs_8php_1a011800c63ece4cbbfa77136a20607023">$options</link>&#32;=&#32;[]):&#32;ResponseInterface
</programlisting>
<para><link linkend="_class_guzzle_http_1_1_client">Client</link> interface for sending HTTP requests. </para>
</section>
</section>
</section>
