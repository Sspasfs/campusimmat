<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_sabre_1_1_h_t_t_p" xml:lang="fr">
<title>Référence de l&apos;espace de nommage Sabre\HTTP</title>
<indexterm><primary>Sabre\HTTP</primary></indexterm>
<simplesect>
    <title>Espaces de nommage    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_sabre_1_1_h_t_t_p_1_1_auth">Auth</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Structures de données    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_client">Client</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_client_exception">ClientException</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_client_http_exception">ClientHttpException</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_http_exception">HttpException</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_message">Message</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_message_interface">MessageInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_request">Request</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_request_decorator">RequestDecorator</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_request_interface">RequestInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_response">Response</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_response_decorator">ResponseDecorator</link></para>
</listitem>
            <listitem><para>interface <link linkend="_interface_sabre_1_1_h_t_t_p_1_1_response_interface">ResponseInterface</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_sapi">Sapi</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_sabre_1_1_h_t_t_p_1_1_version">Version</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Fonctions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1adb4379bcc4284afb8ae9f66a3e0fba3c">parseDate</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">dateString</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ab286a9346b2e58920adab8d0b455f778">toDate</link> (DateTime $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">dateTime</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a2c1f2730cef302e3a949439b90376d72">negotiateContentType</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">acceptHeaderValue</link>, array $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">availableOptions</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a5f7d2a0ffa7631315c67a6848d9b9f1e">parsePrefer</link> ($input)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a85861ac0fc4c2ce6adf7e059f791cb8f">getHeaderValues</link> ($<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values</link>, $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">values2</link>=null)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1afd62398fff0d6140a8cff70a7d81737b">parseMimeType</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">str</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1aa2a2d2881c640b22b74c3d782a0a6d4f">encodePath</link> (string $path)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1aee60eb4a3452ea2ae080390c91a3d0bd">encodePathSegment</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">pathSegment</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ac45ba558a714842a9516fbac02f4ff2a">decodePath</link> (string $path)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a0552fc00e284a9415f3c54e533f64266">decodePathSegment</link> (string $path)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1afb864b6a972dcfe3cdd645b663fd99e1">getBodyAsStream</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a6043c5ae19735e84fd175f1fcd6c1af4">getBodyAsString</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ad7bab1db052fb9fcc8bd0b4f3eac29ac">getBody</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a043c9fa5f271098eb80d5949ba1d6a11">setBody</link> ($body)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a157e0005d82edaa21cbea07fdc5c62da">getHeaders</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1adab88ffd7ef2e5dae162ab869470b5ad">hasHeader</link> (string $name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1acb98664b303c189cc4bca69025ab598c">getHeader</link> (string $name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a3bd74e7149d88b76967372864eb871f2">getHeaderAsArray</link> (string $name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a1b393ab5237dc8fbcafa9e35bcdab54a">setHeader</link> (string $name, $value)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ad62c7c9cad0e3ccfdbff9144c914090b">setHeaders</link> (array $headers)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1acbb69f9b3215914de824c10b97b3d787">addHeader</link> (string $name, $value)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a85a6d5f51105c2bca707cb4d05ceaa86">addHeaders</link> (array $headers)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1a2253d802ee1fbf8d9a8beaffa2301d67">removeHeader</link> (string $name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ad77e4dfb8ec738fd61dc6abaa6cc7ffa">setHttpVersion</link> (string $<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">version</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespace_sabre_1_1_h_t_t_p_1ae1ac6caa3c50c032c5003a6e189443cf">getHttpVersion</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">trait</link> <link linkend="_namespace_sabre_1_1_h_t_t_p_1abe7e798fd615d11ff38dc94d10e1a220">MessageDecoratorTrait</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentation des fonctions</title>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1acbb69f9b3215914de824c10b97b3d787"/><section>
    <title>addHeader()</title>
<indexterm><primary>addHeader</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>addHeader</secondary></indexterm>
<para><computeroutput>addHeader (string $name,  $value)</computeroutput></para>
<para>Adds a HTTP header.</para>

<para>This method will not overwrite any existing HTTP header, but instead add another value. Individual values can be retrieved with getHeadersAsArray.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | string[]</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a85a6d5f51105c2bca707cb4d05ceaa86"/><section>
    <title>addHeaders()</title>
<indexterm><primary>addHeaders</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>addHeaders</secondary></indexterm>
<para><computeroutput>addHeaders (array $headers)</computeroutput></para>
<para>Adds a new set of HTTP headers.</para>

<para>Any existing headers will not be overwritten. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ac45ba558a714842a9516fbac02f4ff2a"/><section>
    <title>decodePath()</title>
<indexterm><primary>decodePath</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>decodePath</secondary></indexterm>
<para><computeroutput>decodePath (string $path)</computeroutput></para>
<para>Decodes a url-encoded path. </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_ac45ba558a714842a9516fbac02f4ff2a_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_ac45ba558a714842a9516fbac02f4ff2a_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a0552fc00e284a9415f3c54e533f64266"/><section>
    <title>decodePathSegment()</title>
<indexterm><primary>decodePathSegment</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>decodePathSegment</secondary></indexterm>
<para><computeroutput>decodePathSegment (string $path)</computeroutput></para>
<para>Decodes a url-encoded path segment. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a0552fc00e284a9415f3c54e533f64266_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1aa2a2d2881c640b22b74c3d782a0a6d4f"/><section>
    <title>encodePath()</title>
<indexterm><primary>encodePath</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>encodePath</secondary></indexterm>
<para><computeroutput>encodePath (string $path)</computeroutput></para>
<para>Encodes the path of a url.</para>

<para>slashes (/) are treated as path-separators. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1aee60eb4a3452ea2ae080390c91a3d0bd"/><section>
    <title>encodePathSegment()</title>
<indexterm><primary>encodePathSegment</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>encodePathSegment</secondary></indexterm>
<para><computeroutput>encodePathSegment (string $pathSegment)</computeroutput></para>
<para>Encodes a 1 segment of a path.</para>

<para>Slashes are considered part of the name, and are encoded as %2f </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ad7bab1db052fb9fcc8bd0b4f3eac29ac"/><section>
    <title>getBody()</title>
<indexterm><primary>getBody</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getBody</secondary></indexterm>
<para><computeroutput>getBody ( )</computeroutput></para>
<para>Returns the message body, as its internal representation.</para>

<para>This could be either a string or a stream.</para>

<para><formalpara><title>Renvoie</title>

<para>resource|string </para>
</formalpara>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1afb864b6a972dcfe3cdd645b663fd99e1"/><section>
    <title>getBodyAsStream()</title>
<indexterm><primary>getBodyAsStream</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getBodyAsStream</secondary></indexterm>
<para><computeroutput>getBodyAsStream ( )</computeroutput></para>
<para>Returns the body as a readable stream resource.</para>

<para>Note that the stream may not be rewindable, and therefore may only be read once.</para>

<para><formalpara><title>Renvoie</title>

<para>resource </para>
</formalpara>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a6043c5ae19735e84fd175f1fcd6c1af4"/><section>
    <title>getBodyAsString()</title>
<indexterm><primary>getBodyAsString</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getBodyAsString</secondary></indexterm>
<para><computeroutput>getBodyAsString ( )</computeroutput></para>
<para>Returns the body as a string.</para>

<para>Note that because the underlying data may be based on a stream, this method could only work correctly the first time. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a6043c5ae19735e84fd175f1fcd6c1af4_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1acb98664b303c189cc4bca69025ab598c"/><section>
    <title>getHeader()</title>
<indexterm><primary>getHeader</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getHeader</secondary></indexterm>
<para><computeroutput>getHeader (string $name)</computeroutput></para>
<para>Returns a specific HTTP header, based on its name.</para>

<para>The name must be treated as case-insensitive. If the header does not exist, this method must return null.</para>

<para>If a header appeared more than once in a HTTP request, this method will concatenate all the values with a comma.</para>

<para>Note that this not make sense for all headers. Some, such as <computeroutput>Set-Cookie</computeroutput> cannot be logically combined with a comma. In those cases you <emphasis>should</emphasis> use getHeaderAsArray().</para>

<para><formalpara><title>Renvoie</title>

<para>string|null </para>
</formalpara>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a3bd74e7149d88b76967372864eb871f2"/><section>
    <title>getHeaderAsArray()</title>
<indexterm><primary>getHeaderAsArray</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getHeaderAsArray</secondary></indexterm>
<para><computeroutput>getHeaderAsArray (string $name)</computeroutput></para>
<para>Returns a HTTP header as an array.</para>

<para>For every time the HTTP header appeared in the request or response, an item will appear in the array.</para>

<para>If the header did not exist, this method will return an empty array. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a157e0005d82edaa21cbea07fdc5c62da"/><section>
    <title>getHeaders()</title>
<indexterm><primary>getHeaders</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getHeaders</secondary></indexterm>
<para><computeroutput>getHeaders ( )</computeroutput></para>
<para>Returns all the HTTP headers as an array.</para>

<para>Every header is returned as an array, with one or more values. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a85861ac0fc4c2ce6adf7e059f791cb8f"/><section>
    <title>getHeaderValues()</title>
<indexterm><primary>getHeaderValues</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getHeaderValues</secondary></indexterm>
<para><computeroutput>getHeaderValues ( $values,  $values2 = <computeroutput>null</computeroutput>
)</computeroutput></para>
<para>This method splits up headers into all their individual values.</para>

<para>A HTTP header may have more than one header, such as this: Cache-Control: private, no-store</para>

<para>Header values are always split with a comma.</para>

<para>You can pass either a string, or an array. The resulting value is always an array with each spliced value.</para>

<para>If the second headers argument is set, this value will simply be merged in. This makes it quicker to merge an old list of values with a new set.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | string[]</entry><entry>$values</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>string | string[]</entry><entry>$values2</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a85861ac0fc4c2ce6adf7e059f791cb8f_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ae1ac6caa3c50c032c5003a6e189443cf"/><section>
    <title>getHttpVersion()</title>
<indexterm><primary>getHttpVersion</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>getHttpVersion</secondary></indexterm>
<para><computeroutput>getHttpVersion ( )</computeroutput></para>
<para>Returns the HTTP version. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1adab88ffd7ef2e5dae162ab869470b5ad"/><section>
    <title>hasHeader()</title>
<indexterm><primary>hasHeader</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>hasHeader</secondary></indexterm>
<para><computeroutput>hasHeader (string $name)</computeroutput></para>
<para>Will return true or false, depending on if a HTTP header exists. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a2c1f2730cef302e3a949439b90376d72"/><section>
    <title>negotiateContentType()</title>
<indexterm><primary>negotiateContentType</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>negotiateContentType</secondary></indexterm>
<para><computeroutput>negotiateContentType ( $acceptHeaderValue, array $availableOptions)</computeroutput></para>
<para>This function can be used to aid with content negotiation.</para>

<para>It takes 2 arguments, the $acceptHeaderValue, which usually comes from an Accept header, and $availableOptions, which contains an array of items that the server can support.</para>

<para>The result of this function will be the &apos;best possible option&apos;. If no best possible option could be found, null is returned.</para>

<para>When it&apos;s null you can according to the spec either return a default, or you can choose to emit 406 Not Acceptable.</para>

<para>The method also accepts sending &apos;null&apos; for the $acceptHeaderValue, implying that no accept header was sent.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | null</entry><entry>$acceptHeaderValue</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Renvoie</title>

<para>string|null </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a2c1f2730cef302e3a949439b90376d72_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1adb4379bcc4284afb8ae9f66a3e0fba3c"/><section>
    <title>parseDate()</title>
<indexterm><primary>parseDate</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>parseDate</secondary></indexterm>
<para><computeroutput>parseDate (string $dateString)</computeroutput></para>
<para>A collection of useful helpers for parsing or generating various HTTP headers.</para>

<para><formalpara><title>Copyright</title>

<para>Copyright (C) fruux GmbH (<link xlink:href="https://fruux.com/">https://fruux.com/</link>) </para>
</formalpara>
<formalpara><title>Auteur</title>

<para>Evert Pot (<link xlink:href="http://evertpot.com/">http://evertpot.com/</link>) @license <link xlink:href="http://sabre.io/license/">http://sabre.io/license/</link> Modified BSD License Parses a HTTP date-string.</para>
</formalpara>
This method returns false if the date is invalid.</para>

<para>The following formats are supported: Sun, 06 Nov 1994 08:49:37 GMT ; IMF-fixdate Sunday, 06-Nov-94 08:49:37 GMT ; obsolete RFC 850 format Sun Nov 6 08:49:37 1994 ; ANSI C&apos;s <link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">asctime()</link> format</para>

<para>See: <link xlink:href="http://tools.ietf.org/html/rfc7231#section-7.1.1.1">http://tools.ietf.org/html/rfc7231#section-7.1.1.1</link></para>

<para><formalpara><title>Renvoie</title>

<para>bool|DateTime </para>
</formalpara>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_adb4379bcc4284afb8ae9f66a3e0fba3c_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1afd62398fff0d6140a8cff70a7d81737b"/><section>
    <title>parseMimeType()</title>
<indexterm><primary>parseMimeType</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>parseMimeType</secondary></indexterm>
<para><computeroutput>parseMimeType (string $str)</computeroutput></para>
<para>Parses a mime-type and splits it into:.</para>

<para><orderedlist>
<listitem>
<para>type</para>
</listitem><listitem>
<para>subtype</para>
</listitem><listitem>
<para>quality</para>
</listitem><listitem>
<para>parameters </para>
</listitem></orderedlist>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a5f7d2a0ffa7631315c67a6848d9b9f1e"/><section>
    <title>parsePrefer()</title>
<indexterm><primary>parsePrefer</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>parsePrefer</secondary></indexterm>
<para><computeroutput>parsePrefer ( $input)</computeroutput></para>
<para>Parses the Prefer header, as defined in RFC7240.</para>

<para>Input can be given as a single header value (string) or multiple headers (array of string).</para>

<para>This method will return a key-&gt;value array with the various Prefer parameters.</para>

<para>Prefer: return=minimal will result in:</para>

<para>[ &apos;return&apos; =&gt; &apos;minimal&apos; ]</para>

<para>Prefer: foo, wait=10 will result in:</para>

<para>[ &apos;foo&apos; =&gt; true, &apos;wait&apos; =&gt; &apos;10&apos;]</para>

<para>This method also supports the formats from older drafts of RFC7240, and it will automatically map them to the new values, as the older values are still pretty common.</para>

<para>Parameters are currently discarded. There&apos;s no known prefer value that uses them.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | string[]</entry><entry>$input</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
Voici le graphe d&apos;appel pour cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a5f7d2a0ffa7631315c67a6848d9b9f1e_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_a5f7d2a0ffa7631315c67a6848d9b9f1e_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a2253d802ee1fbf8d9a8beaffa2301d67"/><section>
    <title>removeHeader()</title>
<indexterm><primary>removeHeader</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>removeHeader</secondary></indexterm>
<para><computeroutput>removeHeader (string $name)</computeroutput></para>
<para>Removes a HTTP header.</para>

<para>The specified header name must be treated as case-insensitive. This method should return true if the header was successfully deleted, and false if the header did not exist. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a043c9fa5f271098eb80d5949ba1d6a11"/><section>
    <title>setBody()</title>
<indexterm><primary>setBody</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>setBody</secondary></indexterm>
<para><computeroutput>setBody ( $body)</computeroutput></para>
<para>Updates the body resource with a new stream.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>resource | string | callable</entry><entry>$body</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1a1b393ab5237dc8fbcafa9e35bcdab54a"/><section>
    <title>setHeader()</title>
<indexterm><primary>setHeader</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>setHeader</secondary></indexterm>
<para><computeroutput>setHeader (string $name,  $value)</computeroutput></para>
<para>Updates a HTTP header.</para>

<para>The case-sensitivity of the name value must be retained as-is.</para>

<para>If the header already existed, it will be overwritten.</para>

<para>
                <formalpara>
                    <title>
Paramètres</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>string | string[]</entry><entry>$value</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ad62c7c9cad0e3ccfdbff9144c914090b"/><section>
    <title>setHeaders()</title>
<indexterm><primary>setHeaders</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>setHeaders</secondary></indexterm>
<para><computeroutput>setHeaders (array $headers)</computeroutput></para>
<para>Sets a new set of HTTP headers.</para>

<para>The headers array should contain headernames for keys, and their value should be specified as either a string or an array.</para>

<para>Any header that already existed will be overwritten. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ad77e4dfb8ec738fd61dc6abaa6cc7ffa"/><section>
    <title>setHttpVersion()</title>
<indexterm><primary>setHttpVersion</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>setHttpVersion</secondary></indexterm>
<para><computeroutput>setHttpVersion (string $version)</computeroutput></para>
<para>Sets the HTTP version.</para>

<para>Should be 1.0, 1.1 or 2.0. </para>
</section>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1ab286a9346b2e58920adab8d0b455f778"/><section>
    <title>toDate()</title>
<indexterm><primary>toDate</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>toDate</secondary></indexterm>
<para><computeroutput>toDate (DateTime $dateTime)</computeroutput></para>
<para>Transforms a DateTime object to a valid HTTP/1.1 Date header value. </para>
Voici le graphe des appelants de cette fonction :<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_sabre_1_1_h_t_t_p_ab286a9346b2e58920adab8d0b455f778_icgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentation des variables</title>
<anchor xml:id="_namespace_sabre_1_1_h_t_t_p_1abe7e798fd615d11ff38dc94d10e1a220"/><section>
    <title>MessageDecoratorTrait</title>
<indexterm><primary>MessageDecoratorTrait</primary><secondary>Sabre\HTTP</secondary></indexterm>
<indexterm><primary>Sabre\HTTP</primary><secondary>MessageDecoratorTrait</secondary></indexterm>
<para><computeroutput><link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">trait</link> MessageDecoratorTrait</computeroutput></para><emphasis role="strong">Valeur initiale :</emphasis><programlisting linenumbering="unnumbered">{
&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>&#32;<link linkend="_report_8contract_8php_1a77b973d137fb33212e018b042df6e3e7">$inner</link>
</programlisting>
<para>This trait contains a bunch of methods, shared by both the RequestDecorator and the ResponseDecorator.</para>

<para>Didn&apos;t seem needed to create a full class for this, so we&apos;re just implementing it as a trait.</para>

<para><formalpara><title>Copyright</title>

<para>Copyright (C) fruux GmbH (<link xlink:href="https://fruux.com/">https://fruux.com/</link>) </para>
</formalpara>
<formalpara><title>Auteur</title>

<para>Evert Pot (<link xlink:href="http://evertpot.com/">http://evertpot.com/</link>) @license <link xlink:href="http://sabre.io/license/">http://sabre.io/license/</link> Modified BSD License </para>
</formalpara>
</para>
</section>
</section>
</section>
